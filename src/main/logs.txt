********************************************************************************************
****************************************INITIALIZING****************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

clean:
   [delete] Deleting directory /home/durande/Bureau/AlphaZeroICGA/src/main/bin
   [delete] Deleting directory /home/durande/Bureau/AlphaZeroICGA/src/main/agents
   [delete] Deleting directory /home/durande/Bureau/AlphaZeroICGA/src/main/datasets
   [delete] Deleting directory /home/durande/Bureau/AlphaZeroICGA/src/main/models

BUILD SUCCESSFUL
Total time: 0 seconds
********************************************************************************************
*****************************************COMPILING******************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:
    [mkdir] Created dir: /home/durande/Bureau/AlphaZeroICGA/src/main/bin
    [mkdir] Created dir: /home/durande/Bureau/AlphaZeroICGA/src/main/models
    [mkdir] Created dir: /home/durande/Bureau/AlphaZeroICGA/src/main/agents
    [mkdir] Created dir: /home/durande/Bureau/AlphaZeroICGA/src/main/datasets
    [touch] Creating /home/durande/Bureau/AlphaZeroICGA/src/main/models/winners.txt

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml
    [javac] Compiling 3 source files to /home/durande/Bureau/AlphaZeroICGA/src/main/bin

BUILD SUCCESSFUL
Total time: 1 second
********************************************************************************************
************************************ITERATION ALPHAZERO 0***********************************
********************************************************************************************
****************************************MCTS TRIALS*****************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

mcts_trials:
     [java] --> No model found, starting from random policy
     [java] --> No model found, starting from random policy
     [java] --> Running 1 games
     [java] * X shape (221, 8, 8, 145)
     [java] * y_values shape (221,)
     [java] * y_distrib shape (221, 8, 8, 32)
     [java] * AI1 winrate: 1.0
     [java] * AI2 winrate: 0.0
     [java] * Draws: 0.0
     [java] * Mean game duration 7.5043158531188965
     [java] * Max game duration 7.5043158531188965
     [java] --> Saving data to pickle for the game : Bashni
     [java] --> Done !
     [java]          214405 function calls (214184 primitive calls) in 7.664 seconds
     [java] 
     [java]    Ordered by: standard name
     [java] 
     [java]    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     [java]       221    0.001    0.000    0.010    0.000 <__array_function__ internals>:177(append)
     [java]       221    0.001    0.000    0.006    0.000 <__array_function__ internals>:177(concatenate)
     [java]       221    0.002    0.000    0.003    0.000 <__array_function__ internals>:177(copyto)
     [java]       221    0.001    0.000    0.019    0.000 <__array_function__ internals>:177(moveaxis)
     [java]       442    0.003    0.000    0.024    0.000 <__array_function__ internals>:177(sum)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:144(_DType_reduce)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:162(_mean)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:38(_amax)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:66(_count_reduce_items)
     [java]       442    0.001    0.000    0.001    0.000 fromnumeric.py:2155(_sum_dispatcher)
     [java]       442    0.004    0.000    0.019    0.000 fromnumeric.py:2160(sum)
     [java]       442    0.004    0.000    0.014    0.000 fromnumeric.py:69(_wrapreduction)
     [java]       442    0.001    0.000    0.001    0.000 fromnumeric.py:70(<dictcomp>)
     [java]       221    0.000    0.000    0.000    0.000 function_base.py:5333(_append_dispatcher)
     [java]       221    0.001    0.000    0.008    0.000 function_base.py:5337(append)
     [java]         3    0.000    0.000    0.002    0.001 genericpath.py:16(exists)
     [java]      3526    0.179    0.000    0.507    0.000 mcts_uct.py:142(select_node)
     [java]         2    0.000    0.000    0.001    0.000 mcts_uct.py:16(__init__)
     [java]       221    0.028    0.000    3.026    0.014 mcts_uct.py:230(final_move_selection)
     [java]      2422    0.123    0.000    0.334    0.000 mcts_uct.py:290(__init__)
     [java]      2422    0.068    0.000    0.068    0.000 mcts_uct.py:307(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 mcts_uct.py:37(init_ai)
     [java]       221    3.779    0.017    7.433    0.034 mcts_uct.py:41(select_action)
     [java]       221    0.000    0.000    0.000    0.000 multiarray.py:1071(copyto)
     [java]       221    0.000    0.000    0.000    0.000 multiarray.py:148(concatenate)
     [java]       442    0.005    0.000    0.009    0.000 numeric.py:1341(normalize_axis_tuple)
     [java]       442    0.001    0.000    0.002    0.000 numeric.py:1391(<listcomp>)
     [java]       221    0.000    0.000    0.000    0.000 numeric.py:1400(_moveaxis_dispatcher)
     [java]       221    0.004    0.000    0.017    0.000 numeric.py:1404(moveaxis)
     [java]       221    0.000    0.000    0.000    0.000 numeric.py:1466(<listcomp>)
     [java]       221    0.002    0.000    0.007    0.000 numeric.py:289(full)
     [java]     13248    0.060    0.000    0.098    0.000 random.py:238(_randbelow_with_getrandbits)
     [java]       674    0.003    0.000    0.008    0.000 random.py:291(randrange)
     [java]       674    0.002    0.000    0.010    0.000 random.py:335(randint)
     [java]      2422    0.032    0.000    0.128    0.000 random.py:349(shuffle)
     [java]       442    0.020    0.000    0.045    0.000 utils.py:112(softmax)
     [java]      4420    0.008    0.000    0.008    0.000 utils.py:126(rank_to_util)
     [java]      2210    0.048    0.000    0.077    0.000 utils.py:130(utilities)
     [java]      1312    0.003    0.000    0.003    0.000 utils.py:153(get_coord)
     [java]      1312    0.013    0.000    0.016    0.000 utils.py:157(index_action)
     [java]     31680    2.392    0.000    2.589    0.000 utils.py:253(format_positions)
     [java]       221    0.324    0.001    2.953    0.013 utils.py:264(format_state)
     [java]         1    0.000    0.000    0.202    0.202 utils.py:68(add_to_dataset)
     [java]       442    0.001    0.000    0.001    0.000 {built-in method _operator.index}
     [java]         1    0.021    0.021    0.021    0.021 {built-in method _pickle.dump}
     [java]      1312    0.002    0.000    0.002    0.000 {built-in method builtins.getattr}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
     [java]       443    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
     [java]     15442    0.022    0.000    0.022    0.000 {built-in method builtins.len}
     [java]      1325    0.003    0.000    0.003    0.000 {built-in method builtins.max}
     [java]        13    0.000    0.000    0.000    0.000 {built-in method builtins.print}
     [java]       221    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
     [java]         1    0.001    0.001    0.001    0.001 {built-in method io.open}
     [java]      1325    0.003    0.000    0.003    0.000 {built-in method math.log}
     [java]      3057    0.005    0.000    0.005    0.000 {built-in method math.sqrt}
     [java]       222    0.001    0.000    0.001    0.000 {built-in method numpy.array}
     [java]       222    0.000    0.000    0.000    0.000 {built-in method numpy.asanyarray}
     [java]       221    0.001    0.000    0.001    0.000 {built-in method numpy.asarray}
     [java] 1326/1105    0.010    0.000    0.049    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     [java]       443    0.001    0.000    0.001    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
     [java]       221    0.001    0.000    0.001    0.000 {built-in method numpy.empty}
     [java]     36757    0.145    0.000    0.145    0.000 {built-in method numpy.zeros}
     [java]         3    0.002    0.001    0.002    0.001 {built-in method posix.stat}
     [java]      2433    0.007    0.000    0.007    0.000 {built-in method time.time}
     [java]         1    0.179    0.179    0.179    0.179 {method '__exit__' of '_io._IOBase' objects}
     [java]      5488    0.007    0.000    0.007    0.000 {method 'append' of 'list' objects}
     [java]       221    0.001    0.000    0.001    0.000 {method 'argmax' of 'numpy.ndarray' objects}
     [java]     13248    0.015    0.000    0.015    0.000 {method 'bit_length' of 'int' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     [java]     21396    0.023    0.000    0.023    0.000 {method 'getrandbits' of '_random.Random' objects}
     [java]       221    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
     [java]       442    0.001    0.000    0.001    0.000 {method 'items' of 'dict' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'mean' of 'numpy.ndarray' objects}
     [java]      2201    0.004    0.000    0.004    0.000 {method 'pop' of 'list' objects}
     [java]       444    0.008    0.000    0.008    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     [java]     31901    0.083    0.000    0.083    0.000 {method 'reshape' of 'numpy.ndarray' objects}
     [java]       221    0.001    0.000    0.001    0.000 {method 'transpose' of 'numpy.ndarray' objects}
     [java] 
     [java] 

BUILD SUCCESSFUL
Total time: 15 seconds
********************************************************************************************
***************************************TRAINING MODEL***************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

train_model:
     [exec] --> Loading dataset for the game : Bashni
     [exec] * Number of examples in the dataset : 221
     [exec] * X shape (221, 8, 8, 145)
     [exec] * y_values shape (221,)
     [exec] * y_distrib shape (221, 8, 8, 32)
     [exec] --> Done !
     [exec] --> No model found, creating the champion
     [exec] Epoch 1/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6387 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 7s 7s/step - loss: 5.6387 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4438 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 2/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6384 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 905ms/step - loss: 5.6384 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4435 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 3/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6382 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 901ms/step - loss: 5.6382 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4433 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 4/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6379 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 889ms/step - loss: 5.6379 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4430 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 5/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6377 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 897ms/step - loss: 5.6377 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4428 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 6/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6374 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 907ms/step - loss: 5.6374 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4426 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 7/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6372 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 891ms/step - loss: 5.6372 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4423 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 8/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6370 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 899ms/step - loss: 5.6370 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4421 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 9/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6367 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 884ms/step - loss: 5.6367 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4419 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201Epoch 10/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.6365 - value_head_loss: 1.0000 - policy_head_loss: 7.91061/1 [==============================] - 1s 899ms/step - loss: 5.6365 - value_head_loss: 1.0000 - policy_head_loss: 7.9106 - val_loss: 5.4416 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6201
     [exec] 
     [exec] --> Saving model for the game : Bashni , model type : champion
     [exec] --> Done !

BUILD SUCCESSFUL
Total time: 22 seconds
********************************************************************************************
************************************ITERATION ALPHAZERO 1***********************************
********************************************************************************************
****************************************MCTS TRIALS*****************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

mcts_trials:
     [java] --> Loading model for the game : Bashni , model type : champion
     [java] --> Done !
     [java] --> Loading model for the game : Bashni , model type : champion
     [java] --> Done !
     [java] --> Running 1 games
     [java] * X shape (83, 8, 8, 145)
     [java] * y_values shape (83,)
     [java] * y_distrib shape (83, 8, 8, 32)
     [java] * AI1 winrate: 1.0
     [java] * AI2 winrate: 0.0
     [java] * Draws: 0.0
     [java] * Mean game duration 143.66513752937317
     [java] * Max game duration 143.66513752937317
     [java] --> Saving data to pickle for the game : Bashni
     [java] --> Done !
     [java]          30680695 function calls (29617616 primitive calls) in 154.579 seconds
     [java] 
     [java]    Ordered by: standard name
     [java] 
     [java]    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     [java]       830    0.006    0.000    0.055    0.000 <__array_function__ internals>:177(any)
     [java]       913    0.005    0.000    0.039    0.000 <__array_function__ internals>:177(append)
     [java]      3328    0.017    0.000    0.164    0.000 <__array_function__ internals>:177(array_equal)
     [java]       913    0.005    0.000    0.023    0.000 <__array_function__ internals>:177(concatenate)
     [java]      1743    0.013    0.000    0.030    0.000 <__array_function__ internals>:177(copyto)
     [java]       830    0.004    0.000    0.032    0.000 <__array_function__ internals>:177(cumsum)
     [java]       830    0.005    0.000    0.050    0.000 <__array_function__ internals>:177(expand_dims)
     [java]       913    0.005    0.000    0.075    0.000 <__array_function__ internals>:177(moveaxis)
     [java]      1660    0.010    0.000    0.024    0.000 <__array_function__ internals>:177(ndim)
     [java]       974    0.004    0.000    0.046    0.000 <__array_function__ internals>:177(prod)
     [java]       966    0.005    0.000    0.059    0.000 <__array_function__ internals>:177(product)
     [java]       996    0.006    0.000    0.047    0.000 <__array_function__ internals>:177(sum)
     [java]      2490    0.015    0.000    0.053    0.000 <__array_function__ internals>:177(where)
     [java]        18    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap>:1002(_find_and_load)
     [java]        17    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap>:1018(_gcd_import)
     [java]     11178    0.045    0.000    0.071    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
     [java]        35    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:112(release)
     [java]        18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:152(__init__)
     [java]        18    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:156(__enter__)
     [java]        18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:160(__exit__)
     [java]        35    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:166(_get_module_lock)
     [java]        35    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:185(cb)
     [java]        17    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:203(_lock_unlock_module)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:220(_call_with_frames_removed)
     [java]         9    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:231(_verbose_message)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:351(__init__)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:385(cached)
     [java]      5877    0.019    0.000    0.027    0.000 <frozen importlib._bootstrap>:398(parent)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:406(has_location)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:486(_init_module_attrs)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:558(module_from_spec)
     [java]        35    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
     [java]         1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:659(_load_unlocked)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:736(find_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:811(find_spec)
     [java]        35    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:87(acquire)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:874(__enter__)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:878(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:901(_find_spec)
     [java]        17    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:948(_sanity_check)
     [java]         1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap>:967(_find_and_load_unlocked)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1017(path_stats)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1022(_cache_bytecode)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1027(set_data)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:104(_path_isdir)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:120(_write_atomic)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1272(_path_importer_cache)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1309(_get_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1341(find_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1433(_get_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1438(find_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1564(_get_supported_file_loaders)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:301(cache_from_source)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:40(_relax_case)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:431(_get_cached)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:443(_calc_mode)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:46(_pack_uint32)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:463(_check_name_wrapper)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:500(_classify_pyc)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_unpack_uint32)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:533(_validate_timestamp_pyc)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:585(_compile_bytecode)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:598(_code_to_timestamp_pyc)
     [java]         8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:636(spec_from_file_location)
     [java]         8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
     [java]         6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_path_split)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:773(is_package)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:781(create_module)
     [java]         2    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:784(exec_module)
     [java]         6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:848(source_to_code)
     [java]         2    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:856(get_code)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:90(_path_is_mode_type)
     [java]         2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:946(__init__)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:971(get_filename)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:976(get_data)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:99(_path_isfile)
     [java]      7386    0.023    0.000    0.036    0.000 <string>:1(<lambda>)
     [java]         1    0.000    0.000    0.000    0.000 __autograph_generated_file2qayl0fv.py:2(<module>)
     [java]         1    0.000    0.000    0.000    0.000 __autograph_generated_file2qayl0fv.py:2(outer_factory)
     [java]         2    0.000    0.000    0.000    0.000 __autograph_generated_file2qayl0fv.py:6(inner_factory)
     [java]         2    0.000    0.000    3.017    1.508 __autograph_generated_file2qayl0fv.py:8(tf__predict_function)
     [java]        17    0.000    0.000    0.002    0.000 __init__.py:109(import_module)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:1272(disable)
     [java]      1070    0.006    0.000    0.158    0.000 __init__.py:135(deserialize)
     [java]         2    0.000    0.000    0.000    0.000 __init__.py:138(get)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:1420(debug)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:144(_DType_reduce)
     [java]      1678    0.010    0.000    0.182    0.000 __init__.py:146(get)
     [java]      4984    0.021    0.000    0.035    0.000 __init__.py:1493(log)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:1671(getEffectiveLevel)
     [java]      4985    0.008    0.000    0.008    0.000 __init__.py:1685(isEnabledFor)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:214(_acquireLock)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:223(_releaseLock)
     [java]        92    0.000    0.000    0.000    0.000 __init__.py:26(get_globals)
     [java]         8    0.000    0.000    0.000    0.000 __init__.py:278(__getattr__)
     [java]         4    0.000    0.000    0.020    0.005 __init__.py:299(loads)
     [java]      1070    0.005    0.000    0.013    0.000 __init__.py:35(populate_deserializable_objects)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:43(normalize_encoding)
     [java]       172    0.001    0.000    0.001    0.000 __init__.py:437(_make)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:55(__getattr__)
     [java]         2    0.000    0.000    0.000    0.000 __init__.py:581(__init__)
     [java]       312    0.000    0.000    0.000    0.000 __init__.py:595(__missing__)
     [java]         2    0.000    0.000    0.000    0.000 __init__.py:649(update)
     [java]         1    0.000    0.000    0.001    0.001 __init__.py:70(search_function)
     [java]         2    0.000    0.000    0.002    0.001 __init__.py:93(deserialize)
     [java]      2366    0.003    0.000    0.003    0.000 _collections_abc.py:262(__subclasshook__)
     [java]        81    0.000    0.000    0.000    0.000 _collections_abc.py:283(__subclasshook__)
     [java]       261    0.000    0.000    0.000    0.000 _collections_abc.py:315(__subclasshook__)
     [java]        35    0.000    0.000    0.000    0.000 _collections_abc.py:381(__subclasshook__)
     [java]      1926    0.002    0.000    0.002    0.000 _collections_abc.py:409(__subclasshook__)
     [java]     12206    0.051    0.000    0.237    0.000 _collections_abc.py:759(get)
     [java]      6376    0.020    0.000    0.114    0.000 _collections_abc.py:766(__contains__)
     [java]     23656    0.086    0.000    0.129    0.000 _collections_abc.py:778(items)
     [java]         1    0.000    0.000    0.000    0.000 _collections_abc.py:78(_check_methods)
     [java]     23656    0.043    0.000    0.043    0.000 _collections_abc.py:801(__init__)
     [java]     71398    0.333    0.000    0.334    0.000 _collections_abc.py:848(__iter__)
     [java]      1032    0.003    0.000    0.005    0.000 _collections_abc.py:979(__iter__)
     [java]    145856    0.412    0.000    0.932    0.000 _collections_abc.py:995(__reversed__)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:162(_mean)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:38(_amax)
     [java]      3328    0.011    0.000    0.049    0.000 _methods.py:60(_all)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:66(_count_reduce_items)
     [java]        13    0.000    0.000    0.000    0.000 _weakrefset.py:117(update)
     [java]        61    0.000    0.000    0.000    0.000 _weakrefset.py:17(__init__)
     [java]        61    0.000    0.000    0.000    0.000 _weakrefset.py:21(__enter__)
     [java]        61    0.000    0.000    0.000    0.000 _weakrefset.py:27(__exit__)
     [java]       200    0.001    0.000    0.001    0.000 _weakrefset.py:37(__init__)
     [java]        11    0.000    0.000    0.000    0.000 _weakrefset.py:39(_remove)
     [java]        48    0.000    0.000    0.000    0.000 _weakrefset.py:53(_commit_removals)
     [java]        88    0.000    0.000    0.001    0.000 _weakrefset.py:59(__iter__)
     [java]        22    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
     [java] 23035/14583    0.057    0.000    0.127    0.000 abc.py:100(__subclasscheck__)
     [java]    309909    0.700    0.000    1.242    0.000 abc.py:96(__instancecheck__)
     [java]       164    0.001    0.000    0.336    0.002 activations.py:273(relu)
     [java]         4    0.000    0.000    0.011    0.003 activations.py:354(tanh)
     [java]        16    0.000    0.000    0.000    0.000 activations.py:459(linear)
     [java]        92    0.001    0.000    0.006    0.000 activations.py:519(deserialize)
     [java]       178    0.001    0.000    0.009    0.000 activations.py:562(get)
     [java]       9/3    0.000    0.000    0.000    0.000 activity.py:131(referenced)
     [java]        78    0.001    0.000    0.002    0.000 activity.py:181(finalize)
     [java]         7    0.000    0.000    0.000    0.000 activity.py:203(mark_param)
     [java]        14    0.000    0.000    0.000    0.000 activity.py:222(__init__)
     [java]         7    0.000    0.000    0.000    0.000 activity.py:236(__init__)
     [java]        13    0.000    0.000    0.000    0.000 activity.py:247(_in_constructor)
     [java]        74    0.001    0.000    0.004    0.000 activity.py:266(_track_symbol)
     [java]        78    0.000    0.000    0.002    0.000 activity.py:319(_enter_scope)
     [java]        78    0.000    0.000    0.002    0.000 activity.py:322(_exit_scope)
     [java]        77    0.000    0.000    0.003    0.000 activity.py:328(_exit_and_record_scope)
     [java]        25    0.000    0.000    0.017    0.001 activity.py:333(_process_statement)
     [java]         7    0.000    0.000    0.001    0.000 activity.py:370(visit_Expr)
     [java]         1    0.000    0.000    0.000    0.000 activity.py:373(visit_Raise)
     [java]         7    0.000    0.000    0.004    0.001 activity.py:376(visit_Return)
     [java]         5    0.000    0.000    0.003    0.001 activity.py:379(visit_Assign)
     [java]        61    0.000    0.000    0.003    0.000 activity.py:412(visit_Name)
     [java]        13    0.000    0.000    0.003    0.000 activity.py:431(visit_Attribute)
     [java]     19/14    0.000    0.000    0.011    0.001 activity.py:456(visit_Call)
     [java]        56    0.000    0.000    0.002    0.000 activity.py:543(_visit_node_list)
     [java]        56    0.000    0.000    0.002    0.000 activity.py:544(<listcomp>)
     [java]         7    0.000    0.000    0.001    0.000 activity.py:546(_visit_arg_annotations)
     [java]        14    0.000    0.000    0.002    0.000 activity.py:554(_visit_arg_declarations)
     [java]         7    0.000    0.000    0.024    0.003 activity.py:564(visit_FunctionDef)
     [java]         5    0.000    0.000    0.016    0.003 activity.py:644(visit_With)
     [java]         5    0.000    0.000    0.008    0.002 activity.py:650(visit_withitem)
     [java]         1    0.000    0.000    0.000    0.000 activity.py:692(visit_ExceptHandler)
     [java]         7    0.000    0.000    0.024    0.003 activity.py:703(resolve)
     [java]        85    0.001    0.000    0.002    0.000 activity.py:93(__init__)
     [java]         2    0.000    0.000    0.001    0.000 adam.py:102(__init__)
     [java]         2    0.002    0.001    0.892    0.446 adam.py:118(_create_slots)
     [java]         2    0.000    0.000    0.838    0.419 adam.py:151(set_weights)
     [java]        80    0.001    0.000    0.196    0.002 add.py:53(_merge_function)
     [java]     19948    0.050    0.000    0.079    0.000 ag_ctx.py:28(_control_ctx)
     [java]      4990    0.014    0.000    0.034    0.000 ag_ctx.py:34(control_status_ctx)
     [java]      2495    0.005    0.000    0.005    0.000 ag_ctx.py:64(__init__)
     [java]      4986    0.021    0.000    0.047    0.000 ag_ctx.py:68(__enter__)
     [java]      4986    0.029    0.000    0.074    0.000 ag_ctx.py:76(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 ag_ctx.py:91(_default_control_status_ctx)
     [java]      4996    0.018    0.000    0.129    0.000 ag_logging.py:110(get_verbosity)
     [java]      4996    0.015    0.000    0.143    0.000 ag_logging.py:117(has_verbosity)
     [java]      4993    0.014    0.000    0.157    0.000 ag_logging.py:134(log)
     [java]       749    0.003    0.000    0.007    0.000 anno.py:123(getanno)
     [java]      3340    0.011    0.000    0.022    0.000 anno.py:130(hasanno)
     [java]       532    0.003    0.000    0.006    0.000 anno.py:134(setanno)
     [java]      1164    0.003    0.000    0.011    0.000 anno.py:152(copyanno)
     [java]         1    0.000    0.000    0.001    0.001 anno.py:161(dup)
     [java]         2    0.000    0.000    0.000    0.000 api.py:148(__init__)
     [java]         2    0.000    0.000    0.000    0.000 api.py:155(get_effective_source_map)
     [java]         1    0.000    0.000    0.000    0.000 api.py:193(get_transformed_name)
     [java]         1    0.000    0.000    0.000    0.000 api.py:196(get_extra_locals)
     [java]         2    0.000    0.000    0.000    0.000 api.py:219(get_caching_key)
     [java]         1    0.000    0.000    0.005    0.005 api.py:222(initial_analysis)
     [java]         1    0.000    0.000    0.146    0.146 api.py:235(transform_ast)
     [java]         2    0.000    0.000    0.239    0.120 api.py:260(_convert_actual)
     [java]      4984    0.020    0.000    0.043    0.000 api.py:283(autograph_artifact)
     [java]      4988    0.012    0.000    0.018    0.000 api.py:291(is_autograph_artifact)
     [java] 2496/2492    0.050    0.000   30.548    0.012 api.py:295(converted_call)
     [java] 2494/2492    0.019    0.000   28.153    0.011 api.py:449(_call_unconverted)
     [java]      2492    0.032    0.000    0.313    0.000 api.py:492(tf_convert)
     [java]      2492    0.005    0.000    0.005    0.000 api.py:651(convert)
     [java]      2492    0.023    0.000    0.226    0.000 api.py:678(decorator)
     [java]      2492    0.027    0.000   30.392    0.012 api.py:681(wrapper)
     [java]      1660    0.007    0.000    6.824    0.004 array_ops.py:1112(slice)
     [java]      4152    0.022    0.000    0.094    0.000 array_ops.py:1569(_should_not_autopack)
     [java]      9136    0.014    0.000    0.014    0.000 array_ops.py:1575(<genexpr>)
     [java]      4152    0.012    0.000    0.106    0.000 array_ops.py:1579(_autopacking_conversion_function)
     [java]       976    0.006    0.000    0.103    0.000 array_ops.py:207(fill)
     [java]      7176    0.085    0.000    4.251    0.001 array_ops.py:251(identity)
     [java]       804    0.005    0.000    0.328    0.000 array_ops.py:2971(wrapped)
     [java]       804    0.030    0.000    0.324    0.000 array_ops.py:2979(zeros)
     [java]       172    0.006    0.000    0.056    0.000 array_ops.py:3238(ones)
     [java]       350    0.002    0.000    0.564    0.002 array_ops.py:3294(placeholder)
     [java]       830    0.011    0.000    2.933    0.004 array_ops.py:5059(gather)
     [java]       830    0.004    0.000    3.425    0.004 array_ops.py:5275(gather_v2)
     [java]       838    0.006    0.000    2.484    0.003 array_ops.py:66(reshape)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:1(<module>)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:13(Codec)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:20(IncrementalEncoder)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:24(IncrementalDecoder)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:28(StreamWriter)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:31(StreamReader)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:34(StreamConverter)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:41(getregentry)
     [java]       3/1    0.000    0.000    0.003    0.003 ast.py:1003(_function_helper)
     [java]         1    0.000    0.000    0.002    0.002 ast.py:1064(visit_With)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:1076(_str_literal_helper)
     [java]        48    0.000    0.000    0.000    0.000 ast.py:1082(escape_char)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:1096(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 ast.py:1106(<lambda>)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:1114(_write_str_avoiding_backslashes)
     [java]        24    0.000    0.000    0.000    0.000 ast.py:1188(visit_Name)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:1191(_write_docstring)
     [java]        11    0.000    0.000    0.000    0.000 ast.py:1197(_write_constant)
     [java]        11    0.000    0.000    0.000    0.000 ast.py:1206(visit_Constant)
     [java]         2    0.000    0.000    0.000    0.000 ast.py:1300(visit_Tuple)
     [java]         8    0.000    0.000    0.000    0.000 ast.py:1412(visit_Attribute)
     [java]       8/4    0.000    0.000    0.001    0.000 ast.py:1423(visit_Call)
     [java]         2    0.000    0.000    0.000    0.000 ast.py:1478(visit_arg)
     [java]         3    0.000    0.000    0.000    0.000 ast.py:1484(visit_arguments)
     [java]         4    0.000    0.000    0.000    0.000 ast.py:1535(visit_keyword)
     [java]         1    0.000    0.000    0.001    0.001 ast.py:1556(visit_withitem)
     [java]         1    0.000    0.000    0.003    0.003 ast.py:1562(unparse)
     [java]        97    0.001    0.000    0.002    0.000 ast.py:175(copy_location)
     [java]         1    0.000    0.000    0.004    0.004 ast.py:192(fix_missing_locations)
     [java]     116/1    0.001    0.000    0.004    0.004 ast.py:200(_fix)
     [java]      6786    0.014    0.000    0.019    0.000 ast.py:244(iter_fields)
     [java]       258    0.001    0.000    0.003    0.000 ast.py:256(iter_child_nodes)
     [java]        18    0.000    0.000    0.001    0.000 ast.py:33(parse)
     [java]        15    0.000    0.000    0.001    0.000 ast.py:369(walk)
     [java]   2379/47    0.011    0.000    0.187    0.004 ast.py:403(visit)
     [java]    238/16    0.003    0.000    0.011    0.001 ast.py:409(generic_visit)
     [java]       266    0.002    0.000    0.011    0.000 ast.py:419(visit_Constant)
     [java]   1586/67    0.024    0.000    0.135    0.002 ast.py:477(generic_visit)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:675(__init__)
     [java]       3/2    0.000    0.000    0.001    0.000 ast.py:683(interleave)
     [java]         2    0.000    0.000    0.000    0.000 ast.py:695(items_view)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:703(<lambda>)
     [java]        21    0.000    0.000    0.000    0.000 ast.py:705(maybe_newline)
     [java]        18    0.000    0.000    0.000    0.000 ast.py:710(fill)
     [java]       152    0.000    0.000    0.000    0.000 ast.py:716(write)
     [java]        12    0.000    0.000    0.000    0.000 ast.py:729(block)
     [java]        26    0.000    0.000    0.000    0.000 ast.py:743(delimit)
     [java]        16    0.000    0.000    0.000    0.000 ast.py:765(set_precedence)
     [java]         3    0.000    0.000    0.000    0.000 ast.py:769(get_raw_docstring)
     [java]        11    0.000    0.000    0.000    0.000 ast.py:785(get_type_comment)
     [java]      86/1    0.000    0.000    0.003    0.003 ast.py:790(traverse)
     [java]         1    0.000    0.000    0.003    0.003 ast.py:797(visit)
     [java]       3/1    0.000    0.000    0.003    0.003 ast.py:804(_write_docstring_and_traverse_body)
     [java]         7    0.000    0.000    0.001    0.000 ast.py:852(visit_Assign)
     [java]         3    0.000    0.000    0.000    0.000 ast.py:877(visit_Return)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:935(visit_Raise)
     [java]         1    0.000    0.000    0.001    0.001 ast.py:947(visit_Try)
     [java]         1    0.000    0.000    0.000    0.000 ast.py:962(visit_ExceptHandler)
     [java]       3/1    0.000    0.000    0.003    0.003 ast.py:997(visit_FunctionDef)
     [java]        67    0.001    0.000    0.006    0.000 ast3.py:173(visit_Name)
     [java]         4    0.000    0.000    0.000    0.000 ast3.py:183(visit_arg)
     [java]         2    0.000    0.000    0.001    0.001 ast3.py:198(visit_ExceptHandler)
     [java]         8    0.000    0.000    0.000    0.000 ast3.py:272(_make_arg)
     [java]        24    0.000    0.000    0.002    0.000 ast3.py:288(visit_Name)
     [java]         1    0.000    0.000    0.000    0.000 ast3.py:296(visit_ExceptHandler)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:416(visit_arguments)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:418(<listcomp>)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:424(<listcomp>)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:425(<listcomp>)
     [java]        18    0.000    0.000    0.021    0.001 ast3.py:436(ast_to_gast)
     [java]         1    0.000    0.000    0.006    0.006 ast3.py:440(gast_to_ast)
     [java]       119    0.004    0.000    0.007    0.000 ast_util.py:279(parallel_walk)
     [java]        34    0.000    0.000    0.000    0.000 ast_util.py:29(__init__)
     [java]    519/34    0.008    0.000    0.026    0.001 ast_util.py:33(copy)
     [java]     63/18    0.000    0.000    0.019    0.001 ast_util.py:37(<listcomp>)
     [java]        34    0.000    0.000    0.026    0.001 ast_util.py:59(copy_clean)
     [java]    187/40    0.000    0.000    0.026    0.001 astn.py:11(<listcomp>)
     [java]    317/19    0.006    0.000    0.027    0.001 astn.py:17(generic_visit)
     [java]    880/42    0.004    0.000    0.026    0.001 astn.py:9(_visit)
     [java]       500    0.006    0.000    0.009    0.000 attrs.py:278(__contains__)
     [java]      1004    0.004    0.000    0.005    0.000 attrs.py:47(__init__)
     [java]       504    0.039    0.000    0.069    0.000 attrs.py:52(__getitem__)
     [java]       368    0.003    0.000    0.005    0.000 attrs.py:82(<listcomp>)
     [java]     42408    0.143    0.000    0.385    0.000 auto_control_deps.py:143(op_is_stateful)
     [java]     21204    0.089    0.000    0.279    0.000 auto_control_deps.py:158(collective_manager_ids_from_op)
     [java]      2492    0.013    0.000    0.027    0.000 auto_control_deps.py:200(__init__)
     [java]      2494    0.027    0.000    3.948    0.002 auto_control_deps.py:209(mark_as_return)
     [java]      2492    0.021    0.000    0.078    0.000 auto_control_deps.py:268(__enter__)
     [java]      2492    0.560    0.000   10.209    0.004 auto_control_deps.py:346(__exit__)
     [java]       872    0.003    0.000    0.017    0.000 auto_control_deps.py:435(<genexpr>)
     [java]     21204    0.085    0.000    0.641    0.000 auto_control_deps.py:641(_identity_resolver)
     [java]     42408    0.195    0.000    0.556    0.000 auto_control_deps.py:645(update)
     [java]     21644    0.406    0.000    6.932    0.000 auto_control_deps.py:660(_get_resource_inputs)
     [java]       872    0.003    0.000    0.007    0.000 auto_control_deps_utils.py:101(<genexpr>)
     [java]     20772    0.092    0.000    0.184    0.000 auto_control_deps_utils.py:108(<genexpr>)
     [java]     21204    0.332    0.000    3.832    0.000 auto_control_deps_utils.py:85(get_read_write_resource_inputs)
     [java]       622    0.002    0.000    0.002    0.000 autocast_variable.py:538(__init__)
     [java]       622    0.002    0.000    0.003    0.000 autocast_variable.py:543(__enter__)
     [java]       622    0.002    0.000    0.002    0.000 autocast_variable.py:547(__exit__)
     [java]        22    0.000    0.000    0.001    0.000 autotrackable.py:58(__setattr__)
     [java]       310    0.001    0.000    0.003    0.000 backend.py:1031(name_scope)
     [java]       986    0.003    0.000    0.011    0.000 backend.py:1123(track_variable)
     [java]       318    0.001    0.000    0.001    0.000 backend.py:1132(observe_object_name)
     [java]         2    0.000    0.000    0.001    0.000 backend.py:1304(placeholder)
     [java]        86    0.001    0.000    0.001    0.000 backend.py:1447(int_shape)
     [java]       966    0.006    0.000    0.014    0.000 backend.py:1538(dtype_numpy)
     [java]       180    0.001    0.000    0.004    0.000 backend.py:161(cast_to_floatx)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:1769(is_tf_random_generator_enabled)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:1832(__init__)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:1837(_maybe_init)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:1885(make_legacy_seed)
     [java]         2    0.000    0.000    0.004    0.002 backend.py:1914(random_uniform)
     [java]       309    0.005    0.000    0.035    0.000 backend.py:322(learning_phase)
     [java]       310    0.001    0.000    0.001    0.000 backend.py:360(global_learning_phase_is_set)
     [java]         1    0.000    0.000    0.000    0.000 backend.py:393(_internal_set_learning_phase)
     [java]         2    0.000    0.000    0.175    0.088 backend.py:3952(batch_get_value)
     [java]         2    0.001    0.001    0.175    0.088 backend.py:3968(<listcomp>)
     [java]         4    0.010    0.003    0.910    0.228 backend.py:4016(batch_set_value)
     [java]       309    0.001    0.000    0.003    0.000 backend.py:407(_internal_get_learning_phase)
     [java]         1    0.000    0.000    0.000    0.000 backend.py:415(_default_learning_phase)
     [java]       340    0.005    0.000    0.718    0.002 backend.py:4947(relu)
     [java]  3344/842    0.016    0.000    0.039    0.000 backend.py:6831(_is_tpu_strategy_class)
     [java]      3344    0.010    0.000    0.015    0.000 backend.py:6832(<lambda>)
     [java]       842    0.003    0.000    0.042    0.000 backend.py:6838(is_tpu_strategy)
     [java]       624    0.003    0.000    0.011    0.000 backend.py:775(get_graph)
     [java]      1358    0.002    0.000    0.002    0.000 backend_config.py:64(floatx)
     [java]     11146    0.038    0.000    0.067    0.000 backprop.py:165(_must_record_gradient)
     [java]         2    0.000    0.000    0.000    0.000 base.py:102(__init__)
     [java]      2490    0.006    0.000    0.009    0.000 base.py:1205(isspmatrix)
     [java]       504    0.005    0.000    0.005    0.000 base.py:148(is_empty_dataspace)
     [java]      1466    0.002    0.000    0.002    0.000 base.py:165(_lapl)
     [java]      2474    0.011    0.000    0.018    0.000 base.py:177(_e)
     [java]       966    0.011    0.000    0.164    0.000 base.py:280(file)
     [java]      8714    0.012    0.000    0.012    0.000 base.py:305(id)
     [java]      1000    0.009    0.000    0.026    0.000 base.py:331(attrs)
     [java]      2434    0.004    0.000    0.004    0.000 base.py:338(__init__)
     [java]       966    0.002    0.000    0.002    0.000 base.py:504(product)
     [java]  1932/966    0.009    0.000    0.029    0.000 base.py:530(__get__)
     [java] 19492/18512    0.153    0.000    0.982    0.000 base.py:583(_method_wrapper)
     [java]      1916    0.004    0.000    0.004    0.000 base.py:70(__init__)
     [java]      3474    0.012    0.000    0.023    0.000 base.py:708(_maybe_initialize_trackable)
     [java]        86    0.000    0.000    0.000    0.000 base.py:74(name)
     [java]        86    0.000    0.000    0.000    0.000 base.py:78(ref)
     [java]      1008    0.001    0.000    0.001    0.000 base.py:791(_deferred_dependencies)
     [java]      1918    0.007    0.000    0.009    0.000 base.py:806(_lookup_dependency)
     [java]       258    0.001    0.000    0.001    0.000 base.py:82(__iter__)
     [java]       458    0.009    0.000    0.804    0.002 base.py:820(_add_variable_with_custom_getter)
     [java]       458    0.002    0.000    0.003    0.000 base.py:891(_preload_simple_restoration)
     [java]      1914    0.030    0.000   15.567    0.008 base.py:927(_track_trackable)
     [java]       550    0.006    0.000    0.026    0.000 base.py:982(_handle_deferred_dependencies)
     [java]        86    0.000    0.000    0.001    0.000 base_conv.py:153(_validate_init)
     [java]        86    0.002    0.000    0.308    0.004 base_conv.py:177(build)
     [java]       172    0.002    0.000    1.051    0.006 base_conv.py:217(convolution_op)
     [java]       172    0.003    0.000    1.438    0.008 base_conv.py:241(call)
     [java]       258    0.001    0.000    0.004    0.000 base_conv.py:281(_spatial_output_shape)
     [java]       258    0.002    0.000    0.003    0.000 base_conv.py:282(<listcomp>)
     [java]       258    0.004    0.000    0.028    0.000 base_conv.py:292(compute_output_shape)
     [java]       172    0.000    0.000    0.000    0.000 base_conv.py:369(_get_channel_axis)
     [java]        86    0.001    0.000    0.005    0.000 base_conv.py:375(_get_input_channel)
     [java]        86    0.007    0.000    0.409    0.005 base_conv.py:90(__init__)
     [java]       312    0.001    0.000    0.016    0.000 base_layer.py:1025(_get_unnested_name_scope)
     [java]      1132    0.003    0.000    0.004    0.000 base_layer.py:1043(dtype)
     [java]      3784    0.005    0.000    0.005    0.000 base_layer.py:1053(name)
     [java]       222    0.001    0.000    0.047    0.000 base_layer.py:1063(supports_masking)
     [java]       316    0.001    0.000    0.047    0.000 base_layer.py:1067(dynamic)
     [java]      1568    0.004    0.000    0.044    0.000 base_layer.py:1070(<genexpr>)
     [java]         6    0.000    0.000    0.001    0.000 base_layer.py:1077(stateful)
     [java]    190200    0.237    0.000    0.237    0.000 base_layer.py:1081(trainable)
     [java]       620    0.001    0.000    0.001    0.000 base_layer.py:1110(input_spec)
     [java]       274    0.002    0.000    0.006    0.000 base_layer.py:1145(input_spec)
     [java]    131304    0.773    0.000    6.033    0.000 base_layer.py:1156(trainable_weights)
     [java]    130992    0.735    0.000    5.433    0.000 base_layer.py:1171(non_trainable_weights)
     [java]    130502    0.564    0.000   11.972    0.000 base_layer.py:1192(weights)
     [java]        92    0.001    0.000    0.005    0.000 base_layer.py:1273(add_loss)
     [java]       314    0.000    0.000    0.000    0.000 base_layer.py:1700(finalize_state)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:1875(input)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:2002(dtype_policy)
     [java]       172    0.001    0.000    0.001    0.000 base_layer.py:2010(compute_dtype)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:2037(inbound_nodes)
     [java]     314/2    0.001    0.000    0.016    0.008 base_layer.py:2068(trainable_variables)
     [java]       320    0.002    0.000    0.014    0.000 base_layer.py:2113(_get_cell_name)
     [java]       320    0.007    0.000    0.047    0.000 base_layer.py:2120(_instrument_layer_creation)
     [java]         2    0.001    0.000    0.012    0.006 base_layer.py:2162(_clear_losses)
     [java]       310    0.002    0.000    4.601    0.015 base_layer.py:2172(_keras_tensor_symbolic_call)
     [java]       310    0.020    0.000    4.586    0.015 base_layer.py:2188(_infer_output_signature)
     [java]       310    0.009    0.000    4.792    0.015 base_layer.py:2249(_functional_construction_call)
     [java]       660    0.001    0.000    0.002    0.000 base_layer.py:2253(<genexpr>)
     [java]       312    0.002    0.000    0.004    0.000 base_layer.py:2332(_set_training_mode)
     [java]       312    0.001    0.000    0.004    0.000 base_layer.py:2375(_autographed_call)
     [java]      2012    0.003    0.000    0.003    0.000 base_layer.py:2389(_inbound_nodes)
     [java]       350    0.001    0.000    0.001    0.000 base_layer.py:2398(_outbound_nodes)
     [java]       320    0.007    0.000    0.025    0.000 base_layer.py:2407(_set_dtype_policy)
     [java]        86    0.000    0.000    0.000    0.000 base_layer.py:2444(_compute_dtype)
     [java]       620    0.005    0.000    0.020    0.000 base_layer.py:2449(_maybe_cast_inputs)
     [java]       700    0.005    0.000    0.011    0.000 base_layer.py:2477(_should_cast_single_input)
     [java]        12    0.000    0.000    0.000    0.000 base_layer.py:2493(_dtype)
     [java]       622    0.005    0.000    0.027    0.000 base_layer.py:2505(_name_scope)
     [java]       318    0.002    0.000    0.005    0.000 base_layer.py:2519(_init_set_name)
     [java]        92    0.001    0.000    0.006    0.000 base_layer.py:2541(_handle_weight_regularization)
     [java]       310    0.001    0.000    0.001    0.000 base_layer.py:2558(_handle_activity_regularization)
     [java]       532    0.006    0.000    0.018    0.000 base_layer.py:2573(_set_mask_metadata)
     [java]       880    0.002    0.000    0.006    0.000 base_layer.py:2584(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:2605(_set_mask_keras_history_checked)
     [java]       622    0.004    0.000    0.012    0.000 base_layer.py:2611(_get_input_masks)
     [java]       442    0.002    0.000    0.004    0.000 base_layer.py:2621(<listcomp>)
     [java]       964    0.001    0.000    0.001    0.000 base_layer.py:2622(<genexpr>)
     [java]       840    0.001    0.000    0.001    0.000 base_layer.py:2631(_call_arg_was_passed)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:2644(_get_call_arg_value)
     [java]       258    0.002    0.000    0.006    0.000 base_layer.py:2654(_set_call_arg_value)
     [java]       310    0.005    0.000    0.121    0.000 base_layer.py:2672(_set_connectivity_metadata)
     [java]       310    0.001    0.000    0.002    0.000 base_layer.py:2677(<setcomp>)
     [java]         2    0.000    0.000    0.000    0.000 base_layer.py:2694(_get_node_attribute_at_index)
     [java]       310    0.009    0.000    1.318    0.004 base_layer.py:2730(_maybe_build)
     [java]       620    0.001    0.000    0.022    0.000 base_layer.py:2745(<genexpr>)
     [java]         4    0.001    0.000    0.012    0.003 base_layer.py:2773(_get_trainable_state)
     [java]     12752    0.064    0.000    0.451    0.000 base_layer.py:2790(_obj_reference_counts)
     [java]     14786    0.039    0.000    0.063    0.000 base_layer.py:2797(_maybe_create_attribute)
     [java]      6376    0.061    0.000    0.509    0.000 base_layer.py:2814(__delattr__)
     [java]        86    0.000    0.000    0.000    0.000 base_layer.py:2849(<listcomp>)
     [java] 59956/27244    0.336    0.000   17.144    0.001 base_layer.py:2858(__setattr__)
     [java]       486    0.000    0.000    0.000    0.000 base_layer.py:2899(<genexpr>)
     [java]       614    0.001    0.000    0.001    0.000 base_layer.py:2918(<genexpr>)
     [java]       460    0.001    0.000    0.001    0.000 base_layer.py:2922(<genexpr>)
     [java]    262296    1.669    0.000    7.550    0.000 base_layer.py:2932(_gather_children_attribute)
     [java]    262296    0.624    0.000    5.211    0.000 base_layer.py:2939(<genexpr>)
     [java]    183388    0.577    0.000    3.899    0.000 base_layer.py:2943(_flatten_layers)
     [java]    445684    3.199    0.000    7.727    0.000 base_layer.py:2949(_flatten_modules)
     [java]       320    0.009    0.000    0.108    0.000 base_layer.py:2997(_init_call_fn_args)
     [java]       320    0.001    0.000    0.056    0.000 base_layer.py:3020(_call_full_argspec)
     [java]       320    0.001    0.000    0.062    0.000 base_layer.py:3027(_call_fn_args)
     [java]       320    0.002    0.000    0.006    0.000 base_layer.py:3036(_call_fn_arg_defaults)
     [java]        86    0.000    0.000    0.001    0.000 base_layer.py:3049(_call_fn_arg_positions)
     [java]       318    0.001    0.000    0.003    0.000 base_layer.py:3057(_call_accepts_kwargs)
     [java]        92    0.000    0.000    0.001    0.000 base_layer.py:3062(_eager_losses)
     [java]    262298    1.282    0.000    2.082    0.000 base_layer.py:3078(_dedup_weights)
     [java]       320    0.025    0.000    0.282    0.001 base_layer.py:308(__init__)
     [java]       622    0.001    0.000    0.001    0.000 base_layer.py:3089(_split_out_first_arg)
     [java]       312    0.004    0.000    0.057    0.000 base_layer.py:3106(_set_save_spec)
     [java]       622    0.004    0.000    0.015    0.000 base_layer.py:3380(_in_functional_construction_mode)
     [java]      1286    0.003    0.000    0.004    0.000 base_layer.py:3384(<genexpr>)
     [java]       352    0.002    0.000    0.016    0.000 base_layer.py:3389(_convert_numpy_or_python_types)
     [java]       310    0.002    0.000    0.005    0.000 base_layer.py:462(build)
     [java]       448    0.015    0.000    0.844    0.002 base_layer.py:530(add_weight)
     [java]       312    0.004    0.000    1.354    0.004 base_layer.py:767(from_config)
     [java]       360    0.001    0.000    0.001    0.000 base_layer.py:871(compute_mask)
     [java]   622/312    0.029    0.000    7.800    0.025 base_layer.py:893(__call__)
     [java]       624    0.002    0.000    0.002    0.000 base_layer.py:951(<genexpr>)
     [java]       310    0.002    0.000    0.004    0.000 base_layer_utils.py:305(unnest_if_single_tensor)
     [java]         6    0.000    0.000    0.000    0.000 base_layer_utils.py:350(is_in_eager_or_tf_function)
     [java]       458    0.008    0.000    0.705    0.002 base_layer_utils.py:39(make_variable)
     [java]       714    0.002    0.000    0.003    0.000 base_layer_utils.py:434(call_context)
     [java]         1    0.000    0.000    0.000    0.000 base_layer_utils.py:463(__init__)
     [java]       622    0.003    0.000    0.004    0.000 base_layer_utils.py:478(enter)
     [java]       620    0.001    0.000    0.001    0.000 base_layer_utils.py:512(training)
     [java]       622    0.001    0.000    0.001    0.000 base_layer_utils.py:540(__init__)
     [java]       622    0.004    0.000    0.015    0.000 base_layer_utils.py:545(__enter__)
     [java]       622    0.002    0.000    0.002    0.000 base_layer_utils.py:561(__exit__)
     [java]       622    0.003    0.000    0.006    0.000 base_layer_utils.py:578(is_subclassed)
     [java]       334    0.001    0.000    0.003    0.000 base_layer_utils.py:787(v2_dtype_behavior_enabled)
     [java]       540    0.002    0.000    0.003    0.000 base_layer_utils.py:886(is_split_variable)
     [java]     13304    0.037    0.000    0.070    0.000 base_layer_utils.py:891(has_weights)
     [java]        80    0.000    0.000    0.197    0.002 base_merge.py:113(call)
     [java]        80    0.000    0.000    0.000    0.000 base_merge.py:199(compute_mask)
     [java]        40    0.000    0.000    0.047    0.001 base_merge.py:29(__init__)
     [java]        40    0.001    0.000    0.001    0.000 base_merge.py:41(_compute_elemwise_op_output_shape)
     [java]        40    0.001    0.000    0.010    0.000 base_merge.py:79(build)
     [java]        40    0.000    0.000    0.000    0.000 base_merge.py:91(<setcomp>)
     [java]         6    0.000    0.000    0.008    0.001 base_metric.py:115(__init__)
     [java]         6    0.000    0.000    0.006    0.001 base_metric.py:125(__new__)
     [java]        12    0.000    0.000    0.020    0.002 base_metric.py:324(add_weight)
     [java]         6    0.000    0.000    0.034    0.006 base_metric.py:410(__init__)
     [java]         6    0.000    0.000    0.034    0.006 base_metric.py:576(__init__)
     [java]        86    0.001    0.000    0.511    0.006 batch_normalization.py:1219(__init__)
     [java]        86    0.005    0.000    0.510    0.006 batch_normalization.py:152(__init__)
     [java]        86    0.001    0.000    0.002    0.000 batch_normalization.py:224(_raise_if_fused_cannot_be_used)
     [java]        86    0.000    0.000    0.002    0.000 batch_normalization.py:262(_fused_can_be_used)
     [java]     72584    0.093    0.000    0.093    0.000 batch_normalization.py:269(trainable)
     [java]        86    0.000    0.000    0.018    0.000 batch_normalization.py:273(trainable)
     [java]       344    0.003    0.000    0.015    0.000 batch_normalization.py:277(_param_dtype)
     [java]       172    0.001    0.000    0.005    0.000 batch_normalization.py:285(_support_zero_size_input)
     [java]        86    0.006    0.000    0.796    0.009 batch_normalization.py:296(build)
     [java]        86    0.001    0.000    0.006    0.000 batch_normalization.py:362(<dictcomp>)
     [java]       172    0.003    0.000    2.722    0.016 batch_normalization.py:526(_fused_batch_norm)
     [java]       172    0.000    0.000    0.000    0.000 batch_normalization.py:552(_maybe_add_or_remove_bessels_correction)
     [java]       172    0.001    0.000    2.683    0.016 batch_normalization.py:583(_fused_batch_norm_inference)
     [java]       172    0.001    0.000    0.002    0.000 batch_normalization.py:715(_get_training_value)
     [java]       172    0.002    0.000    2.735    0.016 batch_normalization.py:727(call)
     [java]         1    0.000    0.000    0.007    0.007 break_statements.py:179(transform)
     [java]      2492    0.007    0.000    0.007    0.000 c_api_util.py:101(__init__)
     [java]      4988    0.007    0.000    0.007    0.000 c_api_util.py:110(get)
     [java]      2361    0.008    0.000    0.055    0.000 c_api_util.py:118(__del__)
     [java]     94116    0.279    0.000    0.569    0.000 c_api_util.py:186(tf_buffer)
     [java]     23682    0.160    0.000    0.160    0.000 c_api_util.py:219(tf_output)
     [java]      2806    0.015    0.000    0.118    0.000 c_api_util.py:46(__init__)
     [java]      2671    0.009    0.000    0.107    0.000 c_api_util.py:54(__del__)
     [java]      2499    0.013    0.000    0.042    0.000 cache.py:39(has)
     [java]      2496    0.017    0.000    0.050    0.000 cache.py:46(__getitem__)
     [java]         5    0.000    0.000    0.000    0.000 cache.py:70(_get_key)
     [java]      4990    0.013    0.000    0.032    0.000 cache.py:88(_get_key)
     [java]         1    0.000    0.000    0.007    0.007 call_trees.py:104(visit_FunctionDef)
     [java]         1    0.000    0.000    0.007    0.007 call_trees.py:122(visit_With)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:127(_args_to_tuple)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:145(_kwargs_to_dict)
     [java]         3    0.000    0.000    0.005    0.002 call_trees.py:156(visit_Call)
     [java]         1    0.000    0.000    0.010    0.010 call_trees.py:207(transform)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:40(__init__)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:55(__init__)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:60(_consume_args)
     [java]         2    0.000    0.000    0.000    0.000 call_trees.py:66(add_arg)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:78(finalize)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:82(to_ast)
     [java]       830    0.005    0.000    0.007    0.000 callbacks.py:1143(__init__)
     [java]       830    0.022    0.000    0.509    0.001 callbacks.py:186(__init__)
     [java]      1660    0.003    0.000    0.004    0.000 callbacks.py:218(<genexpr>)
     [java]       830    0.005    0.000    0.045    0.000 callbacks.py:220(<genexpr>)
     [java]      1660    0.003    0.000    0.019    0.000 callbacks.py:226(<genexpr>)
     [java]      1660    0.003    0.000    0.011    0.000 callbacks.py:228(<genexpr>)
     [java]      1660    0.003    0.000    0.011    0.000 callbacks.py:230(<genexpr>)
     [java]      1660    0.003    0.000    0.005    0.000 callbacks.py:238(<genexpr>)
     [java]       830    0.006    0.000    0.014    0.000 callbacks.py:245(_add_default_callbacks)
     [java]      1660    0.003    0.000    0.003    0.000 callbacks.py:264(_process_logs)
     [java]       830    0.003    0.000    0.004    0.000 callbacks.py:277(set_params)
     [java]       830    0.006    0.000    0.334    0.000 callbacks.py:282(set_model)
     [java]       830    0.002    0.000    0.002    0.000 callbacks.py:462(on_predict_batch_begin)
     [java]       830    0.002    0.000    0.002    0.000 callbacks.py:474(on_predict_batch_end)
     [java]       830    0.005    0.000    0.008    0.000 callbacks.py:528(on_predict_begin)
     [java]       830    0.006    0.000    0.009    0.000 callbacks.py:539(on_predict_end)
     [java]       830    0.004    0.000    0.022    0.000 callbacks.py:553(_disallow_batch_hooks_in_ps_strategy)
     [java]       830    0.002    0.000    0.002    0.000 callbacks.py:635(__init__)
     [java]       830    0.001    0.000    0.001    0.000 callbacks.py:644(set_params)
     [java]       830    0.001    0.000    0.001    0.000 callbacks.py:647(set_model)
     [java]       830    0.001    0.000    0.001    0.000 callbacks.py:844(on_predict_begin)
     [java]       830    0.001    0.000    0.001    0.000 callbacks.py:855(on_predict_end)
     [java]      1660    0.013    0.000    0.036    0.000 callbacks.py:866(_implements_train_batch_hooks)
     [java]      1660    0.007    0.000    0.018    0.000 callbacks.py:873(_implements_test_batch_hooks)
     [java]      1660    0.007    0.000    0.018    0.000 callbacks.py:878(_implements_predict_batch_hooks)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:168(__init__)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:198(reset)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:199(<dictcomp>)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:202(<dictcomp>)
     [java]         4    0.000    0.000    0.005    0.001 cfg.py:214(_visit_internal)
     [java]         3    0.000    0.000    0.004    0.001 cfg.py:238(visit_forward)
     [java]         1    0.000    0.000    0.001    0.001 cfg.py:241(visit_reverse)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:281(__init__)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:285(reset)
     [java]        11    0.000    0.000    0.000    0.000 cfg.py:326(_connect_nodes)
     [java]        13    0.000    0.000    0.000    0.000 cfg.py:341(_add_new_node)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:365(begin_statement)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:374(end_statement)
     [java]        10    0.000    0.000    0.000    0.000 cfg.py:384(add_ordinary_node)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:400(_add_jump_node)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:420(_connect_jump_to_finally_sections)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:433(add_exit_node)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:465(connect_raise_node)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:480(enter_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:492(exit_section)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:535(enter_cond_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:549(new_cond_branch)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:563(exit_cond_section)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:570(enter_except_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:595(build)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:649(__init__)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:658(_enter_lexical_scope)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:661(_exit_lexical_scope)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:665(_get_enclosing_finally_scopes)
     [java]        13    0.000    0.000    0.000    0.000 cfg.py:67(__init__)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:674(_get_enclosing_except_scopes)
     [java]        10    0.000    0.000    0.002    0.000 cfg.py:683(_process_basic_statement)
     [java]         3    0.000    0.000    0.001    0.000 cfg.py:687(_process_exit_statement)
     [java]        13    0.000    0.000    0.000    0.000 cfg.py:72(freeze)
     [java]         2    0.000    0.000    0.004    0.002 cfg.py:740(_process_function_def)
     [java]         2    0.000    0.000    0.004    0.002 cfg.py:765(visit_FunctionDef)
     [java]         2    0.000    0.000    0.001    0.000 cfg.py:771(visit_Return)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:780(visit_Expr)
     [java]         5    0.000    0.000    0.001    0.000 cfg.py:783(visit_Assign)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:804(visit_Raise)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:904(visit_ExceptHandler)
     [java]         1    0.000    0.000    0.001    0.001 cfg.py:918(visit_Try)
     [java]         1    0.000    0.000    0.002    0.002 cfg.py:960(visit_With)
     [java]         2    0.000    0.000    0.004    0.002 cfg.py:968(build)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
     [java]        20    0.000    0.000    0.000    0.000 codecs.py:319(decode)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:94(__new__)
     [java]    211968    0.545    0.000    2.062    0.000 compat.py:115(as_str)
     [java]        10    0.000    0.000    0.000    0.000 compat.py:142(path_to_str)
     [java]         4    0.000    0.000    0.000    0.000 compat.py:181(path_to_bytes)
     [java]      1796    0.004    0.000    0.004    0.000 compat.py:37(_date_to_date_number)
     [java]     94856    0.638    0.000    1.168    0.000 compat.py:61(as_bytes)
     [java]      1796    0.006    0.000    0.010    0.000 compat.py:65(forward_compatible)
     [java]    211968    0.849    0.000    1.517    0.000 compat.py:89(as_text)
     [java]         2    0.000    0.000    0.015    0.008 compile_utils.py:103(__init__)
     [java]         2    0.000    0.000    0.026    0.013 compile_utils.py:127(build)
     [java]         2    0.000    0.000    0.000    0.000 compile_utils.py:144(built)
     [java]         2    0.000    0.000    0.025    0.012 compile_utils.py:148(_create_metrics)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:257(_get_loss_object)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:282(_should_broadcast)
     [java]         2    0.000    0.000    0.000    0.000 compile_utils.py:292(__init__)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:30(__init__)
     [java]         2    0.000    0.000    0.000    0.000 compile_utils.py:318(_check_duplicated_metrics)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:33(build)
     [java]         2    0.000    0.000    0.005    0.003 compile_utils.py:372(build)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:39(_conform_to_outputs)
     [java]         2    0.000    0.000    0.000    0.000 compile_utils.py:420(built)
     [java]         2    0.000    0.000    0.000    0.000 compile_utils.py:462(_create_ordered_metrics)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:523(_get_metric_objects)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:526(<listcomp>)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:528(_get_metric_object)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:587(_should_broadcast)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:595(_copy_object)
     [java]         8    0.000    0.000    0.001    0.000 compile_utils.py:63(_maybe_broadcast_to_outputs)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:656(map_to_output_names)
     [java]        24    0.000    0.000    0.000    0.000 compile_utils.py:686(<genexpr>)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:691(<listcomp>)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:705(map_missing_dict_keys)
     [java]         4    0.000    0.000    0.000    0.000 compile_utils.py:753(get_custom_object_name)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:86(_broadcast_fn)
     [java]         8    0.000    0.000    0.000    0.000 compile_utils.py:91(<lambda>)
     [java]         1    0.000    0.000    0.005    0.005 conditional_expressions.py:44(transform)
     [java]         2    0.000    0.000    0.000    0.000 config.py:1092(is_op_determinism_enabled)
     [java]     59856    0.155    0.000    0.230    0.000 config_lib.py:29(matches)
     [java]     57362    0.159    0.000    0.373    0.000 config_lib.py:46(get_action)
     [java]      2494    0.011    0.000    0.026    0.000 config_lib.py:58(get_action)
     [java]     17890    0.067    0.000    8.048    0.000 constant_op.py:170(constant)
     [java]     17890    0.295    0.000    7.981    0.000 constant_op.py:271(_constant_impl)
     [java]     10410    0.036    0.000    0.420    0.000 constant_op.py:302(_constant_eager_impl)
     [java]      4152    0.014    0.000    4.173    0.001 constant_op.py:340(_constant_tensor_conversion_function)
     [java]       976    0.007    0.000    0.109    0.000 constant_op.py:352(_tensor_shape_tensor_conversion_function)
     [java]     10410    0.283    0.000    0.384    0.000 constant_op.py:74(convert_to_eager_tensor)
     [java]       976    0.001    0.000    0.001    0.000 constraints.py:334(get)
     [java]      7696    0.022    0.000    0.022    0.000 context.py:1000(device_spec)
     [java]      7696    0.025    0.000    0.025    0.000 context.py:1005(_set_device)
     [java]      3848    0.026    0.000    0.056    0.000 context.py:1009(device)
     [java]         2    0.000    0.000    0.026    0.013 context.py:1084(config)
     [java]        30    0.000    0.000    0.000    0.000 context.py:1124(rewriter_toggle)
     [java]         4    0.000    0.000    0.000    0.000 context.py:1133(rewriter_bool)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1202(_compute_gpu_options)
     [java]       830    0.004    0.000    0.004    0.000 context.py:1256(function_call_options)
     [java]      2492    0.017    0.000    0.168    0.000 context.py:1285(add_function)
     [java]      2361    0.013    0.000    0.030    0.000 context.py:1359(remove_function)
     [java]     23656    0.102    0.000    0.102    0.000 context.py:1407(op_callbacks)
     [java]         4    0.000    0.000    0.026    0.006 context.py:1419(_initialize_physical_devices)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1433(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1437(<dictcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1443(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1449(<dictcomp>)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1463(list_physical_devices)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1481(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1514(_import_config)
     [java]         1    0.000    0.000    0.000    0.000 context.py:182(__init__)
     [java]       830    0.001    0.000    0.001    0.000 context.py:198(executor_type)
     [java]     33903    0.044    0.000    0.044    0.000 context.py:2011(context_switches)
     [java]         1    0.000    0.000    0.000    0.000 context.py:202(executor_type)
     [java]      3848    0.008    0.000    0.008    0.000 context.py:2022(__init__)
     [java]      3848    0.040    0.000    0.077    0.000 context.py:2029(__enter__)
     [java]      1660    0.003    0.000    0.003    0.000 context.py:206(config_proto_serialized)
     [java]      3848    0.028    0.000    0.056    0.000 context.py:2063(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 context.py:210(config_proto_serialized)
     [java]    249017    0.290    0.000    0.290    0.000 context.py:2131(context_safe)
     [java]      6340    0.025    0.000    0.040    0.000 context.py:2136(ensure_initialized)
     [java]      2807    0.008    0.000    0.011    0.000 context.py:2151(global_seed)
     [java]    117958    0.502    0.000    1.009    0.000 context.py:2161(executing_eagerly)
     [java]       994    0.001    0.000    0.001    0.000 context.py:2290(anonymous_name)
     [java]     14784    0.060    0.000    0.180    0.000 context.py:2306(graph_mode)
     [java]      1445    0.007    0.000    0.021    0.000 context.py:2312(eager_mode)
     [java]      3848    0.021    0.000    0.105    0.000 context.py:2323(device)
     [java]       830    0.014    0.000    0.064    0.000 context.py:2672(async_wait)
     [java]      2492    0.012    0.000    0.182    0.000 context.py:2712(add_function)
     [java]      2361    0.009    0.000    0.042    0.000 context.py:2717(remove_function)
     [java]      6598    0.026    0.000    0.090    0.000 context.py:2756(_tmp_in_graph_mode)
     [java]     16229    0.087    0.000    0.198    0.000 context.py:279(push)
     [java]     16229    0.051    0.000    0.070    0.000 context.py:299(pop)
     [java]         1    0.000    0.000    0.000    0.000 context.py:548(_initialize_logical_devices)
     [java]     22434    0.032    0.000    0.060    0.000 context.py:580(ensure_initialized)
     [java]       830    0.004    0.000    0.024    0.000 context.py:727(sync_executors)
     [java]     16093    0.027    0.000    0.027    0.000 context.py:931(_handle)
     [java]     32458    0.135    0.000    0.162    0.000 context.py:955(_mode)
     [java]    151185    0.495    0.000    0.495    0.000 context.py:973(executing_eagerly)
     [java]      1535    0.003    0.000    0.003    0.000 context.py:985(scope_name)
     [java]      2430    0.006    0.000    0.006    0.000 context.py:990(scope_name)
     [java]     15088    0.037    0.000    0.037    0.000 context.py:995(device_name)
     [java] 160842/106016    0.472    0.000    5.246    0.000 contextlib.py:112(__enter__)
     [java] 160842/107066    0.614    0.000    2.225    0.000 contextlib.py:121(__exit__)
     [java]     14784    0.096    0.000    0.607    0.000 contextlib.py:215(contextmanager)
     [java]    160842    0.501    0.000    1.469    0.000 contextlib.py:242(helper)
     [java]       312    0.001    0.000    0.001    0.000 contextlib.py:379(_create_exit_wrapper)
     [java]       312    0.001    0.000    0.001    0.000 contextlib.py:389(__init__)
     [java]       312    0.002    0.000    0.033    0.000 contextlib.py:419(enter_context)
     [java]       312    0.002    0.000    0.004    0.000 contextlib.py:446(_push_cm_exit)
     [java]       312    0.001    0.000    0.001    0.000 contextlib.py:451(_push_exit_callback)
     [java]       312    0.000    0.000    0.000    0.000 contextlib.py:467(__enter__)
     [java]       312    0.003    0.000    0.010    0.000 contextlib.py:470(__exit__)
     [java]    160842    0.693    0.000    0.968    0.000 contextlib.py:86(__init__)
     [java]         1    0.000    0.000    0.001    0.001 continue_statements.py:115(_visit_non_loop_body)
     [java]         1    0.000    0.000    0.002    0.002 continue_statements.py:141(visit_With)
     [java]         1    0.000    0.000    0.007    0.007 continue_statements.py:159(transform)
     [java]         1    0.000    0.000    0.000    0.000 continue_statements.py:27(__init__)
     [java]         2    0.000    0.000    0.000    0.000 continue_statements.py:50(__init__)
     [java]         1    0.000    0.000    0.000    0.000 continue_statements.py:75(_postprocess_statement)
     [java]         1    0.000    0.000    0.044    0.044 control_flow.py:404(transform)
     [java]         1    0.000    0.000    0.005    0.005 control_flow.py:47(visit_FunctionDef)
     [java]       172    0.002    0.000    0.004    0.000 control_flow_ops.py:3708(get_enclosing_xla_context)
     [java]       172    0.001    0.000    0.001    0.000 control_flow_util.py:109(constant_value)
     [java]     20060    0.048    0.000    0.070    0.000 control_flow_util.py:176(GetOutputContext)
     [java]     21204    0.025    0.000    0.025    0.000 control_flow_util.py:187(GetContainingWhileContext)
     [java]     20060    0.080    0.000    0.174    0.000 control_flow_util.py:262(CheckInputFromValidContext)
     [java]     21204    0.089    0.000    0.139    0.000 control_flow_util.py:78(IsInWhileLoop)
     [java]       172    0.001    0.000    2.687    0.016 control_flow_util.py:83(smart_cond)
     [java]        86    0.002    0.000    0.494    0.006 conv2d.py:151(__init__)
     [java]       516    0.001    0.000    0.001    0.000 conv_utils.py:107(conv_output_length)
     [java]        90    0.000    0.000    0.000    0.000 conv_utils.py:206(normalize_data_format)
     [java]        86    0.000    0.000    0.001    0.000 conv_utils.py:216(normalize_padding)
     [java]        86    0.000    0.000    0.000    0.000 conv_utils.py:25(convert_data_format)
     [java]       258    0.003    0.000    0.004    0.000 conv_utils.py:52(normalize_tuple)
     [java]        86    0.000    0.000    0.000    0.000 conv_utils.py:93(<setcomp>)
     [java]       172    0.000    0.000    0.000    0.000 conv_utils.py:96(<setcomp>)
     [java]      2494    0.134    0.000    0.644    0.000 conversion.py:112(is_allowlisted)
     [java]      2496    0.009    0.000    0.051    0.000 conversion.py:214(is_in_allowlist_cache)
     [java]      2494    0.013    0.000    0.083    0.000 conversion.py:222(cache_allowlisted)
     [java]     12480    0.065    0.000    0.280    0.000 conversion.py:33(_is_of_known_loaded_module)
     [java]     12480    0.059    0.000    0.059    0.000 conversion.py:37(<genexpr>)
     [java]      7488    0.048    0.000    0.098    0.000 conversion.py:42(_is_known_loaded_type)
     [java]      2496    0.029    0.000    0.483    0.000 conversion.py:69(is_unsupported)
     [java]     14976    0.033    0.000    0.314    0.000 conversion.py:95(<genexpr>)
     [java]      2498    0.009    0.000    0.009    0.000 converter.py:148(__init__)
     [java]      2503    0.004    0.000    0.004    0.000 converter.py:165(as_tuple)
     [java]      2497    0.012    0.000    0.020    0.000 converter.py:169(__hash__)
     [java]         3    0.000    0.000    0.000    0.000 converter.py:172(__eq__)
     [java]         6    0.000    0.000    0.000    0.000 converter.py:179(uses)
     [java]         2    0.000    0.000    0.000    0.000 converter.py:183(call_options)
     [java]         1    0.000    0.000    0.005    0.005 converter.py:191(to_ast)
     [java]         1    0.000    0.000    0.000    0.000 converter.py:211(list_of_features)
     [java]         1    0.000    0.000    0.000    0.000 converter.py:212(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 converter.py:240(__init__)
     [java]        11    0.000    0.000    0.000    0.000 converter.py:252(__init__)
     [java]    553/11    0.002    0.000    0.078    0.007 converter.py:307(visit)
     [java]         1    0.000    0.000    0.000    0.000 copy.py:258(_reconstruct)
     [java]        45    0.000    0.000    0.001    0.000 copy.py:66(copy)
     [java]         1    0.000    0.000    0.000    0.000 copyreg.py:103(_slotnames)
     [java]         1    0.000    0.000    0.000    0.000 copyreg.py:94(__newobj__)
     [java]       830    0.006    0.000    0.467    0.001 data_adapter.py:1014(_process_tensorlike)
     [java]      2490    0.020    0.000    0.266    0.000 data_adapter.py:1031(_convert_single_tensor)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:1057(broadcast_sample_weight_modes)
     [java]       830    0.025    0.000   67.628    0.081 data_adapter.py:1097(__init__)
     [java]       830    0.011    0.000    0.331    0.000 data_adapter.py:1174(_configure_dataset_and_inferred_steps)
     [java]      1660    0.020    0.000   13.605    0.008 data_adapter.py:1190(enumerate_epochs)
     [java]      1660    0.011    0.000    0.550    0.000 data_adapter.py:1202(_truncate_execution_to_epoch)
     [java]       830    0.004    0.000    0.067    0.000 data_adapter.py:1217(sync)
     [java]      1660    0.005    0.000    0.072    0.000 data_adapter.py:1220(catch_stop_iteration)
     [java]      1660    0.011    0.000    0.319    0.000 data_adapter.py:1240(steps)
     [java]       830    0.002    0.000    0.002    0.000 data_adapter.py:1268(step_increment)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:1273(inferred_steps)
     [java]       830    0.002    0.000    0.002    0.000 data_adapter.py:1288(should_sync)
     [java]       830    0.003    0.000    0.005    0.000 data_adapter.py:1301(_infer_steps)
     [java]       830    0.005    0.000    0.269    0.000 data_adapter.py:1330(_validate_data_handler)
     [java]       830    0.007    0.000   67.636    0.081 data_adapter.py:1398(get_data_handler)
     [java]         2    0.000    0.000    0.000    0.000 data_adapter.py:1518(unpack_x_y_sample_weight)
     [java]       830    0.003    0.000    0.007    0.000 data_adapter.py:1582(pack_x_y_sample_weight)
     [java]       830    0.007    0.000    0.024    0.000 data_adapter.py:1646(_check_data_cardinality)
     [java]      1660    0.005    0.000    0.011    0.000 data_adapter.py:1647(<genexpr>)
     [java]      2490    0.006    0.000    0.006    0.000 data_adapter.py:1658(_get_tensor_types)
     [java]      2490    0.016    0.000    0.042    0.000 data_adapter.py:1665(_is_scipy_sparse)
     [java]      2490    0.006    0.000    0.010    0.000 data_adapter.py:1674(_is_pandas_series)
     [java]      1660    0.005    0.000    0.018    0.000 data_adapter.py:1693(_is_distributed_dataset)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:200(on_epoch_end)
     [java]      2490    0.019    0.000    0.071    0.000 data_adapter.py:208(can_handle)
     [java]      2490    0.006    0.000    0.009    0.000 data_adapter.py:218(_is_tensor)
     [java]      4980    0.009    0.000    0.018    0.000 data_adapter.py:223(<genexpr>)
     [java]       830    0.044    0.000   66.735    0.080 data_adapter.py:225(__init__)
     [java]      1660    0.006    0.000    0.081    0.000 data_adapter.py:246(<genexpr>)
     [java]       830    0.004    0.000    4.671    0.006 data_adapter.py:279(permutation)
     [java]       830    0.018    0.000   16.863    0.020 data_adapter.py:294(slice_batch_indices)
     [java]       830    0.020    0.000   19.288    0.023 data_adapter.py:337(slice_inputs)
     [java]       830    0.004    0.000    3.494    0.004 data_adapter.py:357(grab_batch)
     [java]       830    0.004    0.000    3.447    0.004 data_adapter.py:358(<lambda>)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:374(get_dataset)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:377(get_size)
     [java]       830    0.001    0.000    0.001    0.000 data_adapter.py:389(should_recreate_iterator)
     [java]       830    0.005    0.000    0.028    0.000 data_adapter.py:412(can_handle)
     [java]       830    0.003    0.000    0.004    0.000 data_adapter.py:510(can_handle)
     [java]       830    0.005    0.000    0.047    0.000 data_adapter.py:542(can_handle)
     [java]       830    0.004    0.000    0.031    0.000 data_adapter.py:548(_is_composite)
     [java]      1660    0.003    0.000    0.034    0.000 data_adapter.py:564(<genexpr>)
     [java]       830    0.003    0.000    0.010    0.000 data_adapter.py:631(can_handle)
     [java]       830    0.004    0.000    0.007    0.000 data_adapter.py:639(_is_list_of_scalars)
     [java]       830    0.004    0.000    0.025    0.000 data_adapter.py:695(can_handle)
     [java]       830    0.003    0.000    0.005    0.000 data_adapter.py:770(can_handle)
     [java]       830    0.003    0.000    0.026    0.000 data_adapter.py:90(__init__)
     [java]       830    0.003    0.000    0.004    0.000 data_adapter.py:901(can_handle)
     [java]       830    0.009    0.000    0.203    0.000 data_adapter.py:980(select_data_adapter)
     [java]       830    0.017    0.000    0.169    0.000 data_adapter.py:982(<listcomp>)
     [java] 6750/6398    0.040    0.000   15.648    0.002 data_structures.py:132(sticky_attribute_assignment)
     [java]       176    0.000    0.000    0.000    0.000 data_structures.py:170(__init__)
     [java]       174    0.001    0.000    0.002    0.000 data_structures.py:183(__init__)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:192(_attribute_sentinel)
     [java]       176    0.001    0.000    0.005    0.000 data_structures.py:204(_track_value)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:243(trainable_weights)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:251(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:289(trainable_variables)
     [java]       172    0.002    0.000    0.014    0.000 data_structures.py:368(__init__)
     [java]       172    0.001    0.000    0.001    0.000 data_structures.py:389(_name_element)
     [java]     72928    0.081    0.000    0.081    0.000 data_structures.py:392(_values)
     [java]     74046    0.117    0.000    0.117    0.000 data_structures.py:436(__getitem__)
     [java]    146114    0.333    0.000    0.494    0.000 data_structures.py:442(__len__)
     [java]       172    0.001    0.000    0.015    0.000 data_structures.py:473(__init__)
     [java]       172    0.000    0.000    0.000    0.000 data_structures.py:534(_make_storage)
     [java]        86    0.000    0.000    0.000    0.000 data_structures.py:656(__eq__)
     [java]         4    0.000    0.000    0.000    0.000 data_structures.py:66(__init__)
     [java]       260    0.002    0.000    0.004    0.000 data_structures.py:70(_should_wrap_tuple)
     [java]       172    0.001    0.000    0.009    0.000 data_structures.py:703(_track_value)
     [java]         2    0.000    0.000    0.001    0.000 data_structures.py:796(__init__)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:808(<dictcomp>)
     [java] 2583/1727    0.021    0.000    0.049    0.000 data_structures.py:817(__getattribute__)
     [java]       842    0.008    0.000    0.026    0.000 data_structures.py:845(_values)
     [java]      1684    0.003    0.000    0.003    0.000 data_structures.py:849(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:886(_dirty)
     [java]         2    0.000    0.000    0.000    0.000 data_structures.py:900(_update_snapshot)
     [java]         4    0.000    0.000    0.000    0.000 data_structures.py:907(_track_value)
     [java]         4    0.000    0.000    0.000    0.000 data_structures.py:928(_name_element)
     [java] 6750/6398    0.034    0.000    0.071    0.000 data_structures.py:94(wrap_or_unwrap)
     [java]       966    0.026    0.000    0.486    0.001 dataset.py:1034(__array__)
     [java]      3428    0.023    0.000    0.026    0.000 dataset.py:440(shape)
     [java]       436    0.009    0.000    0.010    0.000 dataset.py:514(dtype)
     [java]       966    0.015    0.000    0.017    0.000 dataset.py:603(_extent_type)
     [java]       966    0.003    0.000    0.025    0.000 dataset.py:609(_is_empty)
     [java]       966    0.037    0.000    0.047    0.000 dataset.py:614(__init__)
     [java]       966    0.077    0.000    0.363    0.000 dataset.py:984(read_direct)
     [java]       830    0.005    0.000    0.639    0.001 dataset_ops.py:1175(range)
     [java]       830    0.004    0.000    1.181    0.001 dataset_ops.py:1213(zip)
     [java]       830    0.004    0.000    2.972    0.004 dataset_ops.py:1261(concatenate)
     [java]       830    0.004    0.000    0.737    0.001 dataset_ops.py:1291(prefetch)
     [java]      1660    0.008    0.000    1.239    0.001 dataset_ops.py:1395(repeat)
     [java]      1660    0.010    0.000   29.112    0.018 dataset_ops.py:1891(map)
     [java]       830    0.004    0.000   30.214    0.036 dataset_ops.py:2058(flat_map)
     [java]     10790    0.202    0.000    4.486    0.000 dataset_ops.py:220(__init__)
     [java]     13280    0.020    0.000    0.020    0.000 dataset_ops.py:258(_variant_tensor)
     [java]       830    0.006    0.000    2.116    0.003 dataset_ops.py:2700(with_options)
     [java]      3320    0.005    0.000    0.005    0.000 dataset_ops.py:4216(_inputs)
     [java]      5810    0.024    0.000    2.490    0.000 dataset_ops.py:4223(__init__)
     [java]      5810    0.010    0.000    0.010    0.000 dataset_ops.py:4227(_inputs)
     [java]      3320    0.014    0.000    1.419    0.000 dataset_ops.py:4234(__init__)
     [java]      9960    0.028    0.000    0.056    0.000 dataset_ops.py:4239(element_spec)
     [java]       830    0.004    0.000    0.020    0.000 dataset_ops.py:4314(__init__)
     [java]       830    0.006    0.000    0.055    0.000 dataset_ops.py:4412(_to_tensor_list)
     [java]       830    0.003    0.000    0.004    0.000 dataset_ops.py:4415(<lambda>)
     [java]      1660    0.040    0.000    2.942    0.002 dataset_ops.py:4529(__init__)
     [java]      3320    0.004    0.000    0.004    0.000 dataset_ops.py:4541(element_spec)
     [java]       830    0.031    0.000    2.373    0.003 dataset_ops.py:4549(__init__)
     [java]       830    0.003    0.000    0.053    0.000 dataset_ops.py:4557(<lambda>)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:4574(element_spec)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:466(_apply_debug_options)
     [java]       830    0.026    0.000    1.176    0.001 dataset_ops.py:4679(__init__)
     [java]       830    0.004    0.000    0.009    0.000 dataset_ops.py:4695(<listcomp>)
     [java]       830    0.004    0.000    0.006    0.000 dataset_ops.py:4698(<listcomp>)
     [java]       830    0.003    0.000    0.008    0.000 dataset_ops.py:4702(_inputs)
     [java]      2490    0.004    0.000    0.004    0.000 dataset_ops.py:4705(element_spec)
     [java]       830    0.020    0.000    2.968    0.004 dataset_ops.py:4713(__init__)
     [java]       830    0.004    0.000    0.301    0.000 dataset_ops.py:4718(common_supertype)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:4743(_inputs)
     [java]      2490    0.004    0.000    0.004    0.000 dataset_ops.py:4746(element_spec)
     [java]      1660    0.033    0.000    1.231    0.001 dataset_ops.py:4754(__init__)
     [java]       830    0.019    0.000    0.635    0.001 dataset_ops.py:4773(__init__)
     [java]       830    0.011    0.000    0.252    0.000 dataset_ops.py:4784(_parse_args)
     [java]      2490    0.010    0.000    0.240    0.000 dataset_ops.py:4807(_build_tensor)
     [java]       830    0.013    0.000   13.009    0.016 dataset_ops.py:481(__iter__)
     [java]      4150    0.006    0.000    0.006    0.000 dataset_ops.py:4810(element_spec)
     [java]       830    0.031    0.000   14.571    0.018 dataset_ops.py:5232(__init__)
     [java]      4150    0.012    0.000    0.017    0.000 dataset_ops.py:5261(element_spec)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:5265(_transformation_name)
     [java]       830    0.034    0.000   14.532    0.018 dataset_ops.py:5272(__init__)
     [java]      4150    0.013    0.000    0.019    0.000 dataset_ops.py:5313(element_spec)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:5317(_transformation_name)
     [java]       830    0.033    0.000   30.210    0.036 dataset_ops.py:5324(__init__)
     [java]      2490    0.004    0.000    0.004    0.000 dataset_ops.py:5345(element_spec)
     [java]       830    0.001    0.000    0.001    0.000 dataset_ops.py:5349(_transformation_name)
     [java]       830    0.024    0.000    0.732    0.001 dataset_ops.py:5506(__init__)
     [java]       830    0.042    0.000    2.110    0.003 dataset_ops.py:5572(__init__)
     [java]      8300    0.041    0.000    0.300    0.000 dataset_ops.py:622(_flat_shapes)
     [java]      8300    0.034    0.000    0.236    0.000 dataset_ops.py:631(_flat_types)
     [java]     21204    0.101    0.000    0.337    0.000 dataset_ops.py:6313(_resource_resolver)
     [java]         2    0.000    0.000    0.000    0.000 dataset_ops.py:6335(<listcomp>)
     [java]     10790    0.050    0.000    0.050    0.000 dataset_ops.py:659(_metadata)
     [java]      8300    0.077    0.000    0.685    0.000 dataset_ops.py:667(_common_args)
     [java]       830    0.004    0.000    0.025    0.000 dataset_ops.py:688(_type_spec)
     [java]      1660    0.008    0.000    2.950    0.002 dataset_ops.py:692(from_tensors)
     [java]       830    0.005    0.000    2.378    0.003 dataset_ops.py:731(from_tensor_slices)
     [java]         4    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
     [java]         4    0.000    0.000    0.019    0.005 decoder.py:332(decode)
     [java]         4    0.008    0.002    0.019    0.005 decoder.py:343(raw_decode)
     [java]         4    0.000    0.000    0.000    0.000 def_function.py:1052(input_signature)
     [java]         1    0.000    0.000    0.000    0.000 def_function.py:118(__init__)
     [java]         2    0.000    0.000    0.000    0.000 def_function.py:123(called_with_tracing)
     [java]         2    0.000    0.000    0.001    0.000 def_function.py:1285(function)
     [java]       828    0.004    0.000    0.004    0.000 def_function.py:162(called_without_tracing)
     [java]         2    0.000    0.000    0.001    0.000 def_function.py:1657(decorated)
     [java]       830    0.008    0.000    0.017    0.000 def_function.py:180(_get_detector)
     [java]       828    0.012    0.000    0.035    0.000 def_function.py:185(called_without_tracing)
     [java]         2    0.000    0.000    0.000    0.000 def_function.py:190(called_with_tracing)
     [java]      2492    0.004    0.000    0.004    0.000 def_function.py:467(functions_run_eagerly)
     [java]         2    0.000    0.000    0.000    0.000 def_function.py:515(__init__)
     [java]       832    0.002    0.000    0.002    0.000 def_function.py:529(__init__)
     [java]       832    0.001    0.000    0.001    0.000 def_function.py:535(__enter__)
     [java]       832    0.002    0.000    0.002    0.000 def_function.py:539(__exit__)
     [java]         2    0.000    0.000    0.000    0.000 def_function.py:553(__init__)
     [java]         2    0.000    0.000    0.000    0.000 def_function.py:629(_get_key_for_call_stats)
     [java]         4    0.000    0.000    0.002    0.001 def_function.py:652(_defun_with_scope)
     [java]         2    0.000    0.000    3.258    1.629 def_function.py:658(wrapped_fn)
     [java]         4    0.000    0.000    0.002    0.001 def_function.py:708(_defun)
     [java]         2    0.000    0.000    3.982    1.991 def_function.py:735(_initialize)
     [java]      1660    0.007    0.000    0.007    0.000 def_function.py:850(experimental_get_tracing_count)
     [java]       830    0.002    0.000    0.002    0.000 def_function.py:883(_run_functions_eagerly)
     [java]       830    0.041    0.000   28.068    0.034 def_function.py:887(__call__)
     [java]       830    0.011    0.000   27.958    0.034 def_function.py:934(_call)
     [java] 3312/1656    0.022    0.000    0.293    0.000 default_types.py:126(__eq__)
     [java] 17438/14944    0.042    0.000    0.505    0.000 default_types.py:135(__hash__)
     [java]      4150    0.017    0.000    0.025    0.000 default_types.py:170(__init__)
     [java]       4/2    0.000    0.000    0.000    0.000 default_types.py:183(_placeholder_value)
     [java]       4/2    0.000    0.000    0.000    0.000 default_types.py:184(<listcomp>)
     [java]       830    0.002    0.000    0.002    0.000 default_types.py:233(__init__)
     [java]         2    0.000    0.000    0.000    0.000 default_types.py:272(_placeholder_value)
     [java]         2    0.000    0.000    0.000    0.000 default_types.py:273(<dictcomp>)
     [java]      1656    0.007    0.000    0.019    0.000 default_types.py:278(__eq__)
     [java]      2494    0.012    0.000    0.018    0.000 default_types.py:287(__hash__)
     [java]       830    0.002    0.000    0.002    0.000 default_types.py:303(__init__)
     [java]         2    0.000    0.000    0.000    0.000 default_types.py:323(_placeholder_value)
     [java]      1656    0.010    0.000    0.190    0.000 default_types.py:326(__eq__)
     [java]      2494    0.007    0.000    0.177    0.000 default_types.py:334(__hash__)
     [java]      4150    0.009    0.000    0.009    0.000 default_types.py:93(__init__)
     [java]      3312    0.016    0.000    0.042    0.000 default_types.py:98(_shallow_equal)
     [java]         6    0.000    0.000    0.023    0.004 dense.py:100(__init__)
     [java]         6    0.000    0.000    0.024    0.004 dense.py:132(build)
     [java]        12    0.000    0.000    0.083    0.007 dense.py:166(call)
     [java]       830    0.001    0.000    0.001    0.000 deprecation.py:500(_same_value)
     [java] 6598/6596    0.123    0.000    3.546    0.001 deprecation.py:527(new_func)
     [java]         2    0.000    0.000    0.000    0.000 deprecation.py:638(deprecated_argument_lookup)
     [java]      3849    0.011    0.000    0.016    0.000 device.py:40(is_device_spec)
     [java]         1    0.000    0.000    0.000    0.000 device.py:45(canonical_name)
     [java]       172    0.000    0.000    0.000    0.000 device_context.py:17(enclosing_tpu_context)
     [java]         8    0.000    0.000    0.000    0.000 device_spec.py:107(__init__)
     [java]         5    0.000    0.000    0.000    0.000 device_spec.py:145(from_string)
     [java]         2    0.000    0.000    0.000    0.000 device_spec.py:215(make_merged_spec)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:239(replace)
     [java]         6    0.000    0.000    0.000    0.000 device_spec.py:266(job)
     [java]         5    0.000    0.000    0.000    0.000 device_spec.py:270(replica)
     [java]         5    0.000    0.000    0.000    0.000 device_spec.py:274(task)
     [java]         6    0.000    0.000    0.000    0.000 device_spec.py:278(device_type)
     [java]         5    0.000    0.000    0.000    0.000 device_spec.py:282(device_index)
     [java]         2    0.000    0.000    0.000    0.000 device_spec.py:286(_get_combined_properties)
     [java]        16    0.000    0.000    0.000    0.000 device_spec.py:30(_as_str_or_none)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:306(_get_valid_device_types)
     [java]         5    0.000    0.000    0.000    0.000 device_spec.py:315(_string_to_components)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:335(<listcomp>)
     [java]        24    0.000    0.000    0.000    0.000 device_spec.py:34(_as_int_or_none)
     [java]         8    0.000    0.000    0.000    0.000 device_spec.py:369(_components_to_string)
     [java]         8    0.000    0.000    0.000    0.000 device_spec.py:38(_as_device_str_or_none)
     [java]        12    0.000    0.000    0.000    0.000 device_spec.py:450(to_string)
     [java]         7    0.000    0.000    0.001    0.000 directives.py:113(visit_Name)
     [java]         2    0.000    0.000    0.000    0.000 directives.py:122(visit_Attribute)
     [java]         1    0.000    0.000    0.000    0.000 directives.py:138(visit_Expr)
     [java]         1    0.000    0.000    0.003    0.003 directives.py:176(transform)
     [java]         1    0.000    0.000    0.000    0.000 directives.py:46(__init__)
     [java] 19562/14298    0.163    0.000   28.097    0.002 dispatch.py:1068(op_dispatch_handler)
     [java]         2    0.000    0.000    3.008    1.504 distribute_lib.py:1197(run)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:2105(__init__)
     [java]         4    0.000    0.000    0.000    0.000 distribute_lib.py:2116(_container_strategy)
     [java]         2    0.000    0.000    3.007    1.503 distribute_lib.py:2840(call_for_each_replica)
     [java]         2    0.000    0.000    0.000    0.000 distribute_lib.py:295(_require_cross_replica_or_default_context_extended)
     [java]         3    0.000    0.000    0.000    0.000 distribute_lib.py:3025(__init__)
     [java]         2    0.000    0.000    0.000    0.000 distribute_lib.py:3050(__enter__)
     [java]         2    0.000    0.000    0.000    0.000 distribute_lib.py:3063(__exit__)
     [java]         3    0.000    0.000    0.000    0.000 distribute_lib.py:3153(strategy)
     [java]         6    0.000    0.000    0.000    0.000 distribute_lib.py:342(_require_strategy_scope_strategy)
     [java]       528    0.002    0.000    0.011    0.000 distribute_lib.py:349(_require_strategy_scope_extended)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:3582(__init__)
     [java]       836    0.005    0.000    0.015    0.000 distribute_lib.py:3600(__init__)
     [java]         6    0.000    0.000    0.007    0.001 distribute_lib.py:3602(creator)
     [java]       836    0.005    0.000    0.070    0.000 distribute_lib.py:3610(__enter__)
     [java]       836    0.006    0.000    0.029    0.000 distribute_lib.py:3619(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:3635(__init__)
     [java]       836    0.004    0.000    0.018    0.000 distribute_lib.py:3639(_scope)
     [java]       528    0.002    0.000    0.050    0.000 distribute_lib.py:3643(colocate_vars_with)
     [java]       528    0.001    0.000    0.001    0.000 distribute_lib.py:3648(variable_created_in_scope)
     [java]       830    0.001    0.000    0.001    0.000 distribute_lib.py:3651(_experimental_distribute_dataset)
     [java]         2    0.000    0.000    3.007    1.503 distribute_lib.py:3687(_call_for_each_replica)
     [java]      5776    0.007    0.000    0.007    0.000 distribute_lib.py:3721(value_container)
     [java]       830    0.001    0.000    0.001    0.000 distribute_lib.py:3741(_in_multi_worker_mode)
     [java]         3    0.000    0.000    0.000    0.000 distribute_lib.py:3754(_get_local_replica_id)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:813(__init__)
     [java]      8193    0.012    0.000    0.012    0.000 distribute_lib.py:843(extended)
     [java]       836    0.003    0.000    0.022    0.000 distribute_lib.py:863(scope)
     [java]       830    0.008    0.000    0.035    0.000 distribute_lib.py:989(experimental_distribute_dataset)
     [java]      8204    0.023    0.000    0.166    0.000 distribution_strategy_context.py:233(get_strategy)
     [java]      1026    0.005    0.000    0.025    0.000 distribution_strategy_context.py:253(has_strategy)
     [java]      5776    0.019    0.000    0.122    0.000 distribution_strategy_context.py:269(get_strategy_and_replica_context)
     [java]      1028    0.002    0.000    0.002    0.000 distribution_strategy_context.py:366(_get_default_strategy)
     [java]         1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:385(_get_default_replica_context)
     [java]         4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:39(__init__)
     [java]     14166    0.024    0.000    0.024    0.000 distribution_strategy_context.py:397(_get_default_replica_mode)
     [java]         3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:53(__init__)
     [java]         2    0.000    0.000    0.000    0.000 distribution_strategy_context.py:57(_push_per_thread_mode)
     [java]         2    0.000    0.000    0.000    0.000 distribution_strategy_context.py:61(_pop_per_thread_mode)
     [java]         1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:71(__init__)
     [java]     14516    0.106    0.000    0.255    0.000 distribution_strategy_context.py:76(_get_per_thread_mode)
     [java]     44078    0.254    0.000    0.675    0.000 dtypes.py:155(is_compatible_with)
     [java]    121178    0.378    0.000    0.535    0.000 dtypes.py:175(__eq__)
     [java]     11512    0.033    0.000    0.086    0.000 dtypes.py:188(__ne__)
     [java]    107098    0.228    0.000    0.228    0.000 dtypes.py:50(_is_ref_dtype)
     [java]    107098    0.309    0.000    0.537    0.000 dtypes.py:63(base_dtype)
     [java]    218702    0.980    0.000    1.390    0.000 dtypes.py:678(as_dtype)
     [java]      5126    0.011    0.000    0.011    0.000 dtypes.py:82(as_numpy_dtype)
     [java]         7    0.000    0.000    0.000    0.000 enum.py:22(_is_dunder)
     [java]     15714    0.050    0.000    0.073    0.000 enum.py:334(__call__)
     [java]         7    0.000    0.000    0.000    0.000 enum.py:391(__getattr__)
     [java]     15714    0.024    0.000    0.024    0.000 enum.py:646(__new__)
     [java]      2858    0.006    0.000    0.010    0.000 enum.py:745(__hash__)
     [java]       215    0.000    0.000    0.000    0.000 enum.py:763(value)
     [java]         2    0.000    0.000    0.000    0.000 enum.py:948(__and__)
     [java]       830    0.006    0.000    0.006    0.000 enum_type_wrapper.py:99(__getattr__)
     [java]     20770    0.171    0.000    0.278    0.000 errors_impl.py:273(__init__)
     [java]     20770    0.080    0.000    0.080    0.000 errors_impl.py:53(__init__)
     [java]     20770    0.031    0.000    0.031    0.000 errors_impl.py:83(message)
     [java]       520    0.002    0.000    0.009    0.000 execute.py:150(make_float)
     [java]      2206    0.007    0.000    0.010    0.000 execute.py:157(make_int)
     [java]      3006    0.013    0.000    0.053    0.000 execute.py:168(make_str)
     [java]      1198    0.003    0.000    0.005    0.000 execute.py:175(make_bool)
     [java]      2054    0.012    0.000    0.033    0.000 execute.py:182(make_type)
     [java]      2842    0.018    0.000    0.052    0.000 execute.py:192(make_shape)
     [java]       830    0.013    0.000   21.842    0.026 execute.py:29(quick_execute)
     [java]      5756    0.182    0.000    0.275    0.000 file_io.py:102(read)
     [java]      5764    0.040    0.000    0.048    0.000 file_io.py:121(seek)
     [java]         8    0.000    0.000    0.000    0.000 file_io.py:181(tell)
     [java]         2    0.000    0.000    0.000    0.000 file_io.py:247(file_exists_v2)
     [java]         2    0.000    0.000    0.000    0.000 file_io.py:48(__init__)
     [java]         2    0.000    0.000    0.000    0.000 file_io.py:690(is_directory_v2)
     [java]     11528    0.014    0.000    0.014    0.000 file_io.py:71(_preread_check)
     [java]      5756    0.019    0.000    0.087    0.000 file_io.py:87(_prepare_value)
     [java]         8    0.000    0.000    0.000    0.000 file_io.py:893(stat)
     [java]         8    0.000    0.000    0.000    0.000 file_io.py:909(stat_v2)
     [java]         8    0.000    0.000    0.000    0.000 file_io.py:93(size)
     [java]         2    0.000    0.000    0.000    0.000 files.py:115(make_fapl)
     [java]         2    0.000    0.000    0.000    0.000 files.py:177(make_fcpl)
     [java]         2    0.001    0.000    0.004    0.002 files.py:206(make_fid)
     [java]         4    0.000    0.000    0.001    0.000 files.py:274(attrs)
     [java]       966    0.006    0.000    0.007    0.000 files.py:307(mode)
     [java]       968    0.020    0.000    0.147    0.000 files.py:363(__init__)
     [java]         2    0.009    0.005    0.009    0.005 files.py:542(close)
     [java]         2    0.000    0.000    0.000    0.000 files.py:60(_set_fapl_fileobj)
     [java]       966    0.006    0.000    0.006    0.000 filters.py:293(get_filters)
     [java]      6656    0.011    0.000    0.011    0.000 flags.py:25(config)
     [java]         4    0.000    0.000    0.005    0.001 flatten.py:61(__init__)
     [java]         8    0.000    0.000    0.045    0.006 flatten.py:67(call)
     [java]       996    0.002    0.000    0.002    0.000 fromnumeric.py:2155(_sum_dispatcher)
     [java]       996    0.008    0.000    0.035    0.000 fromnumeric.py:2160(sum)
     [java]       830    0.002    0.000    0.002    0.000 fromnumeric.py:2300(_any_dispatcher)
     [java]       830    0.006    0.000    0.038    0.000 fromnumeric.py:2305(any)
     [java]       830    0.001    0.000    0.001    0.000 fromnumeric.py:2491(_cumsum_dispatcher)
     [java]       830    0.005    0.000    0.023    0.000 fromnumeric.py:2495(cumsum)
     [java]      1940    0.003    0.000    0.003    0.000 fromnumeric.py:2965(_prod_dispatcher)
     [java]       974    0.004    0.000    0.038    0.000 fromnumeric.py:2970(prod)
     [java]      1660    0.003    0.000    0.003    0.000 fromnumeric.py:3160(_ndim_dispatcher)
     [java]      1660    0.003    0.000    0.003    0.000 fromnumeric.py:3164(ndim)
     [java]       966    0.003    0.000    0.049    0.000 fromnumeric.py:3776(product)
     [java]       830    0.005    0.000    0.019    0.000 fromnumeric.py:51(_wrapfunc)
     [java]      2800    0.031    0.000    0.090    0.000 fromnumeric.py:69(_wrapreduction)
     [java]      2800    0.007    0.000    0.007    0.000 fromnumeric.py:70(<dictcomp>)
     [java]      2492    0.009    0.000    0.013    0.000 func_graph.py:1070(<listcomp>)
     [java]      2494    0.019    0.000    4.037    0.002 func_graph.py:1083(convert)
     [java]         2    0.000    0.000    3.258    1.629 func_graph.py:1112(autograph_handler)
     [java]      2492    0.004    0.000    0.011    0.000 func_graph.py:1171(<listcomp>)
     [java]      4986    0.010    0.000    0.035    0.000 func_graph.py:1177(<genexpr>)
     [java]     11980    0.060    0.000    0.174    0.000 func_graph.py:1210(device_stack_has_callable)
     [java]     11980    0.032    0.000    0.046    0.000 func_graph.py:1212(<genexpr>)
     [java]      2492    0.021    0.000    0.103    0.000 func_graph.py:1217(has_mutation)
     [java]      2492    0.009    0.000    0.112    0.000 func_graph.py:1233(check_func_mutation)
     [java]      2492    0.012    0.000    0.037    0.000 func_graph.py:1265(flatten)
     [java]      2492    0.007    0.000    0.007    0.000 func_graph.py:127(<listcomp>)
     [java]      2492    0.008    0.000    0.012    0.000 func_graph.py:1275(<listcomp>)
     [java]       874    0.013    0.000    0.861    0.001 func_graph.py:1307(_create_substitute_placeholder)
     [java]      4984    0.013    0.000    0.669    0.000 func_graph.py:131(<listcomp>)
     [java]      2492    0.008    0.000    3.803    0.002 func_graph.py:1320(_get_defun_inputs_from_args)
     [java]      2492    0.008    0.000    0.169    0.000 func_graph.py:1325(_get_defun_inputs_from_kwargs)
     [java]      3322    0.010    0.000    0.042    0.000 func_graph.py:1335(_get_composite_tensor_spec)
     [java]      4984    0.137    0.000    3.956    0.001 func_graph.py:1341(_get_defun_inputs)
     [java]      2805    0.121    0.000    0.802    0.000 func_graph.py:167(__init__)
     [java]       874    0.007    0.000    0.030    0.000 func_graph.py:277(watch_variable)
     [java]       876    0.004    0.000    0.010    0.000 func_graph.py:426(control_dependencies)
     [java]     14784    0.122    0.000    1.536    0.000 func_graph.py:466(as_default)
     [java]     29568    0.451    0.000    3.338    0.000 func_graph.py:469(inner_cm)
     [java]     11953    0.020    0.000    0.020    0.000 func_graph.py:527(outer_graph)
     [java]      2492    0.008    0.000    0.011    0.000 func_graph.py:597(variables)
     [java]      2492    0.003    0.000    0.003    0.000 func_graph.py:599(<listcomp>)
     [java]     23656    0.358    0.000   17.565    0.001 func_graph.py:628(_create_op_internal)
     [java]      4984    0.051    0.000    1.319    0.000 func_graph.py:69(convert_structure_to_signature)
     [java]     23428    0.103    0.000    1.134    0.000 func_graph.py:698(capture)
     [java]       874    0.015    0.000    0.898    0.001 func_graph.py:762(_capture_helper)
     [java]       874    0.005    0.000    0.008    0.000 func_graph.py:788(add_capture)
     [java]      3322    0.066    0.000    0.656    0.000 func_graph.py:83(encode_arg)
     [java]      2492    0.013    0.000    0.020    0.000 func_graph.py:904(external_captures)
     [java]      2492    0.004    0.000    0.004    0.000 func_graph.py:907(<listcomp>)
     [java]      4982    0.025    0.000    0.040    0.000 func_graph.py:909(internal_captures)
     [java]      4982    0.008    0.000    0.008    0.000 func_graph.py:912(<listcomp>)
     [java]      2492    0.011    0.000    0.017    0.000 func_graph.py:914(deferred_external_captures)
     [java]      2492    0.003    0.000    0.003    0.000 func_graph.py:917(<listcomp>)
     [java]      2492    0.011    0.000    0.017    0.000 func_graph.py:919(deferred_internal_captures)
     [java]      2492    0.003    0.000    0.003    0.000 func_graph.py:922(<listcomp>)
     [java]      2492    0.243    0.000   54.817    0.022 func_graph.py:971(func_graph_from_py_func)
     [java]      6640    0.013    0.000    0.013    0.000 func_graph.py:98(<genexpr>)
     [java]      2492    0.061    0.000    2.240    0.001 function.py:1421(__init__)
     [java]      4986    0.012    0.000    0.159    0.000 function.py:1479(<genexpr>)
     [java]      2492    0.010    0.000    0.258    0.000 function.py:1500(_set_function_spec)
     [java]      2492    0.085    0.000    0.249    0.000 function.py:1506(_initialize_function_spec)
     [java]      2492    0.011    0.000    0.023    0.000 function.py:1525(<listcomp>)
     [java]      2492    0.004    0.000    0.004    0.000 function.py:1530(<genexpr>)
     [java]      2492    0.029    0.000    0.039    0.000 function.py:161(_parse_func_attrs)
     [java]       830    0.030    0.000   22.216    0.027 function.py:1783(_call_flat)
     [java]      2490    0.013    0.000    0.021    0.000 function.py:1895(name)
     [java]      4980    0.007    0.000    0.007    0.000 function.py:1900(graph)
     [java]      2492    0.004    0.000    0.004    0.000 function.py:1910(structured_input_signature)
     [java]      1660    0.003    0.000    0.003    0.000 function.py:1934(outputs)
     [java]       830    0.002    0.000    0.002    0.000 function.py:199(__init__)
     [java]       830    0.001    0.000    0.001    0.000 function.py:202(__enter__)
     [java]       830    0.002    0.000    0.002    0.000 function.py:205(__exit__)
     [java]      3320    0.020    0.000    0.505    0.000 function.py:2058(captured_inputs)
     [java]      3320    0.226    0.000    0.405    0.000 function.py:2065(<listcomp>)
     [java]       830    0.019    0.000    0.176    0.000 function.py:2203(_build_call_outputs)
     [java]      2494    0.040    0.000    0.599    0.000 function.py:2383(__init__)
     [java]       828    0.018    0.000   23.275    0.028 function.py:2448(__call__)
     [java]      2492    0.004    0.000    0.004    0.000 function.py:2461(function_spec)
     [java]     16608    0.044    0.000    0.064    0.000 function.py:2465(input_signature)
     [java]      2490    0.007    0.000    0.010    0.000 function.py:2470(flat_input_signature)
     [java]         2    0.000    0.000    3.980    1.990 function.py:2475(_get_concrete_function_internal_garbage_collected)
     [java]      2490    0.090    0.000   55.476    0.022 function.py:2494(_get_concrete_function_garbage_collected)
     [java]      2490    0.015    0.000   55.495    0.022 function.py:2558(get_concrete_function)
     [java]      2492    0.074    0.000   57.190    0.023 function.py:2609(_create_graph_function)
     [java]      2492    0.012    0.000    0.012    0.000 function.py:2622(<listcomp>)
     [java]      3320    0.131    0.000   60.223    0.018 function.py:2646(_maybe_define_function)
     [java]      2490    0.018    0.000    0.091    0.000 function.py:2745(validate_signature)
     [java]      5810    0.013    0.000    0.038    0.000 function.py:2750(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 function.py:2759(validate_python_function)
     [java]      2492    0.014    0.000    0.028    0.000 function.py:289(_inference_name)
     [java]      2492    0.005    0.000    0.005    0.000 function.py:299(__init__)
     [java]      2361    0.007    0.000    0.049    0.000 function.py:302(__del__)
     [java]      2494    0.009    0.000    0.102    0.000 function.py:3107(defun_with_attributes)
     [java]      2494    0.025    0.000    0.725    0.000 function.py:3147(decorated)
     [java]      2492    0.004    0.000    0.004    0.000 function.py:3278(__init__)
     [java]      2490    0.004    0.000    0.004    0.000 function.py:3281(release)
     [java]      2361    0.004    0.000    0.004    0.000 function.py:3285(__del__)
     [java]      2492    0.209    0.000    1.578    0.001 function.py:330(__init__)
     [java]      6252    0.014    0.000    0.019    0.000 function.py:343(<genexpr>)
     [java]      2492    0.007    0.000    0.007    0.000 function.py:344(<listcomp>)
     [java]      2492    0.006    0.000    0.006    0.000 function.py:362(<listcomp>)
     [java]      2492    0.010    0.000    0.016    0.000 function.py:363(<listcomp>)
     [java]      2492    0.007    0.000    0.010    0.000 function.py:364(<listcomp>)
     [java]      2492    0.003    0.000    0.003    0.000 function.py:366(<listcomp>)
     [java]      2492    0.020    0.000    0.020    0.000 function.py:394(<listcomp>)
     [java]      2492    0.009    0.000    0.014    0.000 function.py:395(<listcomp>)
     [java]      4592    0.008    0.000    0.008    0.000 function.py:403(<genexpr>)
     [java]      1660    0.003    0.000    0.007    0.000 function.py:405(signature)
     [java]         2    0.000    0.000    0.004    0.002 function.py:413(definition)
     [java]      2494    0.072    0.000    0.466    0.000 function.py:421(_get_definition)
     [java]      4982    0.008    0.000    0.008    0.000 function.py:452(name)
     [java]       830    0.056    0.000   21.982    0.026 function.py:460(call)
     [java]      2492    0.066    0.000    1.676    0.001 function.py:575(__init__)
     [java]      4982    0.008    0.000    0.008    0.000 function.py:717(forward)
     [java]       913    0.001    0.000    0.001    0.000 function_base.py:5333(_append_dispatcher)
     [java]       913    0.005    0.000    0.029    0.000 function_base.py:5337(append)
     [java]      2494    0.012    0.000    0.018    0.000 function_cache.py:102(__init__)
     [java]      3320    0.014    0.000    0.627    0.000 function_cache.py:114(lookup)
     [java]      2492    0.021    0.000    0.189    0.000 function_cache.py:135(add)
     [java]         2    0.000    0.000    0.000    0.000 function_cache.py:150(generalize)
     [java]      3320    0.006    0.000    0.006    0.000 function_cache.py:42(__init__)
     [java]         2    0.000    0.000    0.000    0.000 function_cache.py:71(_placeholder_value)
     [java]     14944    0.040    0.000    0.585    0.000 function_cache.py:75(__hash__)
     [java]      1656    0.010    0.000    0.316    0.000 function_cache.py:78(__eq__)
     [java]      3320    0.040    0.000    1.539    0.000 function_context.py:123(make_cache_key)
     [java]      3320    0.060    0.000    0.163    0.000 function_context.py:40(make_function_context)
     [java]      4988    0.081    0.000    0.165    0.000 function_spec.py:149(__init__)
     [java]      4988    0.009    0.000    0.009    0.000 function_spec.py:188(<dictcomp>)
     [java]      4988    0.008    0.000    0.008    0.000 function_spec.py:194(<dictcomp>)
     [java]      4984    0.007    0.000    0.007    0.000 function_spec.py:207(fullargspec)
     [java]      2492    0.004    0.000    0.004    0.000 function_spec.py:211(is_method)
     [java]     19104    0.023    0.000    0.023    0.000 function_spec.py:223(input_signature)
     [java]      2490    0.003    0.000    0.003    0.000 function_spec.py:227(flat_input_signature)
     [java]      2492    0.003    0.000    0.003    0.000 function_spec.py:231(is_pure)
     [java]      7476    0.010    0.000    0.010    0.000 function_spec.py:239(arg_names)
     [java]      2492    0.004    0.000    0.004    0.000 function_spec.py:243(vararg_name)
     [java]       832    0.003    0.000    0.005    0.000 function_spec.py:301(_validate_inputs)
     [java]       832    0.010    0.000    0.070    0.000 function_spec.py:309(canonicalize_function_inputs)
     [java]      2496    0.042    0.000    0.523    0.000 function_spec.py:38(from_function_and_signature)
     [java]      1664    0.012    0.000    0.053    0.000 function_spec.py:456(_convert_numpy_inputs)
     [java]      2490    0.018    0.000    0.090    0.000 function_utils.py:85(get_func_name)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:43(__init__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:70(__enter__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:79(__exit__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:87(ret)
     [java]         2    0.000    0.000    0.001    0.000 functional.py:1008(<listcomp>)
     [java]         2    0.000    0.000    0.006    0.003 functional.py:1017(_build_map)
     [java]     354/4    0.004    0.000    0.006    0.001 functional.py:1048(_build_map_helper)
     [java]       312    0.001    0.000    0.001    0.000 functional.py:1096(_should_skip_first_node)
     [java]         2    0.000    0.000    1.022    0.511 functional.py:1110(connect_ancillary_layers)
     [java]         2    0.002    0.001    1.022    0.511 functional.py:1113(<listcomp>)
     [java]         2    0.003    0.001    6.432    3.216 functional.py:1126(reconstruct_from_config)
     [java]       356    0.002    0.000    0.004    0.000 functional.py:1157(get_node_index)
     [java]       350    0.002    0.000    0.048    0.000 functional.py:1163(_deserialize_keras_tensors)
     [java]       310    0.010    0.000    4.903    0.016 functional.py:1193(process_node)
     [java]       312    0.005    0.000    1.525    0.005 functional.py:1265(process_layer)
     [java]         2    0.000    0.000    0.113    0.056 functional.py:128(__init__)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:1425(shape_with_no_batch_size)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:145(<listcomp>)
     [java]         2    0.001    0.000    0.103    0.052 functional.py:150(_init_graph_network)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:191(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:303(input_spec)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:321(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:363(_set_output_names)
     [java]       840    0.449    0.001   15.411    0.018 functional.py:382(_layer_checkpoint_dependencies)
     [java]       840    0.007    0.000   15.423    0.018 functional.py:412(_lookup_dependency)
     [java]         2    0.000    0.000    2.981    1.491 functional.py:439(call)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:539(_init_set_name)
     [java]         2    0.005    0.003    2.981    1.491 functional.py:552(_run_internal_graph)
     [java]       660    0.001    0.000    0.001    0.000 functional.py:592(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:610(_flatten_to_reference_inputs)
     [java]         2    0.000    0.000    0.001    0.001 functional.py:644(_conform_to_reference_input)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:694(_validate_graph_inputs_and_outputs)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:697(<setcomp>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:729(<listcomp>)
     [java]         2    0.005    0.003    0.013    0.007 functional.py:825(_compute_tensor_usage_count)
     [java]         4    0.000    0.000    0.000    0.000 functional.py:833(<genexpr>)
     [java]       310    0.001    0.000    0.001    0.000 functional.py:841(<setcomp>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:856(_assert_weights_created)
     [java]       312    0.000    0.000    0.000    0.000 functional.py:893(_make_node_key)
     [java]         2    0.007    0.004    0.028    0.014 functional.py:897(_map_graph_network)
     [java]         2    0.001    0.001    0.003    0.001 functional.py:917(<setcomp>)
     [java]       312    0.000    0.000    0.000    0.000 functional.py:977(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 functional_utils.py:30(is_input_keras_tensor)
     [java]         1    0.000    0.000    0.018    0.018 functions.py:130(transform)
     [java]         2    0.000    0.000    0.000    0.000 functions.py:30(__init__)
     [java]         1    0.000    0.000    0.000    0.000 functions.py:37(_function_scope_options)
     [java]         1    0.000    0.000    0.016    0.016 functions.py:77(visit_FunctionDef)
     [java]     17277    0.296    0.000    0.557    0.000 functools.py:35(update_wrapper)
     [java]     14785    0.034    0.000    0.034    0.000 functools.py:65(wraps)
     [java]       540    0.005    0.000    0.009    0.000 gast.py:15(create_node)
     [java]        18    0.000    0.000    0.022    0.001 gast.py:299(parse)
     [java]       976    0.006    0.000    0.085    0.000 gen_array_ops.py:3456(fill)
     [java]       830    0.016    0.000    2.906    0.004 gen_array_ops.py:3885(gather_v2)
     [java]      7176    0.049    0.000    3.873    0.001 gen_array_ops.py:4050(identity)
     [java]       350    0.005    0.000    0.559    0.002 gen_array_ops.py:6855(placeholder)
     [java]       838    0.011    0.000    2.382    0.003 gen_array_ops.py:8457(reshape)
     [java]      1660    0.024    0.000    6.817    0.004 gen_array_ops.py:9540(_slice)
     [java]       832    0.010    0.000    1.089    0.001 gen_control_flow_ops.py:464(no_op)
     [java]       830    0.021    0.000    1.741    0.002 gen_dataset_ops.py:1056(concatenate_dataset)
     [java]       830    0.004    0.000    0.017    0.000 gen_dataset_ops.py:1094(<listcomp>)
     [java]       830    0.003    0.000    0.017    0.000 gen_dataset_ops.py:1099(<listcomp>)
     [java]       830    0.005    0.000    0.122    0.000 gen_dataset_ops.py:188(anonymous_iterator_v3)
     [java]       830    0.007    0.000    0.431    0.001 gen_dataset_ops.py:2331(flat_map_dataset)
     [java]         2    0.000    0.000    0.005    0.003 gen_dataset_ops.py:2996(iterator_get_next)
     [java]         2    0.000    0.000    0.000    0.000 gen_dataset_ops.py:3031(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 gen_dataset_ops.py:3036(<listcomp>)
     [java]       830    0.007    0.000   12.622    0.015 gen_dataset_ops.py:3391(make_iterator)
     [java]       830    0.007    0.000    0.340    0.000 gen_dataset_ops.py:3439(map_dataset)
     [java]       830    0.006    0.000    0.147    0.000 gen_dataset_ops.py:4802(options_dataset)
     [java]       830    0.007    0.000    0.322    0.000 gen_dataset_ops.py:5996(parallel_map_dataset_v2)
     [java]       830    0.006    0.000    0.121    0.000 gen_dataset_ops.py:6137(prefetch_dataset)
     [java]       830    0.007    0.000    0.150    0.000 gen_dataset_ops.py:6264(range_dataset)
     [java]      1660    0.012    0.000    0.227    0.000 gen_dataset_ops.py:6483(repeat_dataset)
     [java]      1660    0.024    0.000    1.697    0.001 gen_dataset_ops.py:7663(tensor_dataset)
     [java]       830    0.003    0.000    0.018    0.000 gen_dataset_ops.py:7698(<listcomp>)
     [java]       830    0.020    0.000    1.657    0.002 gen_dataset_ops.py:7741(tensor_slice_dataset)
     [java]       830    0.003    0.000    0.019    0.000 gen_dataset_ops.py:7777(<listcomp>)
     [java]       830    0.007    0.000    0.151    0.000 gen_dataset_ops.py:8247(zip_dataset)
     [java]         2    0.000    0.000    0.000    0.000 gen_math_ops.py:11071(sub)
     [java]         4    0.000    0.000    0.011    0.003 gen_math_ops.py:11369(tanh)
     [java]        82    0.001    0.000    0.180    0.002 gen_math_ops.py:444(add_v2)
     [java]        12    0.000    0.000    0.029    0.002 gen_math_ops.py:5986(mat_mul)
     [java]         2    0.000    0.000    0.000    0.000 gen_math_ops.py:6558(mul)
     [java]       830    0.013    0.000    1.897    0.002 gen_math_ops.py:7702(_range)
     [java]       164    0.003    0.000    0.330    0.002 gen_nn_ops.py:10502(relu)
     [java]       172    0.005    0.000    1.604    0.009 gen_nn_ops.py:4244(fused_batch_norm_v3)
     [java]       176    0.003    0.000    0.348    0.002 gen_nn_ops.py:5133(leaky_relu)
     [java]       172    0.005    0.000    1.009    0.006 gen_nn_ops.py:860(conv2d)
     [java]       172    0.001    0.000    0.004    0.000 gen_nn_ops.py:947(<listcomp>)
     [java]       172    0.000    0.000    0.000    0.000 gen_nn_ops.py:958(<listcomp>)
     [java]       172    0.001    0.000    0.004    0.000 gen_nn_ops.py:968(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 gen_random_ops.py:690(random_uniform)
     [java]       994    0.006    0.000    0.084    0.000 gen_resource_variable_ops.py:1157(var_handle_op)
     [java]      2790    0.021    0.000    0.129    0.000 gen_resource_variable_ops.py:122(assign_variable_op)
     [java]         2    0.000    0.000    0.005    0.003 gen_resource_variable_ops.py:24(assign_add_variable_op)
     [java]      5554    0.038    0.000    2.641    0.000 gen_resource_variable_ops.py:456(read_variable_op)
     [java]       324    0.001    0.000    0.001    0.000 generic_utils.py:1168(validate_kwargs)
     [java]     13600    0.030    0.000    0.047    0.000 generic_utils.py:1188(is_default)
     [java]         2    0.002    0.001    0.017    0.008 generic_utils.py:1193(populate_dict_with_module_objects)
     [java]         5    0.000    0.000    0.001    0.000 generic_utils.py:1209(_load)
     [java]         5    0.000    0.000    0.001    0.000 generic_utils.py:1220(__getattr__)
     [java]         4    0.000    0.000    0.000    0.000 generic_utils.py:131(_shared_object_disabled)
     [java]      1872    0.006    0.000    0.008    0.000 generic_utils.py:136(_shared_object_loading_scope)
     [java]         2    0.000    0.000    0.000    0.000 generic_utils.py:173(get)
     [java]         4    0.000    0.000    0.000    0.000 generic_utils.py:176(set)
     [java]         4    0.000    0.000    0.000    0.000 generic_utils.py:189(__enter__)
     [java]       934    0.001    0.000    0.001    0.000 generic_utils.py:198(get)
     [java]       932    0.001    0.000    0.001    0.000 generic_utils.py:214(set)
     [java]         4    0.000    0.000    0.000    0.000 generic_utils.py:220(__exit__)
     [java]      1516    0.003    0.000    0.003    0.000 generic_utils.py:426(get_registered_object)
     [java]       936    0.019    0.000    0.043    0.000 generic_utils.py:546(class_and_config_for_serialized_keras_object)
     [java]  1574/550    0.027    0.000    7.588    0.014 generic_utils.py:610(deserialize_keras_object)
     [java]       936    0.002    0.000    0.002    0.000 generic_utils.py:78(__init__)
     [java]       936    0.004    0.000    0.008    0.000 generic_utils.py:82(__enter__)
     [java]       936    0.004    0.000    0.008    0.000 generic_utils.py:88(__exit__)
     [java]         8    0.000    0.000    0.002    0.000 genericpath.py:16(exists)
     [java]         2    0.000    0.000    0.000    0.000 gfile.py:113(__init__)
     [java]       830    0.003    0.000    0.006    0.000 gradients_util.py:1032(PossibleTapeGradientTypes)
     [java]      4196    0.130    0.000    3.683    0.001 graph_only_ops.py:25(graph_placeholder)
     [java]         2    0.000    0.000    0.000    0.000 graph_view.py:152(__init__)
     [java]      1466    0.138    0.000    0.687    0.000 group.py:319(__getitem__)
     [java]      1468    0.099    0.000    0.107    0.000 group.py:34(__init__)
     [java]         4    0.000    0.000    0.000    0.000 group.py:480(__contains__)
     [java]      4194    0.044    0.000    0.158    0.000 handle_data_util.py:25(copy_handle_data)
     [java]       874    0.011    0.000    0.042    0.000 handle_data_util.py:52(set_handle_data)
     [java]         2    0.001    0.000   10.921    5.461 hdf5_format.py:139(load_model_from_hdf5)
     [java]       178    0.002    0.000    0.009    0.000 hdf5_format.py:236(preprocess_weights_for_loading)
     [java]       178    0.000    0.000    0.000    0.000 hdf5_format.py:423(_convert_rnn_weights)
     [java]         2    0.000    0.000    0.360    0.180 hdf5_format.py:614(load_optimizer_weights_from_hdf5_group)
     [java]         2    0.002    0.001    0.356    0.178 hdf5_format.py:626(<listcomp>)
     [java]       180    0.001    0.000    0.477    0.003 hdf5_format.py:672(load_subset_weights_from_hdf5_group)
     [java]       180    0.012    0.000    0.435    0.002 hdf5_format.py:686(<listcomp>)
     [java]         2    0.009    0.005    1.019    0.509 hdf5_format.py:689(load_weights_from_hdf5_group)
     [java]       496    0.010    0.000    0.117    0.000 hdf5_format.py:937(load_attributes_from_hdf5_group)
     [java]       496    0.005    0.000    0.007    0.000 hdf5_format.py:952(<listcomp>)
     [java]       490    0.003    0.000    0.054    0.000 hdf5_format.py:968(_legacy_weights)
     [java]      1362    0.002    0.000    0.003    0.000 hdf5_format.py:987(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 indexed_slices.py:292(internal_convert_to_tensor_or_indexed_slices)
     [java]       978    0.003    0.000    0.009    0.000 initializers_v2.py:1006(_get_dtype)
     [java]         2    0.000    0.000    0.000    0.000 initializers_v2.py:1012(_assert_float_dtype)
     [java]         2    0.000    0.000    0.000    0.000 initializers_v2.py:1032(_compute_fans)
     [java]       978    0.003    0.000    0.005    0.000 initializers_v2.py:1059(_validate_kwargs)
     [java]       978    0.002    0.000    0.002    0.000 initializers_v2.py:1060(<listcomp>)
     [java]       804    0.009    0.000    0.368    0.000 initializers_v2.py:132(__call__)
     [java]       172    0.002    0.000    0.065    0.000 initializers_v2.py:172(__call__)
     [java]         2    0.000    0.000    0.000    0.000 initializers_v2.py:509(__init__)
     [java]         2    0.000    0.000    0.005    0.002 initializers_v2.py:537(__call__)
     [java]         2    0.000    0.000    0.004    0.002 initializers_v2.py:560(_generate_init_val)
     [java]         2    0.000    0.000    0.000    0.000 initializers_v2.py:777(__init__)
     [java]       528    0.002    0.000    0.002    0.000 initializers_v2.py:93(from_config)
     [java]         2    0.000    0.000    0.025    0.012 input_layer.py:96(__init__)
     [java]       622    0.008    0.000    0.048    0.000 input_spec.py:155(assert_input_compatibility)
     [java]       276    0.003    0.000    0.005    0.000 input_spec.py:70(__init__)
     [java]       276    0.001    0.000    0.001    0.000 input_spec.py:97(<dictcomp>)
     [java]      4894    0.126    0.000    0.763    0.000 inspect.py:1129(getfullargspec)
     [java]      5630    0.023    0.000    0.039    0.000 inspect.py:1546(currentframe)
     [java]     18216    0.046    0.000    0.065    0.000 inspect.py:159(isfunction)
     [java]      5072    0.142    0.000    0.512    0.000 inspect.py:2150(_signature_from_function)
     [java] 6640/5072    0.065    0.000    0.614    0.000 inspect.py:2244(_signature_from_callable)
     [java]         9    0.000    0.000    0.000    0.000 inspect.py:237(istraceback)
     [java]         9    0.000    0.000    0.000    0.000 inspect.py:247(isframe)
     [java]     13722    0.093    0.000    0.193    0.000 inspect.py:2515(__init__)
     [java]     24534    0.028    0.000    0.028    0.000 inspect.py:2565(name)
     [java]     11802    0.013    0.000    0.013    0.000 inspect.py:2569(default)
     [java]     10812    0.013    0.000    0.013    0.000 inspect.py:2573(annotation)
     [java]     10812    0.013    0.000    0.013    0.000 inspect.py:2577(kind)
     [java]         8    0.000    0.000    0.000    0.000 inspect.py:261(iscode)
     [java]      5072    0.053    0.000    0.112    0.000 inspect.py:2798(__init__)
     [java]     18794    0.043    0.000    0.059    0.000 inspect.py:2847(<genexpr>)
     [java]      2496    0.007    0.000    0.009    0.000 inspect.py:286(isbuiltin)
     [java]       178    0.001    0.000    0.082    0.000 inspect.py:2876(from_callable)
     [java]      6852    0.009    0.000    0.009    0.000 inspect.py:2882(parameters)
     [java]      4894    0.007    0.000    0.007    0.000 inspect.py:2886(return_annotation)
     [java]       178    0.001    0.000    0.082    0.000 inspect.py:3128(signature)
     [java]       179    0.001    0.000    0.002    0.000 inspect.py:494(unwrap)
     [java]         1    0.000    0.000    0.000    0.000 inspect.py:511(_is_wrapper)
     [java]       178    0.000    0.000    0.001    0.000 inspect.py:514(_is_wrapper)
     [java]      2506    0.006    0.000    0.009    0.000 inspect.py:64(ismodule)
     [java]         6    0.000    0.000    0.000    0.000 inspect.py:655(getfile)
     [java]         5    0.000    0.000    0.001    0.000 inspect.py:693(getsourcefile)
     [java]        15    0.000    0.000    0.000    0.000 inspect.py:700(<genexpr>)
     [java]        20    0.000    0.000    0.000    0.000 inspect.py:703(<genexpr>)
     [java]      2497    0.014    0.000    0.029    0.000 inspect.py:727(getmodule)
     [java]      5017    0.012    0.000    0.017    0.000 inspect.py:73(isclass)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:809(findsource)
     [java]     20802    0.049    0.000    0.073    0.000 inspect.py:81(ismethod)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:926(__init__)
     [java]        40    0.000    0.000    0.000    0.000 inspect.py:936(tokeneater)
     [java]         2    0.000    0.000    0.004    0.002 inspect.py:986(getblock)
     [java]         1    0.000    0.000    0.001    0.001 inspect.py:997(getsourcelines)
     [java]         1    0.005    0.005    0.012    0.012 inspect_utils.py:111(_fix_linecache_record)
     [java]         1    0.000    0.000    0.015    0.015 inspect_utils.py:138(getimmediatesource)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:146(getnamespace)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:336(getfutureimports)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:348(<genexpr>)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:52(islambda)
     [java]      2496    0.024    0.000    0.812    0.000 inspect_utils.py:77(isbuiltin)
     [java]    384384    0.389    0.000    0.389    0.000 inspect_utils.py:79(<genexpr>)
     [java]      2496    0.008    0.000    0.016    0.000 inspect_utils.py:91(isconstructor)
     [java]         2    0.000    0.000    0.000    0.000 io_utils.py:83(path_to_string)
     [java]       834    0.009    0.000   12.912    0.015 iterator_ops.py:658(__init__)
     [java]       830    0.027    0.000   12.903    0.016 iterator_ops.py:700(_create_iterator)
     [java]         2    0.000    0.000    0.007    0.003 iterator_ops.py:729(_next_internal)
     [java]      1684    0.009    0.000    0.015    0.000 iterator_ops.py:760(_type_spec)
     [java]         2    0.000    0.000    0.007    0.003 iterator_ops.py:764(__next__)
     [java]      1684    0.003    0.000    0.003    0.000 iterator_ops.py:814(element_spec)
     [java]       830    0.005    0.000    0.021    0.000 iterator_ops.py:849(__tf_tracing_type__)
     [java]      1690    0.003    0.000    0.003    0.000 iterator_ops.py:878(__init__)
     [java]         4    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
     [java]      5814    0.008    0.000    0.008    0.000 iterator_ops.py:885(_serialize)
     [java]         4    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
     [java]       846    0.001    0.000    0.001    0.000 iterator_ops.py:892(_to_components)
     [java]         4    0.000    0.000    0.000    0.000 iterator_ops.py:895(_from_components)
     [java]         4    0.000    0.000    0.020    0.005 json_utils.py:68(decode)
     [java]      2228    0.008    0.000    0.011    0.000 json_utils.py:83(_decode_helper)
     [java]       312    0.003    0.000    0.009    0.000 keras_tensor.py:112(__init__)
     [java]       350    0.001    0.000    0.001    0.000 keras_tensor.py:133(type_spec)
     [java]       706    0.002    0.000    0.003    0.000 keras_tensor.py:138(shape)
     [java]       310    0.004    0.000    0.059    0.000 keras_tensor.py:143(from_tensor)
     [java]         2    0.000    0.000    0.000    0.000 keras_tensor.py:185(from_type_spec)
     [java]       350    0.002    0.000    0.586    0.002 keras_tensor.py:189(_to_placeholder)
     [java]       350    0.002    0.000    0.568    0.002 keras_tensor.py:211(component_to_placeholder)
     [java]       270    0.000    0.000    0.000    0.000 keras_tensor.py:267(is_tensor_like)
     [java]       698    0.004    0.000    0.009    0.000 keras_tensor.py:318(dtype)
     [java]         2    0.000    0.000    0.000    0.000 keras_tensor.py:345(node)
     [java]       746    0.003    0.000    0.590    0.001 keras_tensor.py:592(keras_tensor_to_placeholder)
     [java]       310    0.002    0.000    0.064    0.000 keras_tensor.py:600(keras_tensor_from_tensor)
     [java]         2    0.000    0.000    0.000    0.000 keras_tensor.py:617(keras_tensor_from_type_spec)
     [java]         2    0.000    0.000    0.000    0.000 layer_utils.py:127(invalidate_all)
     [java] 4284/2920    0.017    0.000    0.100    0.000 layer_utils.py:485(wrapped)
     [java]       174    0.001    0.000    0.002    0.000 layer_utils.py:82(__init__)
     [java]         2    0.000    0.000    0.000    0.000 layout_map.py:43(get_current_layout_map)
     [java]        12    0.000    0.000    0.002    0.000 lazy_loader.py:38(_load)
     [java]        12    0.000    0.000    0.002    0.000 lazy_loader.py:57(__getattr__)
     [java]        88    0.001    0.000    0.114    0.001 leaky_relu.py:60(__init__)
     [java]       176    0.001    0.000    0.390    0.002 leaky_relu.py:69(call)
     [java]         2    0.000    0.000    0.000    0.000 linecache.py:36(getlines)
     [java]         2    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
     [java]         1    0.000    0.000    0.001    0.001 linecache.py:80(updatecache)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:110(__init__)
     [java]      83/1    0.000    0.000    0.006    0.006 liveness.py:117(visit)
     [java]         1    0.000    0.000    0.006    0.006 liveness.py:127(_analyze_function)
     [java]         1    0.000    0.000    0.006    0.006 liveness.py:141(visit_FunctionDef)
     [java]         2    0.000    0.000    0.000    0.000 liveness.py:144(_block_statement_live_out)
     [java]         3    0.000    0.000    0.000    0.000 liveness.py:152(_block_statement_live_in)
     [java]         1    0.000    0.000    0.002    0.002 liveness.py:179(visit_Try)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:184(visit_ExceptHandler)
     [java]         1    0.000    0.000    0.005    0.005 liveness.py:189(visit_With)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:193(visit_Expr)
     [java]         1    0.000    0.000    0.006    0.006 liveness.py:202(resolve)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:39(__init__)
     [java]        20    0.000    0.000    0.000    0.000 liveness.py:43(init_state)
     [java]        10    0.000    0.000    0.000    0.000 liveness.py:46(visit_node)
     [java]         2    0.000    0.000    0.000    0.000 load_context.py:29(set_load_options)
     [java]         2    0.000    0.000    0.000    0.000 load_context.py:33(clear_load_options)
     [java]         4    0.000    0.000    0.000    0.000 load_context.py:47(load_context)
     [java]         1    0.000    0.000    0.001    0.001 loader.py:44(load_source)
     [java]         1    0.000    0.000    0.044    0.044 loader.py:67(load_ast)
     [java]     23656    0.220    0.000    0.414    0.000 lock_util.py:105(_another_group_active)
     [java]     47312    0.067    0.000    0.067    0.000 lock_util.py:106(<genexpr>)
     [java]     70968    0.098    0.000    0.098    0.000 lock_util.py:109(_validate_group_id)
     [java]     23656    0.043    0.000    0.043    0.000 lock_util.py:121(__init__)
     [java]     23656    0.063    0.000    0.775    0.000 lock_util.py:125(__enter__)
     [java]     23656    0.072    0.000    0.724    0.000 lock_util.py:128(__exit__)
     [java]      2806    0.019    0.000    0.065    0.000 lock_util.py:52(__init__)
     [java]     23656    0.124    0.000    0.204    0.000 lock_util.py:73(group)
     [java]     23656    0.186    0.000    0.712    0.000 lock_util.py:85(acquire)
     [java]     23656    0.199    0.000    0.651    0.000 lock_util.py:95(release)
     [java]         1    0.000    0.000    0.005    0.005 logical_expressions.py:131(transform)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:203(__init__)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:2310(deserialize)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:2329(get)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:71(__init__)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:94(_set_name_scope)
     [java]         4    0.000    0.000    0.000    0.000 losses_utils.py:77(all)
     [java]         4    0.000    0.000    0.000    0.000 losses_utils.py:81(validate)
     [java]        84    0.000    0.000    0.000    0.000 math_ops.py:1343(maybe_promote_tensors)
     [java]        84    0.001    0.000    0.196    0.002 math_ops.py:1398(binary_op_wrapper)
     [java]        80    0.001    0.000    0.182    0.002 math_ops.py:1728(_add_dispatch)
     [java]         2    0.000    0.000    0.000    0.000 math_ops.py:1759(_mul_dispatch)
     [java]       830    0.026    0.000    4.649    0.006 math_ops.py:2042(range)
     [java]        12    0.000    0.000    0.071    0.006 math_ops.py:3488(matmul)
     [java]         2    0.000    0.000    0.000    0.000 math_ops.py:3925(add)
     [java]         2    0.000    0.000    0.000    0.000 math_ops.py:480(multiply)
     [java]         2    0.000    0.000    0.000    0.000 math_ops.py:544(subtract)
     [java]      2664    0.025    0.000    0.061    0.000 math_ops.py:936(cast)
     [java]       830    0.166    0.000  140.545    0.169 mcts_uct.py:142(select_node)
     [java]         2    0.000    0.000   10.929    5.465 mcts_uct.py:16(__init__)
     [java]        83    0.015    0.000    1.121    0.014 mcts_uct.py:230(final_move_selection)
     [java]       913    0.073    0.000    0.153    0.000 mcts_uct.py:290(__init__)
     [java]       913    0.027    0.000    0.027    0.000 mcts_uct.py:307(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 mcts_uct.py:37(init_ai)
     [java]        83    1.912    0.023  143.632    1.731 mcts_uct.py:41(select_action)
     [java]         6    0.000    0.000    0.000    0.000 metrics_utils.py:46(update_state_wrapper)
     [java]         6    0.000    0.000    0.000    0.000 metrics_utils.py:78(result_wrapper)
     [java]         2    0.000    0.000    7.586    3.793 model_config.py:21(model_from_config)
     [java]        60    0.000    0.000    0.001    0.000 module_wrapper.py:178(_getattribute)
     [java]      5636    0.038    0.000    0.088    0.000 monitoring.py:143(get_cell)
     [java]      3324    0.006    0.000    0.006    0.000 monitoring.py:157(__init__)
     [java]      3324    0.012    0.000    0.023    0.000 monitoring.py:165(increase_by)
     [java]      3324    0.023    0.000    0.077    0.000 monitoring.py:199(get_cell)
     [java]      2312    0.004    0.000    0.004    0.000 monitoring.py:316(__init__)
     [java]      2312    0.008    0.000    0.013    0.000 monitoring.py:324(set)
     [java]      2312    0.018    0.000    0.061    0.000 monitoring.py:359(get_cell)
     [java]      2492    0.004    0.000    0.004    0.000 monitoring.py:472(__init__)
     [java]      2492    0.008    0.000    0.015    0.000 monitoring.py:480(__enter__)
     [java]      2492    0.017    0.000    0.042    0.000 monitoring.py:484(__exit__)
     [java]      1743    0.003    0.000    0.003    0.000 multiarray.py:1071(copyto)
     [java]       913    0.001    0.000    0.001    0.000 multiarray.py:148(concatenate)
     [java]      2490    0.004    0.000    0.004    0.000 multiarray.py:341(where)
     [java]         1    0.000    0.000    0.000    0.000 naming.py:23(__init__)
     [java]         6    0.000    0.000    0.000    0.000 naming.py:27(new_symbol)
     [java] 26710/13346    0.123    0.000    0.272    0.000 nest.py:1001(_yield_flat_up_to)
     [java] 5064/1688    0.067    0.000    0.173    0.000 nest.py:1031(assert_shallow_structure)
     [java]      1660    0.021    0.000    0.065    0.000 nest.py:106(_packed_nest_with_indices)
     [java]       846    0.006    0.000    0.136    0.000 nest.py:1159(flatten_up_to)
     [java]       846    0.005    0.000    0.050    0.000 nest.py:1244(<listcomp>)
     [java]       834    0.007    0.000    0.404    0.000 nest.py:1353(map_structure_up_to)
     [java]      6642    0.059    0.000    0.230    0.000 nest.py:137(pack_sequence_as)
     [java]     22310    0.084    0.000    0.148    0.000 nest.py:138(_sorted)
     [java]      1668    0.006    0.000    0.014    0.000 nest.py:1429(<lambda>)
     [java]       834    0.018    0.000    0.398    0.000 nest.py:1434(map_structure_with_tuple_paths_up_to)
     [java]     19394    0.057    0.000    0.119    0.000 nest.py:147(is_namedtuple)
     [java]      1676    0.004    0.000    0.140    0.000 nest.py:1518(<genexpr>)
     [java]      2502    0.007    0.000    0.048    0.000 nest.py:1524(<genexpr>)
     [java]       834    0.008    0.000    0.070    0.000 nest.py:1527(<listcomp>)
     [java]      8306    0.024    0.000    0.211    0.000 nest.py:1605(yield_flat_paths)
     [java]      4984    0.035    0.000    0.282    0.000 nest.py:1679(flatten_with_tuple_paths)
     [java]       838    0.004    0.000    0.083    0.000 nest.py:1703(list_to_tuple)
     [java]       838    0.004    0.000    0.028    0.000 nest.py:1718(sequence_fn)
     [java]       666    0.002    0.000    0.003    0.000 nest.py:173(is_attrs)
     [java]       830    0.011    0.000    0.085    0.000 nest.py:177(map_structure)
     [java]      1016    0.002    0.000    0.004    0.000 nest.py:179(is_mapping)
     [java]     28228    0.327    0.000    0.743    0.000 nest.py:185(_sequence_like)
     [java]      1660    0.004    0.000    0.006    0.000 nest.py:224(<genexpr>)
     [java]       830    0.003    0.000    0.056    0.000 nest.py:228(<listcomp>)
     [java]     63674    0.184    0.000    0.447    0.000 nest.py:255(_yield_value)
     [java]     90366    0.226    0.000    0.388    0.000 nest.py:260(_yield_sorted_items)
     [java]      2864    0.007    0.000    0.012    0.000 nest.py:314(is_nested)
     [java]    106666    0.351    0.000    0.879    0.000 nest.py:355(flatten)
     [java] 4156/4152    0.017    0.000    0.067    0.000 nest.py:475(assert_same_structure)
     [java]      4980    0.016    0.000    0.034    0.000 nest.py:51(_yield_value)
     [java] 25560/25392    0.204    0.000    0.688    0.000 nest.py:611(_packed_nest_with_indices)
     [java]     33894    0.284    0.000    1.819    0.000 nest.py:651(_pack_sequence_as)
     [java]     33056    0.097    0.000    1.844    0.000 nest.py:691(pack_sequence_as)
     [java] 15772/14582    0.243    0.000   10.077    0.001 nest.py:808(map_structure)
     [java]      4980    0.016    0.000    0.039    0.000 nest.py:84(assert_same_structure)
     [java]     33208    0.069    0.000    0.194    0.000 nest.py:912(<genexpr>)
     [java] 15772/14582    0.069    0.000    8.989    0.001 nest.py:916(<listcomp>)
     [java]       172    0.002    0.000    2.679    0.016 nn_impl.py:1594(fused_batch_norm)
     [java]       172    0.001    0.000    1.045    0.006 nn_ops.py:1140(convolution_v2)
     [java]       172    0.005    0.000    1.044    0.006 nn_ops.py:1166(convolution_internal)
     [java]       860    0.001    0.000    0.001    0.000 nn_ops.py:1255(<genexpr>)
     [java]       344    0.002    0.000    0.002    0.000 nn_ops.py:185(_get_sequence)
     [java]       172    0.001    0.000    1.012    0.006 nn_ops.py:2742(_conv2d_expanded_batch)
     [java]       176    0.004    0.000    0.378    0.002 nn_ops.py:3630(leaky_relu)
     [java]       312    0.001    0.000    0.002    0.000 node.py:126(<listcomp>)
     [java]       312    0.001    0.000    0.001    0.000 node.py:127(<listcomp>)
     [java]      1864    0.002    0.000    0.002    0.000 node.py:129(keras_inputs)
     [java]       312    0.002    0.000    0.003    0.000 node.py:134(parent_nodes)
     [java]       310    0.002    0.000    0.013    0.000 node.py:158(map_arguments)
     [java]         2    0.000    0.000    0.000    0.000 node.py:247(input_tensors)
     [java]         6    0.000    0.000    0.000    0.000 node.py:253(output_tensors)
     [java]       352    0.001    0.000    0.001    0.000 node.py:315(is_keras_tensor)
     [java]       312    0.016    0.000    0.109    0.000 node.py:65(__init__)
     [java]       350    0.000    0.000    0.000    0.000 node.py:83(<lambda>)
     [java]       312    0.000    0.000    0.000    0.000 node.py:85(<lambda>)
     [java]      2656    0.024    0.000    0.046    0.000 numeric.py:1341(normalize_axis_tuple)
     [java]      2656    0.008    0.000    0.012    0.000 numeric.py:1391(<listcomp>)
     [java]       913    0.002    0.000    0.002    0.000 numeric.py:1400(_moveaxis_dispatcher)
     [java]       913    0.018    0.000    0.063    0.000 numeric.py:1404(moveaxis)
     [java]       913    0.002    0.000    0.002    0.000 numeric.py:1466(<listcomp>)
     [java]      3328    0.005    0.000    0.005    0.000 numeric.py:2384(_array_equal_dispatcher)
     [java]      3328    0.054    0.000    0.129    0.000 numeric.py:2388(array_equal)
     [java]      1743    0.017    0.000    0.119    0.000 numeric.py:289(full)
     [java]     12752    0.020    0.000    0.020    0.000 object_identity.py:130(__init__)
     [java]     25196    0.065    0.000    0.097    0.000 object_identity.py:133(_wrap_key)
     [java]     15786    0.076    0.000    0.238    0.000 object_identity.py:136(__getitem__)
     [java]      7382    0.034    0.000    0.099    0.000 object_identity.py:139(__setitem__)
     [java]      2028    0.011    0.000    0.036    0.000 object_identity.py:142(__delitem__)
     [java]     58298    0.241    0.000    0.326    0.000 object_identity.py:181(__init__)
     [java]     58298    0.083    0.000    0.083    0.000 object_identity.py:182(<genexpr>)
     [java]      6700    0.022    0.000    0.033    0.000 object_identity.py:190(_wrap_key)
     [java]      3758    0.018    0.000    0.050    0.000 object_identity.py:193(__contains__)
     [java]      3376    0.016    0.000    0.062    0.000 object_identity.py:199(add)
     [java]    106020    0.449    0.000    0.965    0.000 object_identity.py:202(update)
     [java]    106020    0.180    0.000    0.376    0.000 object_identity.py:203(<listcomp>)
     [java]      4984    0.012    0.000    0.018    0.000 object_identity.py:215(__len__)
     [java]    133530    0.234    0.000    0.240    0.000 object_identity.py:218(__iter__)
     [java]       874    0.003    0.000    0.009    0.000 object_identity.py:229(_wrap_key)
     [java]      4984    0.023    0.000    0.059    0.000 object_identity.py:232(__len__)
     [java]      4984    0.016    0.000    0.031    0.000 object_identity.py:234(<listcomp>)
     [java]      8790    0.017    0.000    0.020    0.000 object_identity.py:236(__iter__)
     [java]     32770    0.045    0.000    0.045    0.000 object_identity.py:32(__init__)
     [java]      3814    0.006    0.000    0.006    0.000 object_identity.py:35(unwrapped)
     [java]     12190    0.027    0.000    0.040    0.000 object_identity.py:39(_assert_type)
     [java]     12190    0.030    0.000    0.070    0.000 object_identity.py:53(__eq__)
     [java]      7574    0.020    0.000    0.031    0.000 object_identity.py:60(__hash__)
     [java]     25196    0.056    0.000    0.085    0.000 object_identity.py:62(__hash__)
     [java]       874    0.004    0.000    0.006    0.000 object_identity.py:74(__init__)
     [java]      1314    0.002    0.000    0.002    0.000 object_identity.py:77(unwrapped)
     [java]     23656    0.116    0.000    0.250    0.000 op_callbacks.py:114(should_invoke_op_callbacks)
     [java]     38186    0.092    0.000    0.143    0.000 op_def_library.py:101(_IsListValue)
     [java]     11980    0.058    0.000    0.258    0.000 op_def_library.py:105(_Flatten)
     [java]     11980    0.061    0.000    0.178    0.000 op_def_library.py:108(<listcomp>)
     [java]     11980    0.021    0.000    0.021    0.000 op_def_library.py:110(<listcomp>)
     [java]       520    0.002    0.000    0.009    0.000 op_def_library.py:162(_MakeFloat)
     [java]      2206    0.007    0.000    0.010    0.000 op_def_library.py:168(_MakeInt)
     [java]      3006    0.014    0.000    0.053    0.000 op_def_library.py:177(_MakeStr)
     [java]      1198    0.003    0.000    0.005    0.000 op_def_library.py:183(_MakeBool)
     [java]     15478    0.084    0.000    0.243    0.000 op_def_library.py:189(_MakeType)
     [java]      2842    0.020    0.000    0.188    0.000 op_def_library.py:198(_MakeShape)
     [java]     23960    0.029    0.000    0.029    0.000 op_def_library.py:251(_MaybeColocateWith)
     [java]     11980    0.358    0.000    1.764    0.000 op_def_library.py:318(_ExtractAttrProto)
     [java]     11980    0.090    0.000    0.122    0.000 op_def_library.py:351(_ExtractOutputStructure)
     [java]     11980    0.162    0.000    0.215    0.000 op_def_library.py:368(_CanExtractAttrsFastPath)
     [java]     13424    0.061    0.000    0.061    0.000 op_def_library.py:38(_Attr)
     [java]     11980    0.044    0.000    0.044    0.000 op_def_library.py:384(_CheckOpDeprecation)
     [java]     11980    0.140    0.000    0.197    0.000 op_def_library.py:394(_ExtractDefaultTypesAndAllowedTypes)
     [java] 11980/11464    0.594    0.000    9.436    0.001 op_def_library.py:412(_ExtractInputsAndAttrs)
     [java]      9516    0.016    0.000    0.016    0.000 op_def_library.py:46(_AttrValue)
     [java]      3320    0.010    0.000    0.024    0.000 op_def_library.py:475(<genexpr>)
     [java]      1660    0.005    0.000    0.007    0.000 op_def_library.py:506(<listcomp>)
     [java]     28902    0.162    0.000    1.026    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
     [java]     58364    0.248    0.000    0.543    0.000 op_def_library.py:56(<genexpr>)
     [java]     20060    0.062    0.000    0.179    0.000 op_def_library.py:597(<listcomp>)
     [java]      5500    0.010    0.000    0.010    0.000 op_def_library.py:64(_SatisfiesLengthConstraint)
     [java]     11980    0.097    0.000    0.114    0.000 op_def_library.py:701(_ExtractRemainingAttrs)
     [java]       516    0.003    0.000    0.003    0.000 op_def_library.py:71(_SatisfiesAllowedStringsConstraint)
     [java]     11980    0.151    0.000    1.538    0.000 op_def_library.py:725(_GetOpDef)
     [java]     11980    0.017    0.000    0.017    0.000 op_def_library.py:745(_CheckAllInputsUsed)
     [java] 11980/11464    0.691    0.000   28.419    0.002 op_def_library.py:753(_apply_op_helper)
     [java]     11980    0.048    0.000    0.048    0.000 op_def_library.py:792(<listcomp>)
     [java]     24390    0.233    0.000    0.856    0.000 op_def_library.py:817(value_to_attr_value)
     [java]       516    0.003    0.000    0.008    0.000 op_def_library.py:843(<listcomp>)
     [java]     20060    0.036    0.000    0.036    0.000 op_def_library.py:85(_IsListParameter)
     [java]      2492    0.009    0.000    0.049    0.000 op_def_library.py:855(<listcomp>)
     [java]      2492    0.009    0.000    0.160    0.000 op_def_library.py:859(<listcomp>)
     [java]     33184    0.057    0.000    0.057    0.000 op_def_registry.py:32(get)
     [java]      6342    0.024    0.000    0.082    0.000 ops.py:1123(_numpy)
     [java]     24266    0.088    0.000    0.128    0.000 ops.py:1129(dtype)
     [java]      6342    0.041    0.000    0.192    0.000 ops.py:1135(numpy)
     [java]       440    0.001    0.000    0.001    0.000 ops.py:118(tensor_id)
     [java]      7814    0.035    0.000    0.186    0.000 ops.py:1256(shape)
     [java]      9364    0.019    0.000    0.019    0.000 ops.py:1312(graph)
     [java]      1182    0.004    0.000    0.193    0.000 ops.py:1430(convert_to_tensor_v2_with_dispatch)
     [java]      1182    0.005    0.000    0.189    0.000 ops.py:1498(convert_to_tensor_v2)
     [java] 49374/48502    0.492    0.000   12.028    0.000 ops.py:1572(convert_to_tensor)
     [java]      1660    0.021    0.000    0.057    0.000 ops.py:1669(internal_convert_n_to_tensor)
     [java]      8926    0.012    0.000    0.012    0.000 ops.py:172(__init__)
     [java]      2494    0.008    0.000    0.066    0.000 ops.py:1748(convert_to_tensor_or_composite)
     [java]      8926    0.011    0.000    0.011    0.000 ops.py:175(__enter__)
     [java]      2494    0.014    0.000    0.058    0.000 ops.py:1771(internal_convert_to_tensor_or_composite)
     [java]      8926    0.012    0.000    0.012    0.000 ops.py:178(__exit__)
     [java]     23656    0.624    0.000    1.585    0.000 ops.py:1883(_NodeDef)
     [java]     23656    1.016    0.000    4.502    0.000 ops.py:1910(_create_c_op)
     [java]      1660    0.007    0.000    0.010    0.000 ops.py:1942(<listcomp>)
     [java]     23656    1.172    0.000   10.090    0.000 ops.py:1987(__init__)
     [java]         4    0.000    0.000    0.000    0.000 ops.py:199(_as_graph_element)
     [java]      7480    0.012    0.000    0.012    0.000 ops.py:2077(<listcomp>)
     [java]     36236    0.111    0.000    0.446    0.000 ops.py:2079(<genexpr>)
     [java]     23656    0.106    0.000    0.308    0.000 ops.py:2153(_control_flow_post_processing)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:2171(colocation_groups)
     [java]     61324    0.071    0.000    0.071    0.000 ops.py:2194(_get_control_flow_context)
     [java]       624    0.002    0.000    0.004    0.000 ops.py:2210(name)
     [java]     29974    0.096    0.000    0.175    0.000 ops.py:222(uid)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:2220(device)
     [java]     22870    0.049    0.000    0.068    0.000 ops.py:2403(_add_control_inputs)
     [java]       830    0.006    0.000    0.014    0.000 ops.py:2421(_add_control_input)
     [java]     42842    0.061    0.000    0.061    0.000 ops.py:2469(outputs)
     [java]     21206    0.193    0.000    0.686    0.000 ops.py:2474(inputs)
     [java]    358506    0.965    0.000    1.770    0.000 ops.py:2538(type)
     [java]     70012    0.099    0.000    0.099    0.000 ops.py:2543(graph)
     [java]      4156    0.046    0.000    0.220    0.000 ops.py:2584(_set_attr)
     [java]      4156    0.021    0.000    0.072    0.000 ops.py:2593(_set_attr_with_buf)
     [java]     27418    0.436    0.000    2.525    0.000 ops.py:2633(get_attr)
     [java]     14866    0.033    0.000    0.033    0.000 ops.py:2988(name_from_scope_name)
     [java]      2806    0.139    0.000    0.413    0.000 ops.py:3056(__init__)
     [java]      1676    0.011    0.000    0.021    0.000 ops.py:3178(_variable_creator_scope)
     [java]       850    0.001    0.000    0.001    0.000 ops.py:3202(<lambda>)
     [java]     31400    0.079    0.000    0.117    0.000 ops.py:3288(_variable_creator_stack)
     [java]     29568    0.042    0.000    0.042    0.000 ops.py:3312(_variable_creator_stack)
     [java]     47313    0.063    0.000    0.063    0.000 ops.py:3316(_check_not_finalized)
     [java]     23656    0.205    0.000    0.317    0.000 ops.py:3325(_add_op)
     [java]     68402    0.115    0.000    0.115    0.000 ops.py:3344(_c_graph)
     [java]     11980    0.230    0.000    0.955    0.000 ops.py:3364(graph_def_versions)
     [java]      2490    0.004    0.000    0.004    0.000 ops.py:3383(seed)
     [java]      2805    0.005    0.000    0.005    0.000 ops.py:3388(seed)
     [java]     24874    0.034    0.000    0.034    0.000 ops.py:3419(_get_control_flow_context)
     [java]      1748    0.003    0.000    0.003    0.000 ops.py:3427(_set_control_flow_context)
     [java]     35487    0.053    0.000    0.053    0.000 ops.py:3630(building_function)
     [java]     23656    0.631    0.000   16.863    0.001 ops.py:3695(_create_op_internal)
     [java]     43716    0.088    0.000    0.115    0.000 ops.py:3749(<genexpr>)
     [java]     23656    0.482    0.000    2.184    0.000 ops.py:3798(_create_op_helper)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:3918(as_graph_element)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:3954(_as_graph_element_locked)
     [java]      7476    0.049    0.000    0.071    0.000 ops.py:4043(get_operations)
     [java]     23682    0.180    0.000    0.618    0.000 ops.py:407(__init__)
     [java]     19188    0.080    0.000    0.108    0.000 ops.py:4082(_get_operation_by_name_unsafe)
     [java]     18750    0.082    0.000    0.232    0.000 ops.py:4105(_get_operation_by_tf_operation)
     [java]     18750    0.121    0.000    0.377    0.000 ops.py:4130(_get_tensor_by_tf_output)
     [java]     11676    0.149    0.000    0.612    0.000 ops.py:4150(_get_op_def)
     [java]     14784    0.057    0.000    0.212    0.000 ops.py:4168(as_default)
     [java]         1    0.000    0.000    0.000    0.000 ops.py:4215(add_to_collection)
     [java]     14025    0.056    0.000    0.091    0.000 ops.py:4254(get_collection_ref)
     [java]      2492    0.013    0.000    0.020    0.000 ops.py:4279(get_collection)
     [java]      2805    0.019    0.000    0.062    0.000 ops.py:4319(get_all_collection_keys)
     [java]      2805    0.023    0.000    0.039    0.000 ops.py:4322(<listcomp>)
     [java]      9037    0.032    0.000    0.040    0.000 ops.py:436(__getattr__)
     [java]     67235    0.168    0.000    0.254    0.000 ops.py:4361(_name_stack)
     [java]     31064    0.059    0.000    0.059    0.000 ops.py:4368(_name_stack)
     [java]     31064    0.258    0.000    0.899    0.000 ops.py:4373(name_scope)
     [java]     23682    0.084    0.000    0.702    0.000 ops.py:448(_create_with_tf_output)
     [java]     25316    0.194    0.000    0.397    0.000 ops.py:4495(unique_name)
     [java]     56072    0.079    0.000    0.079    0.000 ops.py:454(op)
     [java]       843    0.002    0.000    0.006    0.000 ops.py:4547(get_name_scope)
     [java]      1748    0.007    0.000    0.058    0.000 ops.py:4564(_colocate_with_for_gradient)
     [java]      1748    0.016    0.000    0.034    0.000 ops.py:4581(colocate_with)
     [java]     89112    0.131    0.000    0.131    0.000 ops.py:459(dtype)
     [java]     24712    0.069    0.000    0.103    0.000 ops.py:464(graph)
     [java]       310    0.002    0.000    0.006    0.000 ops.py:469(name)
     [java]     23656    0.188    0.000    0.582    0.000 ops.py:4738(_apply_device_functions)
     [java]     20952    0.056    0.000    0.648    0.000 ops.py:482(shape)
     [java]       876    0.003    0.000    0.003    0.000 ops.py:4821(__init__)
     [java]       876    0.009    0.000    0.025    0.000 ops.py:4856(__enter__)
     [java]       876    0.006    0.000    0.023    0.000 ops.py:4866(__exit__)
     [java]       876    0.001    0.000    0.001    0.000 ops.py:4874(control_inputs)
     [java]       878    0.004    0.000    0.007    0.000 ops.py:4878(add_op)
     [java]         4    0.000    0.000    0.000    0.000 ops.py:4883(op_in_group)
     [java]       876    0.004    0.000    0.008    0.000 ops.py:4888(_push_control_dependencies_controller)
     [java]       876    0.005    0.000    0.014    0.000 ops.py:4891(_pop_control_dependencies_controller)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:4895(_current_control_dependencies)
     [java]     23656    0.080    0.000    0.209    0.000 ops.py:4902(_control_dependencies_for_inputs)
     [java]       878    0.001    0.000    0.001    0.000 ops.py:4933(<genexpr>)
     [java]     23656    0.072    0.000    0.190    0.000 ops.py:4936(_record_op_seen_by_control_dependencies)
     [java]       876    0.003    0.000    0.006    0.000 ops.py:4945(control_dependencies)
     [java]     10004    0.121    0.000    0.592    0.000 ops.py:505(_c_api_shape)
     [java]      1988    0.016    0.000    0.022    0.000 ops.py:5059(_attr_scope)
     [java]     10004    0.019    0.000    0.019    0.000 ops.py:513(<listcomp>)
     [java]         8    0.000    0.000    0.000    0.000 ops.py:5264(prevent_feeding)
     [java]      2806    0.005    0.000    0.005    0.000 ops.py:5283(switch_to_thread_local)
     [java]     91179    0.235    0.000    0.359    0.000 ops.py:5300(_device_function_stack)
     [java]     23656    0.096    0.000    0.216    0.000 ops.py:5321(_snapshot_device_function_stack_metadata)
     [java]     16532    0.029    0.000    0.029    0.000 ops.py:5337(_device_function_stack)
     [java]     48190    0.125    0.000    0.202    0.000 ops.py:5346(_colocation_stack)
     [java]     23656    0.127    0.000    0.306    0.000 ops.py:5361(_snapshot_colocation_stack_metadata)
     [java]     23656    0.029    0.000    0.029    0.000 ops.py:5363(<dictcomp>)
     [java]      1744    0.003    0.000    0.003    0.000 ops.py:5368(_colocation_stack)
     [java]     50816    0.159    0.000    0.249    0.000 ops.py:5377(_control_dependencies_stack)
     [java]      1748    0.003    0.000    0.003    0.000 ops.py:5389(_control_dependencies_stack)
     [java]     59388    0.158    0.000    0.239    0.000 ops.py:5396(_distribution_strategy_stack)
     [java]     29568    0.052    0.000    0.052    0.000 ops.py:5403(_distribution_strategy_stack)
     [java]     23656    0.073    0.000    0.278    0.000 ops.py:5419(_mutation_lock)
     [java]      3848    0.023    0.000    0.159    0.000 ops.py:5438(device)
     [java]      4722    0.032    0.000    0.263    0.000 ops.py:5527(_colocate_with_for_gradient)
     [java]      4722    0.015    0.000    0.278    0.000 ops.py:5550(colocate_with)
     [java]      1097    0.007    0.000    0.031    0.000 ops.py:5561(control_dependencies)
     [java]     29568    0.106    0.000    0.156    0.000 ops.py:5622(get_controller)
     [java]    147057    0.272    0.000    0.272    0.000 ops.py:5792(get_default)
     [java]     29568    0.402    0.000    1.697    0.000 ops.py:5815(get_controller)
     [java]      1445    0.019    0.000    0.048    0.000 ops.py:5836(_get_outer_context_and_inner_device_stack)
     [java]     14550    0.079    0.000    0.395    0.000 ops.py:5874(init_scope)
     [java]        24    0.000    0.000    0.002    0.000 ops.py:591(_shape_as_list)
     [java]        24    0.000    0.000    0.000    0.000 ops.py:593(<listcomp>)
     [java]        24    0.000    0.000    0.002    0.000 ops.py:597(_shape_tuple)
     [java]      2378    0.020    0.000    0.168    0.000 ops.py:5979(executing_eagerly_outside_functions)
     [java]       832    0.005    0.000    0.013    0.000 ops.py:6012(inside_function)
     [java]       846    0.003    0.000    0.004    0.000 ops.py:611(get_shape)
     [java]    147057    0.541    0.000    0.832    0.000 ops.py:6263(get_default_graph)
     [java]       622    0.004    0.000    0.017    0.000 ops.py:6297(get_name_scope)
     [java]     11980    0.051    0.000    0.134    0.000 ops.py:6336(_get_graph_from_inputs)
     [java]         1    0.000    0.000    0.000    0.000 ops.py:6572(add_to_collection)
     [java]      2492    0.011    0.000    0.042    0.000 ops.py:6636(get_collection)
     [java]     23615    0.121    0.000    0.346    0.000 ops.py:6670(name_scope)
     [java]        16    0.000    0.000    0.000    0.000 ops.py:6706(<genexpr>)
     [java]     14910    0.034    0.000    0.035    0.000 ops.py:6722(__init__)
     [java]     14910    0.101    0.000    1.288    0.000 ops.py:6741(__enter__)
     [java]     14910    0.061    0.000    0.226    0.000 ops.py:6781(__exit__)
     [java]       320    0.003    0.000    0.006    0.000 ops.py:6841(get_current_name_scope)
     [java]      1837    0.006    0.000    0.008    0.000 ops.py:6905(__init__)
     [java]      3504    0.065    0.000    0.265    0.000 ops.py:692(set_shape)
     [java]      1837    0.022    0.000    0.075    0.000 ops.py:6923(__enter__)
     [java]      1215    0.004    0.000    0.008    0.000 ops.py:6947(_restore_name_scope)
     [java]      1837    0.010    0.000    0.027    0.000 ops.py:6957(__exit__)
     [java]       874    0.001    0.000    0.001    0.000 ops.py:7091(_op_to_colocate_with)
     [java]     23656    0.238    0.000    0.306    0.000 ops.py:7200(_reconstruct_sequence_inputs)
     [java]       438    0.004    0.000    0.014    0.000 ops.py:843(consumers)
     [java]       438    0.002    0.000    0.008    0.000 ops.py:852(<listcomp>)
     [java]     41134    0.066    0.000    0.066    0.000 ops.py:876(_as_tf_output)
     [java]         2    0.000    0.000    0.010    0.005 optimizer_v2.py:1007(_create_hypers)
     [java]         2    0.000    0.000    0.003    0.002 optimizer_v2.py:1028(iterations)
     [java]         2    0.000    0.000    0.001    0.000 optimizer_v2.py:1084(from_config)
     [java]         4    0.000    0.000    0.000    0.000 optimizer_v2.py:1124(weights)
     [java]         2    0.002    0.001    0.838    0.419 optimizer_v2.py:1159(set_weights)
     [java]        10    0.000    0.000    0.013    0.001 optimizer_v2.py:1206(add_weight)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:1248(_init_set_name)
     [java]       528    0.005    0.000    0.012    0.000 optimizer_v2.py:1378(_restore_slot_variable)
     [java]      1064    0.002    0.000    0.003    0.000 optimizer_v2.py:1471(_distribution_strategy_scope)
     [java]      1056    0.004    0.000    0.007    0.000 optimizer_v2.py:1481(_var_key)
     [java]         2    0.000    0.000    0.001    0.000 optimizer_v2.py:296(__init__)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:408(clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:423(clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:435(global_clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:453(clipvalue)
     [java]         8    0.000    0.000    0.000    0.000 optimizer_v2.py:784(_set_hyper)
     [java]         2    0.000    0.000    0.001    0.000 optimizer_v2.py:817(_create_slots_for_sharded_variables)
     [java]         2    0.000    0.000    0.906    0.453 optimizer_v2.py:845(_create_all_weights)
     [java] 4862/4736    0.011    0.000    0.014    0.000 optimizer_v2.py:863(__getattribute__)
     [java]   128/116    0.001    0.000    0.001    0.000 optimizer_v2.py:886(__setattr__)
     [java]       528    0.029    0.000    0.889    0.002 optimizer_v2.py:900(add_slot)
     [java]      1660    0.006    0.000    0.009    0.000 options.py:105(set_fn)
     [java]       830    0.008    0.000    0.014    0.000 options.py:107(_to_proto)
     [java]      9960    0.397    0.000    4.049    0.000 options.py:115(merge_options)
     [java]       830    0.008    0.000    0.028    0.000 options.py:221(_to_proto)
     [java]     12450    0.019    0.000    0.019    0.000 options.py:245(_set_mutable)
     [java]      1660    0.003    0.000    0.003    0.000 options.py:271(<lambda>)
     [java]       830    0.010    0.000    0.037    0.000 options.py:280(_to_proto)
     [java]    127820    0.257    0.000    0.257    0.000 options.py:33(__init__)
     [java]       830    0.018    0.000    0.068    0.000 options.py:373(_to_proto)
     [java]     50630    0.212    0.000    0.578    0.000 options.py:38(__eq__)
     [java]     12450    0.018    0.000    0.018    0.000 options.py:419(_set_mutable)
     [java]       830    0.005    0.000    0.015    0.000 options.py:455(_to_proto)
     [java]      1660    0.010    0.000    0.042    0.000 options.py:52(__setattr__)
     [java] 790990/258960    1.623    0.000    3.558    0.000 options.py:565(__getattribute__)
     [java]       830    0.004    0.000    0.029    0.000 options.py:577(__setattr__)
     [java]       830    0.031    0.000    0.304    0.000 options.py:591(_to_proto)
     [java]     12450    0.153    0.000    0.971    0.000 options.py:621(_set_mutable)
     [java]      9960    0.039    0.000    4.088    0.000 options.py:630(merge)
     [java]     24900    0.036    0.000    0.036    0.000 options.py:65(_set_mutable)
     [java]     43990    0.046    0.000    0.046    0.000 options.py:84(<lambda>)
     [java]    277220    1.712    0.000    3.125    0.000 options.py:99(get_fn)
     [java]         4    0.000    0.000    0.000    0.000 origin_info.py:158(__init__)
     [java]         2    0.000    0.000    0.000    0.000 origin_info.py:165(__init__)
     [java]        87    0.000    0.000    0.000    0.000 origin_info.py:187(_absolute_lineno)
     [java]        87    0.000    0.000    0.000    0.000 origin_info.py:190(_absolute_col_offset)
     [java]       132    0.001    0.000    0.004    0.000 origin_info.py:195(_attach_origin_info)
     [java]     132/2    0.001    0.000    0.008    0.004 origin_info.py:216(visit)
     [java]         2    0.000    0.000    0.014    0.007 origin_info.py:229(resolve)
     [java]         1    0.000    0.000    0.004    0.004 origin_info.py:274(resolve_entity)
     [java]        16    0.000    0.000    0.000    0.000 origin_info.py:53(line_loc)
     [java]         1    0.001    0.001    0.030    0.030 origin_info.py:85(create_source_map)
     [java]         1    0.000    0.000    0.000    0.000 os.py:1073(__subclasshook__)
     [java]      5826    0.044    0.000    0.092    0.000 os.py:674(__getitem__)
     [java]      5826    0.026    0.000    0.044    0.000 os.py:754(encode)
     [java]      4996    0.017    0.000    0.111    0.000 os.py:771(getenv)
     [java]         1    0.000    0.000    0.018    0.018 parser.py:131(parse_entity)
     [java]         1    0.000    0.000    0.000    0.000 parser.py:160(<genexpr>)
     [java]        18    0.000    0.000    0.022    0.001 parser.py:322(parse)
     [java]         5    0.000    0.000    0.001    0.000 parser.py:346(parse_expression)
     [java]         1    0.000    0.000    0.013    0.013 parser.py:365(unparse)
     [java]         1    0.000    0.000    0.000    0.000 parser.py:58(_unfold_continuations)
     [java]         1    0.000    0.000    0.001    0.001 parser.py:63(dedent_block)
     [java]       320    0.002    0.000    0.007    0.000 policy.py:184(__init__)
     [java]       320    0.002    0.000    0.004    0.000 policy.py:195(_parse_name)
     [java]      1696    0.002    0.000    0.002    0.000 policy.py:243(variable_dtype)
     [java]      1312    0.002    0.000    0.002    0.000 policy.py:259(compute_dtype)
     [java]       322    0.000    0.000    0.000    0.000 policy.py:287(name)
     [java]         8    0.000    0.000    0.000    0.000 policy.py:316(global_policy)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:140(basename)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:334(normpath)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:372(abspath)
     [java]         3    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:60(isabs)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:71(join)
     [java]        93    0.000    0.000    0.000    0.000 qual_names.py:100(has_subscript)
     [java]        93    0.000    0.000    0.000    0.000 qual_names.py:103(has_attr)
     [java]   454/441    0.001    0.000    0.002    0.000 qual_names.py:157(__hash__)
     [java]        44    0.000    0.000    0.001    0.000 qual_names.py:160(__eq__)
     [java]       5/3    0.000    0.000    0.000    0.000 qual_names.py:171(__str__)
     [java]       134    0.001    0.000    0.013    0.000 qual_names.py:224(visit_Name)
     [java]        34    0.001    0.000    0.008    0.000 qual_names.py:229(visit_Attribute)
     [java]        22    0.000    0.000    0.033    0.002 qual_names.py:259(resolve)
     [java]       175    0.001    0.000    0.001    0.000 qual_names.py:56(__init__)
     [java]         1    0.000    0.000    0.000    0.000 random.py:117(__init__)
     [java]         1    0.000    0.000    0.000    0.000 random.py:126(seed)
     [java]      3474    0.018    0.000    0.030    0.000 random.py:238(_randbelow_with_getrandbits)
     [java]         8    0.000    0.000    0.000    0.000 random.py:344(choice)
     [java]       913    0.013    0.000    0.045    0.000 random.py:349(shuffle)
     [java]         2    0.000    0.000    0.004    0.002 random_ops.py:212(random_uniform)
     [java]         2    0.000    0.000    0.000    0.000 random_seed.py:38(get_seed)
     [java]         8    0.000    0.000    0.000    0.000 re.py:188(match)
     [java]         8    0.000    0.000    0.001    0.000 re.py:203(sub)
     [java]       217    0.001    0.000    0.004    0.000 re.py:250(compile)
     [java]       233    0.001    0.000    0.005    0.000 re.py:289(_compile)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:111(__init__)
     [java]        26    0.000    0.000    0.000    0.000 reaching_definitions.py:116(init_state)
     [java]        13    0.000    0.000    0.004    0.000 reaching_definitions.py:119(visit_node)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:177(__init__)
     [java]         2    0.000    0.000    0.009    0.005 reaching_definitions.py:185(visit_FunctionDef)
     [java]        22    0.000    0.000    0.001    0.000 reaching_definitions.py:200(visit_Name)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:222(_aggregate_predecessors_defined_in)
     [java]         1    0.000    0.000    0.002    0.002 reaching_definitions.py:253(visit_Try)
     [java]         1    0.000    0.000    0.000    0.000 reaching_definitions.py:257(visit_ExceptHandler)
     [java]      75/2    0.000    0.000    0.009    0.005 reaching_definitions.py:263(visit)
     [java]         2    0.000    0.000    0.009    0.005 reaching_definitions.py:275(resolve)
     [java]        10    0.000    0.000    0.000    0.000 reaching_definitions.py:47(__init__)
     [java]       115    0.000    0.000    0.001    0.000 reaching_definitions.py:65(__init__)
     [java]        63    0.000    0.000    0.000    0.000 reaching_definitions.py:68(<dictcomp>)
     [java]         8    0.000    0.000    0.000    0.000 reaching_definitions.py:72(<dictcomp>)
     [java]        13    0.000    0.000    0.000    0.000 reaching_definitions.py:78(__eq__)
     [java]        13    0.000    0.000    0.000    0.000 reaching_definitions.py:84(__ne__)
     [java]        37    0.000    0.000    0.001    0.000 reaching_definitions.py:87(__or__)
     [java]        26    0.000    0.000    0.001    0.000 reaching_definitions.py:97(__sub__)
     [java]         1    0.000    0.000    0.000    0.000 reaching_fndefs.py:118(__init__)
     [java]         1    0.000    0.000    0.006    0.006 reaching_fndefs.py:124(_proces_function)
     [java]         1    0.000    0.000    0.006    0.006 reaching_fndefs.py:143(visit_FunctionDef)
     [java]      83/1    0.000    0.000    0.007    0.007 reaching_fndefs.py:149(visit)
     [java]         1    0.000    0.000    0.007    0.007 reaching_fndefs.py:166(resolve)
     [java]        30    0.000    0.000    0.000    0.000 reaching_fndefs.py:45(__init__)
     [java]        10    0.000    0.000    0.000    0.000 reaching_fndefs.py:54(__ne__)
     [java]         9    0.000    0.000    0.000    0.000 reaching_fndefs.py:57(__or__)
     [java]         1    0.000    0.000    0.000    0.000 reaching_fndefs.py:75(__init__)
     [java]        20    0.000    0.000    0.000    0.000 reaching_fndefs.py:81(init_state)
     [java]        10    0.000    0.000    0.000    0.000 reaching_fndefs.py:84(visit_node)
     [java]     21204    0.063    0.000    0.093    0.000 registry.py:73(list)
     [java]     63612    0.197    0.000    0.780    0.000 registry.py:81(lookup)
     [java]        92    0.000    0.000    0.006    0.000 regularizers.py:165(from_config)
     [java]        92    0.001    0.000    0.001    0.000 regularizers.py:29(_check_penalty_number)
     [java]        92    0.001    0.000    0.005    0.000 regularizers.py:302(__init__)
     [java]        92    0.000    0.000    0.028    0.000 regularizers.py:408(deserialize)
     [java]      1468    0.003    0.000    0.031    0.000 regularizers.py:421(get)
     [java]       994    0.040    0.000    0.174    0.000 resource_variable_ops.py:142(_variable_handle_from_shape_and_dtype)
     [java]       872    0.005    0.000    2.655    0.003 resource_variable_ops.py:1429(_dense_var_to_tensor)
     [java]       994    0.006    0.000    1.278    0.001 resource_variable_ops.py:1536(__init__)
     [java]       994    0.098    0.000    1.272    0.001 resource_variable_ops.py:1645(_init_from_args)
     [java]       994    0.006    0.000    0.189    0.000 resource_variable_ops.py:193(eager_safe_variable_handle)
     [java]       872    0.003    0.000    2.658    0.003 resource_variable_ops.py:2076(_dense_var_to_tensor)
     [java]      1798    0.016    0.000    0.245    0.000 resource_variable_ops.py:2092(__init__)
     [java]      3596    0.008    0.000    0.026    0.000 resource_variable_ops.py:241(_handle_graph)
     [java]      5554    0.022    0.000    0.049    0.000 resource_variable_ops.py:313(_maybe_set_handle_data)
     [java]      7352    0.058    0.000    0.382    0.000 resource_variable_ops.py:324(variable_accessed)
     [java]      2792    0.060    0.000    0.326    0.000 resource_variable_ops.py:336(__init__)
     [java]         4    0.000    0.000    0.000    0.000 resource_variable_ops.py:468(_assign_dependencies)
     [java]      6146    0.008    0.000    0.008    0.000 resource_variable_ops.py:525(dtype)
     [java]      1056    0.004    0.000    0.005    0.000 resource_variable_ops.py:530(device)
     [java]      1240    0.001    0.000    0.001    0.000 resource_variable_ops.py:540(name)
     [java]       786    0.001    0.000    0.001    0.000 resource_variable_ops.py:545(shape)
     [java]     18430    0.027    0.000    0.027    0.000 resource_variable_ops.py:572(handle)
     [java]       872    0.008    0.000    2.641    0.003 resource_variable_ops.py:577(value)
     [java]      7800    0.012    0.000    0.012    0.000 resource_variable_ops.py:616(trainable)
     [java]      4682    0.055    0.000    1.556    0.000 resource_variable_ops.py:635(numpy)
     [java]      5554    0.051    0.000    3.178    0.001 resource_variable_ops.py:677(_read_variable_op)
     [java]      5554    0.052    0.000    2.758    0.000 resource_variable_ops.py:680(read_and_set_handle)
     [java]      4682    0.060    0.000    1.330    0.000 resource_variable_ops.py:702(read_value)
     [java]       994    0.002    0.000    0.002    0.000 resource_variable_ops.py:80(_set_handle_shapes_and_types)
     [java]         2    0.000    0.000    0.009    0.004 resource_variable_ops.py:842(assign_add)
     [java]      1798    0.021    0.000    0.382    0.000 resource_variable_ops.py:867(_lazy_read)
     [java]      1796    0.057    0.000    1.061    0.001 resource_variable_ops.py:877(assign)
     [java]         1    0.000    0.000    0.001    0.001 return_statements.py:109(visit_With)
     [java]         1    0.000    0.000    0.002    0.002 return_statements.py:149(visit_FunctionDef)
     [java]         4    0.000    0.000    0.000    0.000 return_statements.py:157(__init__)
     [java]         2    0.000    0.000    0.000    0.000 return_statements.py:170(__init__)
     [java]         1    0.000    0.000    0.000    0.000 return_statements.py:219(__init__)
     [java]         1    0.000    0.000    0.007    0.007 return_statements.py:223(visit_Return)
     [java]         3    0.000    0.000    0.000    0.000 return_statements.py:250(_postprocess_statement)
     [java]       2/1    0.000    0.000    0.011    0.011 return_statements.py:273(_visit_statement_block)
     [java]         1    0.000    0.000    0.010    0.010 return_statements.py:315(visit_With)
     [java]         1    0.000    0.000    0.021    0.021 return_statements.py:337(visit_FunctionDef)
     [java]         3    0.000    0.000    0.000    0.000 return_statements.py:35(__init__)
     [java]         1    0.000    0.000    0.033    0.033 return_statements.py:388(transform)
     [java]         1    0.000    0.000    0.000    0.000 return_statements.py:66(visit_Return)
     [java]         3    0.000    0.000    0.000    0.000 return_statements.py:70(_postprocess_statement)
     [java]       2/1    0.000    0.000    0.002    0.002 return_statements.py:89(_visit_statement_block)
     [java]         2    0.007    0.003   10.928    5.464 save.py:157(load_model)
     [java]      3320    0.006    0.000    0.006    0.000 save_context.py:42(in_save_context)
     [java]      3320    0.013    0.000    0.019    0.000 save_context.py:59(in_save_context)
     [java]         2    0.000    0.000    0.002    0.001 saving_utils.py:208(compile_args_from_training_config)
     [java]       6/2    0.000    0.000    0.000    0.000 saving_utils.py:249(_deserialize_nested_config)
     [java]         6    0.000    0.000    0.000    0.000 saving_utils.py:252(_is_single_object)
     [java]         2    0.000    0.000    0.000    0.000 saving_utils.py:264(<dictcomp>)
     [java]         2    0.000    0.000    0.031    0.016 saving_utils.py:319(try_build_compiled_arguments)
     [java]      1932    0.019    0.000    0.022    0.000 selections.py:112(__init__)
     [java]       966    0.001    0.000    0.001    0.000 selections.py:123(id)
     [java]      4830    0.006    0.000    0.006    0.000 selections.py:128(shape)
     [java]       966    0.001    0.000    0.001    0.000 selections.py:217(mshape)
     [java]       966    0.009    0.000    0.014    0.000 selections.py:222(array_shape)
     [java]      2722    0.004    0.000    0.004    0.000 selections.py:225(<genexpr>)
     [java]      1932    0.016    0.000    0.044    0.000 selections.py:227(__init__)
     [java]       964    0.015    0.000    0.026    0.000 selections.py:236(expand_shape)
     [java]       964    0.001    0.000    0.001    0.000 selections.py:266(<listcomp>)
     [java]      1932    0.014    0.000    0.047    0.000 selections.py:275(broadcast)
     [java]      2720    0.004    0.000    0.004    0.000 selections.py:293(<genexpr>)
     [java]     314/2    0.002    0.000    7.586    3.793 serialization.py:166(deserialize)
     [java]       314    0.002    0.000    0.020    0.000 serialization.py:71(populate_deserializable_objects)
     [java]       689    0.002    0.000    0.012    0.000 serialization.py:91(<lambda>)
     [java]       128    0.000    0.000    0.002    0.000 serialization.py:98(<lambda>)
     [java]       830    0.001    0.000    0.001    0.000 shape_base.py:508(_expand_dims_dispatcher)
     [java]       830    0.013    0.000    0.040    0.000 shape_base.py:512(expand_dims)
     [java]       830    0.005    0.000    0.008    0.000 shape_base.py:600(<listcomp>)
     [java] 9960/8300    0.022    0.000    0.677    0.000 signature_builder.py:110(<genexpr>)
     [java]       830    0.001    0.000    0.001    0.000 signature_builder.py:114(<dictcomp>)
     [java]      3320    0.011    0.000    1.305    0.000 signature_builder.py:142(make_function_signature)
     [java]      3320    0.007    0.000    0.007    0.000 signature_builder.py:38(__init__)
     [java]      2492    0.008    0.000    0.012    0.000 signature_builder.py:42(add_listener)
     [java]      3320    0.013    0.000    0.020    0.000 signature_builder.py:61(__init__)
     [java]       830    0.006    0.000    0.010    0.000 signature_builder.py:68(make_reference_type)
     [java]      3320    0.005    0.000    0.005    0.000 signature_builder.py:77(include_tensor_ranks_only)
     [java]      3320    0.005    0.000    0.005    0.000 signature_builder.py:81(deletion_observer)
     [java] 9130/3320    0.088    0.000    1.295    0.000 signature_builder.py:87(create_trace_type)
     [java]     29466    0.135    0.000    0.220    0.000 six.py:604(iteritems)
     [java]       172    0.001    0.000    2.686    0.016 smart_cond.py:24(smart_cond)
     [java]       172    0.001    0.000    0.001    0.000 smart_cond.py:61(smart_constant_value)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
     [java]         3    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
     [java]         4    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
     [java]         4    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
     [java]         2    0.000    0.000    0.001    0.000 sre_compile.py:598(_code)
     [java]       8/2    0.000    0.000    0.001    0.000 sre_compile.py:71(_compile)
     [java]         2    0.000    0.000    0.002    0.001 sre_compile.py:759(compile)
     [java]        10    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
     [java]        20    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
     [java]        63    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
     [java]         4    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
     [java]        29    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
     [java]       7/2    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
     [java]         2    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
     [java]        55    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
     [java]        22    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
     [java]        43    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
     [java]        14    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
     [java]         2    0.000    0.000    0.000    0.000 sre_parse.py:295(_class_escape)
     [java]         1    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
     [java]         2    0.000    0.000    0.000    0.000 sre_parse.py:432(_uniq)
     [java]       5/2    0.000    0.000    0.001    0.001 sre_parse.py:435(_parse_sub)
     [java]       6/2    0.000    0.000    0.001    0.001 sre_parse.py:493(_parse)
     [java]         2    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
     [java]         4    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
     [java]         1    0.000    0.000    0.000    0.000 sre_parse.py:861(_parse_flags)
     [java]         2    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
     [java]         2    0.000    0.000    0.002    0.001 sre_parse.py:937(parse)
     [java]      2492    0.041    0.000    0.458    0.000 structure.py:188(_from_tensor_list_helper)
     [java]      2492    0.014    0.000    0.022    0.000 structure.py:209(<listcomp>)
     [java]      2492    0.009    0.000    0.467    0.000 structure.py:223(from_compatible_tensor_list)
     [java]      3322    0.011    0.000    0.274    0.000 structure.py:242(<lambda>)
     [java]     23248    0.106    0.000    0.371    0.000 structure.py:270(get_flat_tensor_specs)
     [java]     25738    0.077    0.000    0.111    0.000 structure.py:282(<lambda>)
     [java]     11624    0.051    0.000    0.301    0.000 structure.py:286(get_flat_tensor_shapes)
     [java]     11624    0.034    0.000    0.053    0.000 structure.py:296(<listcomp>)
     [java]      9134    0.036    0.000    0.199    0.000 structure.py:299(get_flat_tensor_types)
     [java]      9134    0.026    0.000    0.039    0.000 structure.py:309(<listcomp>)
     [java]      4980    0.046    0.000    1.050    0.000 structure.py:312(_to_tensor_list_helper)
     [java]      4980    0.016    0.000    0.926    0.000 structure.py:334(reduce_fn)
     [java]       830    0.003    0.000    0.178    0.000 structure.py:342(to_batched_tensor_list)
     [java]       830    0.003    0.000    0.153    0.000 structure.py:364(<lambda>)
     [java]      4150    0.015    0.000    0.890    0.000 structure.py:368(to_tensor_list)
     [java]      4150    0.014    0.000    0.757    0.000 structure.py:389(<lambda>)
     [java]      7470    0.026    0.000    0.450    0.000 structure.py:420(type_spec_from_value)
     [java]      2490    0.097    0.000    0.719    0.000 structure.py:66(normalize_element)
     [java]      2490    0.042    0.000   28.441    0.011 structured_function.py:171(wrapper_helper)
     [java]      2490    0.022    0.000    0.895    0.000 structured_function.py:240(trace_tf_function)
     [java]      2490    0.022    0.000   28.977    0.012 structured_function.py:242(wrapped_fn)
     [java]      2490    0.009    0.000    0.031    0.000 structured_function.py:250(<listcomp>)
     [java]      9960    0.014    0.000    0.014    0.000 structured_function.py:291(output_structure)
     [java]      4980    0.007    0.000    0.007    0.000 structured_function.py:313(function)
     [java]      2490    0.007    0.000    0.012    0.000 structured_function.py:50(_should_pack)
     [java]      2490    0.004    0.000    0.004    0.000 structured_function.py:71(_should_unpack)
     [java]      2490    0.100    0.000   56.695    0.023 structured_function.py:86(__init__)
     [java]      5776    0.066    0.000    0.230    0.000 tape.py:104(variable_accessed)
     [java]     14550    0.048    0.000    0.079    0.000 tape.py:150(stop_recording)
     [java]      1746    0.006    0.000    0.011    0.000 tape.py:177(record_operation)
     [java]       830    0.003    0.000    0.005    0.000 tape.py:220(could_possibly_record)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:224(_infer_return_type)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:245(_sanitize_params)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:273(rng)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:284(__next__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:287(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:364(_get_candidate_names)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:378(_mkstemp_inner)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:419(gettempdir)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:554(__init__)
     [java]         2    0.000    0.000    0.000    0.000 tempfile.py:569(close)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:579(__del__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:597(__init__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:603(__getattr__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:611(func_wrapper)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:624(__enter__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:630(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:635(close)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:652(NamedTemporaryFile)
     [java]        15    0.000    0.000    0.000    0.000 templates.py:107(__init__)
     [java]        34    0.000    0.000    0.026    0.001 templates.py:125(_prepare_replacement)
     [java]        10    0.000    0.000    0.022    0.002 templates.py:142(visit_Expr)
     [java]         4    0.000    0.000    0.002    0.000 templates.py:150(visit_keyword)
     [java]       2/1    0.000    0.000    0.013    0.013 templates.py:168(visit_FunctionDef)
     [java]         8    0.000    0.000    0.001    0.000 templates.py:181(visit_Attribute)
     [java]        41    0.000    0.000    0.029    0.001 templates.py:193(visit_Name)
     [java]     37/32    0.000    0.000    0.001    0.000 templates.py:214(_convert_to_ast)
     [java]         5    0.000    0.000    0.000    0.000 templates.py:224(<listcomp>)
     [java]        11    0.000    0.000    0.064    0.006 templates.py:230(replace)
     [java]        11    0.000    0.000    0.017    0.002 templates.py:271(<listcomp>)
     [java]         4    0.000    0.000    0.008    0.002 templates.py:275(replace_as_expression)
     [java]        33    0.000    0.000    0.000    0.000 templates.py:39(__init__)
     [java]     46/21    0.000    0.000    0.002    0.000 templates.py:42(visit)
     [java]        23    0.000    0.000    0.000    0.000 templates.py:50(_apply_override)
     [java]         2    0.000    0.000    0.000    0.000 templates.py:60(visit_Tuple)
     [java]        21    0.000    0.000    0.002    0.000 templates.py:68(visit_Name)
     [java]     15972    0.053    0.000    0.080    0.000 tensor_conversion_registry.py:112(get)
     [java]        17    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:133(<genexpr>)
     [java]     10948    0.037    0.000    3.752    0.000 tensor_conversion_registry.py:46(_default_conversion_function)
     [java]       848    0.002    0.000    0.003    0.000 tensor_shape.py:101(dimension_value)
     [java]        18    0.000    0.000    0.000    0.000 tensor_shape.py:1028(assert_same_rank)
     [java]         8    0.000    0.000    0.002    0.000 tensor_shape.py:1056(with_rank)
     [java]       832    0.010    0.000    0.077    0.000 tensor_shape.py:1174(most_specific_common_supertype)
     [java]      1664    0.003    0.000    0.004    0.000 tensor_shape.py:1208(<genexpr>)
     [java]      1664    0.006    0.000    0.024    0.000 tensor_shape.py:1218(<genexpr>)
     [java]       832    0.005    0.000    0.010    0.000 tensor_shape.py:1223(<listcomp>)
     [java]      1676    0.003    0.000    0.003    0.000 tensor_shape.py:1224(<genexpr>)
     [java]      6404    0.096    0.000    0.834    0.000 tensor_shape.py:1231(is_compatible_with)
     [java]      3618    0.013    0.000    0.039    0.000 tensor_shape.py:1323(is_fully_defined)
     [java]      8818    0.010    0.000    0.010    0.000 tensor_shape.py:1326(<genexpr>)
     [java]      4526    0.009    0.000    0.009    0.000 tensor_shape.py:1337(as_list)
     [java]     15512    0.176    0.000    0.245    0.000 tensor_shape.py:1350(as_proto)
     [java]     15512    0.068    0.000    0.068    0.000 tensor_shape.py:1355(<listcomp>)
     [java]      1664    0.005    0.000    0.011    0.000 tensor_shape.py:1360(__eq__)
     [java]     19094    0.044    0.000    0.066    0.000 tensor_shape.py:1415(__hash__)
     [java]     25884    0.089    0.000    0.406    0.000 tensor_shape.py:1425(as_shape)
     [java]        16    0.000    0.000    0.001    0.000 tensor_shape.py:1433(unknown_shape)
     [java]    101828    0.242    0.000    0.344    0.000 tensor_shape.py:199(__init__)
     [java]     72056    0.082    0.000    0.082    0.000 tensor_shape.py:265(value)
     [java]     12448    0.058    0.000    0.122    0.000 tensor_shape.py:271(is_compatible_with)
     [java]        32    0.000    0.000    0.000    0.000 tensor_shape.py:287(assert_is_compatible_with)
     [java]        32    0.000    0.000    0.001    0.000 tensor_shape.py:301(merge_with)
     [java]    113484    0.388    0.000    0.854    0.000 tensor_shape.py:723(as_dimension)
     [java]     42900    0.294    0.000    0.939    0.000 tensor_shape.py:765(__init__)
     [java]     67166    0.187    0.000    0.555    0.000 tensor_shape.py:775(<genexpr>)
     [java]     27594    0.032    0.000    0.032    0.000 tensor_shape.py:810(_v2_behavior)
     [java]     20630    0.050    0.000    0.074    0.000 tensor_shape.py:839(rank)
     [java]     33732    0.096    0.000    0.709    0.000 tensor_shape.py:846(dims)
     [java]     33732    0.120    0.000    0.613    0.000 tensor_shape.py:858(<listcomp>)
     [java]      3704    0.010    0.000    0.024    0.000 tensor_shape.py:860(ndims)
     [java]     20914    0.062    0.000    0.090    0.000 tensor_shape.py:865(__len__)
     [java]       458    0.001    0.000    0.001    0.000 tensor_shape.py:871(__bool__)
     [java]         8    0.000    0.000    0.000    0.000 tensor_shape.py:878(__iter__)
     [java]        32    0.000    0.000    0.000    0.000 tensor_shape.py:884(<genexpr>)
     [java]     28424    0.112    0.000    0.197    0.000 tensor_shape.py:888(__getitem__)
     [java]        18    0.000    0.000    0.004    0.000 tensor_shape.py:945(merge_with)
     [java]        18    0.000    0.000    0.001    0.000 tensor_shape.py:989(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 tensor_spec.py:162(value_type)
     [java]      4150    0.030    0.000    0.823    0.000 tensor_spec.py:167(_to_components)
     [java]      3322    0.019    0.000    0.263    0.000 tensor_spec.py:181(_from_compatible_tensor_list)
     [java]       830    0.006    0.000    0.050    0.000 tensor_spec.py:202(_unbatch)
     [java]     29060    0.039    0.000    0.039    0.000 tensor_spec.py:207(_flat_tensor_specs)
     [java]      4150    0.013    0.000    0.836    0.000 tensor_spec.py:211(_to_tensor_list)
     [java]       830    0.002    0.000    0.150    0.000 tensor_spec.py:214(_to_batched_tensor_list)
     [java]         4    0.000    0.000    0.000    0.000 tensor_spec.py:220(_without_tensor_names)
     [java]     13116    0.073    0.000    0.270    0.000 tensor_spec.py:35(__init__)
     [java]     17456    0.025    0.000    0.025    0.000 tensor_spec.py:51(shape)
     [java]     37624    0.050    0.000    0.050    0.000 tensor_spec.py:56(dtype)
     [java]      3326    0.005    0.000    0.005    0.000 tensor_spec.py:61(name)
     [java]     19094    0.078    0.000    0.247    0.000 tensor_spec.py:75(__hash__)
     [java]      1656    0.010    0.000    0.027    0.000 tensor_spec.py:78(__eq__)
     [java]      1664    0.003    0.000    0.003    0.000 tensor_spec.py:88(_serialize)
     [java]         8    0.000    0.000    0.000    0.000 tensor_util.py:1025(<listcomp>)
     [java]      1467    0.008    0.000    0.015    0.000 tensor_util.py:1030(is_tf_type)
     [java]        10    0.000    0.000    0.001    0.000 tensor_util.py:1067(shape_tensor)
     [java]      1816    0.012    0.000    0.107    0.000 tensor_util.py:1086(maybe_set_static_shape)
     [java]      6642    0.042    0.000    0.091    0.000 tensor_util.py:183(GetFromNumpyDTypeDict)
     [java]      6642    0.028    0.000    0.119    0.000 tensor_util.py:191(GetNumpyAppendFn)
     [java] 11638/7480    0.043    0.000    0.062    0.000 tensor_util.py:216(_GetDenseDimensions)
     [java]      4152    0.020    0.000    0.111    0.000 tensor_util.py:260(inner)
     [java]      3328    0.017    0.000    0.059    0.000 tensor_util.py:277(_check_not_tensor)
     [java]      3328    0.011    0.000    0.016    0.000 tensor_util.py:278(<listcomp>)
     [java]      7480    0.028    0.000    0.199    0.000 tensor_util.py:306(_AssertCompatible)
     [java]      7480    0.080    0.000    0.122    0.000 tensor_util.py:336(_is_array_like)
     [java]      7480    0.447    0.000    1.852    0.000 tensor_util.py:357(make_tensor_proto)
     [java]         8    0.000    0.000    0.001    0.000 tensor_util.py:565(MakeNdarray)
     [java]         8    0.000    0.000    0.000    0.000 tensor_util.py:592(<listcomp>)
     [java]         8    0.000    0.000    0.002    0.000 tensor_util.py:678(_ConstantValue)
     [java]       838    0.004    0.000    0.016    0.000 tensor_util.py:808(constant_value)
     [java]         8    0.000    0.000    0.008    0.001 tensor_util.py:886(constant_value_as_shape)
     [java]        11    0.000    0.000    0.001    0.000 textwrap.py:414(dedent)
     [java]      5149    0.017    0.000    0.031    0.000 tf2.py:35(enabled)
     [java]     14784    0.081    0.000    1.094    0.000 tf_contextlib.py:21(contextmanager)
     [java]     24208    0.056    0.000    0.089    0.000 tf_decorator.py:107(_has_tf_decorator_attr)
     [java]         2    0.000    0.000    0.000    0.000 tf_decorator.py:121(rewrap)
     [java]     24097    0.095    0.000    0.215    0.000 tf_decorator.py:193(unwrap)
     [java]     20412    0.128    0.000    0.202    0.000 tf_decorator.py:229(__init__)
     [java]       224    0.000    0.000    0.000    0.000 tf_decorator.py:255(decorated_target)
     [java]         2    0.000    0.000    0.000    0.000 tf_decorator.py:259(decorated_target)
     [java]         4    0.000    0.000    0.000    0.000 tf_decorator.py:271(decorator_argspec)
     [java]     20412    0.244    0.000    0.619    0.000 tf_decorator.py:61(make_decorator)
     [java]       320    0.003    0.000    0.011    0.000 tf_export.py:100(get_canonical_name_for_symbol)
     [java]       318    0.002    0.000    0.003    0.000 tf_export.py:138(get_canonical_name)
     [java]       636    0.001    0.000    0.001    0.000 tf_export.py:151(<genexpr>)
     [java]      1568    0.009    0.000    0.253    0.000 tf_inspect.py:233(getfullargspec)
     [java]      3326    0.020    0.000    0.584    0.000 tf_inspect.py:247(getfullargspec)
     [java]       830    0.017    0.000    0.305    0.000 tf_inspect.py:269(getcallargs)
     [java]       830    0.002    0.000    0.002    0.000 tf_inspect.py:292(<listcomp>)
     [java]      2494    0.008    0.000    0.037    0.000 tf_inspect.py:344(getmodule)
     [java]         1    0.000    0.000    0.000    0.000 tf_inspect.py:359(getsourcefile)
     [java]      2513    0.011    0.000    0.044    0.000 tf_inspect.py:360(isclass)
     [java]         1    0.000    0.000    0.001    0.001 tf_inspect.py:364(getsourcelines)
     [java]       580    0.003    0.000    0.010    0.000 tf_inspect.py:365(isfunction)
     [java]      2492    0.013    0.000    0.044    0.000 tf_inspect.py:379(isfunction)
     [java]       830    0.004    0.000    0.015    0.000 tf_inspect.py:399(ismethod)
     [java]      2496    0.019    0.000    0.054    0.000 tf_inspect.py:404(isanytargetmethod)
     [java]      4984    0.028    0.000    0.069    0.000 tf_logging.py:206(vlog)
     [java]      4984    0.007    0.000    0.007    0.000 tf_logging.py:89(get_logger)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:110(get_filtered_filenames)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:117(__init__)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:139(get_filtered_filenames)
     [java]     23656    0.137    0.000    0.431    0.000 tf_stack.py:169(extract_stack_for_node)
     [java]         1    0.000    0.000    0.000    0.000 tf_stack.py:35(<lambda>)
     [java]         1    0.000    0.000    0.000    0.000 tf_stack.py:36(<lambda>)
     [java]         4    0.000    0.000    0.000    0.000 tf_stack.py:45(__enter__)
     [java]         4    0.000    0.000    0.000    0.000 tf_stack.py:59(__exit__)
     [java]         3    0.000    0.000    0.000    0.000 tf_stack.py:71(__init__)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:74(update)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:87(get_effective_source_map)
     [java]         3    0.000    0.000    0.000    0.000 tf_stack.py:95(__init__)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:98(update)
     [java]  1452/706    0.014    0.000    0.080    0.000 tf_utils.py:132(map_structure_with_atomic)
     [java]       350    0.000    0.000    0.000    0.000 tf_utils.py:157(<listcomp>)
     [java]  1016/706    0.003    0.000    0.037    0.000 tf_utils.py:162(<listcomp>)
     [java]       310    0.001    0.000    0.024    0.000 tf_utils.py:168(get_shapes)
     [java]       350    0.001    0.000    0.007    0.000 tf_utils.py:171(<lambda>)
     [java]        40    0.000    0.000    0.006    0.000 tf_utils.py:177(convert_shapes)
     [java]       160    0.000    0.000    0.001    0.000 tf_utils.py:204(_is_shape_component)
     [java]       120    0.001    0.000    0.002    0.000 tf_utils.py:207(_is_atomic_shape)
     [java]        80    0.000    0.000    0.000    0.000 tf_utils.py:214(<genexpr>)
     [java]        80    0.000    0.000    0.001    0.000 tf_utils.py:218(_convert_shape)
     [java]        86    0.002    0.000    0.005    0.000 tf_utils.py:228(validate_axis)
     [java]       356    0.001    0.000    0.001    0.000 tf_utils.py:269(__init__)
     [java]       356    0.001    0.000    0.001    0.000 tf_utils.py:272(as_list)
     [java]       666    0.002    0.000    0.076    0.000 tf_utils.py:276(convert_inner_node_data)
     [java]      1688    0.006    0.000    0.010    0.000 tf_utils.py:288(_is_serialized_node_data)
     [java]      1332    0.006    0.000    0.020    0.000 tf_utils.py:296(_is_atomic_nested)
     [java]       356    0.002    0.000    0.006    0.000 tf_utils.py:304(_convert_object_or_list)
     [java]        40    0.000    0.000    0.016    0.000 tf_utils.py:333(wrapper)
     [java]      1182    0.004    0.000    0.013    0.000 tf_utils.py:354(is_extension_type)
     [java]         2    0.000    0.000    0.001    0.000 tf_utils.py:475(assert_no_legacy_layers)
     [java]         2    0.000    0.000    0.001    0.000 tf_utils.py:489(<listcomp>)
     [java]       436    0.002    0.000    0.085    0.000 tf_utils.py:501(maybe_init_scope)
     [java]       354    0.005    0.000    0.033    0.000 tf_utils.py:541(get_tensor_spec)
     [java]       830    0.008    0.000    0.236    0.000 tf_utils.py:573(sync_to_numpy_or_python_type)
     [java]      1660    0.023    0.000    0.116    0.000 tf_utils.py:598(_to_single_numpy_or_python_type)
     [java]      2806    0.041    0.000    0.041    0.000 threading.py:228(__init__)
     [java]     23656    0.068    0.000    0.111    0.000 threading.py:271(_is_owned)
     [java]     23656    0.105    0.000    0.215    0.000 threading.py:351(notify)
     [java]     23656    0.107    0.000    0.350    0.000 threading.py:374(notify_all)
     [java]      5302    0.013    0.000    0.013    0.000 threading.py:82(RLock)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:164(__init__)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:183(untokenize)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:220(compat)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:257(untokenize)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:295(detect_encoding)
     [java]         2    0.000    0.000    0.000    0.000 tokenize.py:319(read_or_stop)
     [java]         2    0.000    0.000    0.000    0.000 tokenize.py:325(find_cookie)
     [java]         1    0.000    0.000    0.000    0.000 tokenize.py:388(open)
     [java]       247    0.003    0.000    0.010    0.000 tokenize.py:429(_tokenize)
     [java]         5    0.000    0.000    0.000    0.000 tokenize.py:612(generate_tokens)
     [java]       215    0.001    0.000    0.005    0.000 tokenize.py:98(_compile)
     [java]     21204    0.131    0.000    0.774    0.000 tpu.py:245(tpu_replicated_input_resolver)
     [java]     42408    0.192    0.000    0.541    0.000 tpu.py:264(replace_with_unreplicated_resources)
     [java]      3322    0.005    0.000    0.005    0.000 trace.py:121(__exit__)
     [java] 49374/48502    0.200    0.000   12.224    0.000 trace.py:178(wrapped)
     [java]      3322    0.007    0.000    0.007    0.000 trace.py:50(__init__)
     [java]      3322    0.005    0.000    0.005    0.000 trace.py:83(__enter__)
     [java]       830    0.002    0.000    0.002    0.000 trace.py:87(set_metadata)
     [java]         2    0.000    0.000    0.000    0.000 traceable_stack.py:101(pop_obj)
     [java]     35638    0.099    0.000    0.099    0.000 traceable_stack.py:109(peek_objs)
     [java]     35640    0.041    0.000    0.041    0.000 traceable_stack.py:111(<genexpr>)
     [java]     47312    0.069    0.000    0.069    0.000 traceable_stack.py:113(peek_traceable_objs)
     [java]     26804    0.067    0.000    0.101    0.000 traceable_stack.py:117(__len__)
     [java]      5605    0.020    0.000    0.029    0.000 traceable_stack.py:121(copy)
     [java]         4    0.000    0.000    0.000    0.000 traceable_stack.py:26(__init__)
     [java]         2    0.000    0.000    0.000    0.000 traceable_stack.py:31(set_filename_and_line_from_caller)
     [java]         2    0.000    0.000    0.000    0.000 traceable_stack.py:65(copy_metadata)
     [java]     12963    0.023    0.000    0.023    0.000 traceable_stack.py:73(__init__)
     [java]         2    0.000    0.000    0.000    0.000 traceable_stack.py:82(push_obj)
     [java] 47918/22122    0.314    0.000   56.278    0.003 traceback_utils.py:138(error_handler)
     [java]     49380    0.134    0.000    0.300    0.000 traceback_utils.py:32(is_traceback_filtering_enabled)
     [java]  1462/832    0.797    0.001  139.463    0.168 traceback_utils.py:58(error_handler)
     [java]       622    0.003    0.000    0.027    0.000 traceback_utils.py:74(inject_argument_info_in_traceback)
     [java]   622/312    0.003    0.000    5.163    0.017 traceback_utils.py:88(error_handler)
     [java]         2    0.000    0.000    0.001    0.000 training.py:177(__new__)
     [java]         2    0.000    0.000    2.995    1.498 training.py:1770(predict_step)
     [java]       830    0.002    0.000    0.062    0.000 training.py:1793(make_predict_function)
     [java]         2    0.000    0.000    3.015    1.507 training.py:1819(step_function)
     [java]         2    0.000    0.000    3.004    1.502 training.py:1822(run_step)
     [java]         2    0.000    0.000    0.009    0.005 training.py:186(__init__)
     [java]       830    0.117    0.000  127.735    0.154 training.py:1869(predict)
     [java]      1660    0.003    0.000    0.003    0.000 training.py:2038(<lambda>)
     [java]         2    0.000    0.000    0.016    0.008 training.py:2341(trainable_weights)
     [java]         2    0.000    0.000    7.568    3.784 training.py:2708(from_config)
     [java]        10    0.000    0.000    0.000    0.000 training.py:2719(<genexpr>)
     [java]      1156    0.204    0.000    4.031    0.003 training.py:2881(layers)
     [java]         2    0.000    0.000    0.000    0.000 training.py:2927(_set_save_spec)
     [java]         2    0.000    0.000    0.005    0.003 training.py:293(_init_batch_counters)
     [java] 10360/1966    0.091    0.000   16.150    0.008 training.py:303(__setattr__)
     [java]       830    0.009    0.000    0.020    0.000 training.py:3032(_check_call_args)
     [java]         2    0.000    0.000    0.001    0.000 training.py:3051(_validate_compile)
     [java]         4    0.000    0.000    0.000    0.000 training.py:3053(<genexpr>)
     [java]     11756    0.038    0.000    0.083    0.000 training.py:308(<genexpr>)
     [java]       830    0.006    0.000    0.025    0.000 training.py:3261(_in_multi_worker_mode)
     [java]         2    0.000    0.000    0.000    0.000 training.py:3269(reduce_per_replica)
     [java]         4    0.000    0.000    0.000    0.000 training.py:3282(_reduce)
     [java]      1660    0.005    0.000    0.008    0.000 training.py:3309(potentially_ragged_concat)
     [java]       830    0.001    0.000    0.001    0.000 training.py:3347(_get_verbosity)
     [java]       830    0.004    0.000    0.046    0.000 training.py:3363(_is_tpu_multi_host)
     [java]         4    0.000    0.000    0.000    0.000 training.py:3383(_collective_all_reduce_multi_worker)
     [java]         2    0.000    0.000    0.000    0.000 training.py:3421(_minimum_control_deps)
     [java]       830    0.003    0.000    0.016    0.000 training.py:3433(_disallow_inside_tf_function)
     [java]         4    0.000    0.000    0.000    0.000 training.py:3497(_is_per_replica_instance)
     [java]         4    0.000    0.000    0.000    0.000 training.py:3537(is_functional_model_init_params)
     [java]         2    0.000    0.000    2.995    1.498 training.py:459(__call__)
     [java]         2    0.000    0.000    0.124    0.062 training.py:523(compile)
     [java]         2    0.000    0.000    0.000    0.000 training.py:661(_get_optimizer)
     [java]         2    0.000    0.000    0.000    0.000 training.py:663(_get_single_optimizer)
     [java]         4    0.000    0.000    0.013    0.003 training.py:674(_reset_compile_cache)
     [java]         2    0.000    0.000    0.002    0.001 training.py:688(_configure_steps_per_execution)
     [java]      4158    0.015    0.000    0.094    0.000 training.py:789(distribute_strategy)
     [java]         2    0.000    0.000    0.023    0.011 training.py:794(run_eagerly)
     [java]         2    0.000    0.000    0.000    0.000 training_utils.py:166(get_input_shape_and_dtype)
     [java]         2    0.000    0.000    0.000    0.000 training_utils.py:180(_is_graph_model)
     [java]         2    0.000    0.000    0.000    0.000 training_utils.py:200(get_static_batch_size)
     [java]       830    0.001    0.000    0.001    0.000 training_utils.py:59(handle_partial_sample_weights)
     [java]        23    0.000    0.000    0.000    0.000 transformer.py:112(__init__)
     [java]        12    0.000    0.000    0.000    0.000 transformer.py:120(__enter__)
     [java]        12    0.000    0.000    0.000    0.000 transformer.py:124(__exit__)
     [java]        32    0.000    0.000    0.000    0.000 transformer.py:127(enter)
     [java]        17    0.000    0.000    0.000    0.000 transformer.py:130(exit)
     [java]         1    0.000    0.000    0.000    0.000 transformer.py:133(stack)
     [java]        25    0.000    0.000    0.000    0.000 transformer.py:137(level)
     [java]        67    0.000    0.000    0.000    0.000 transformer.py:145(__iter__)
     [java]        24    0.000    0.000    0.000    0.000 transformer.py:148(__getattr__)
     [java]        20    0.000    0.000    0.000    0.000 transformer.py:151(__setattr__)
     [java]        22    0.000    0.000    0.000    0.000 transformer.py:187(__init__)
     [java]       136    0.000    0.000    0.001    0.000 transformer.py:190(__getitem__)
     [java]        22    0.000    0.000    0.000    0.000 transformer.py:247(__init__)
     [java]     67/23    0.001    0.000    0.045    0.002 transformer.py:278(visit_block)
     [java]   1007/22    0.010    0.000    0.124    0.006 transformer.py:417(visit)
     [java]         1    0.000    0.000    0.000    0.000 transformer.py:51(__init__)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:118(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:146(__init__)
     [java]         1    0.000    0.000    0.070    0.070 transpiler.py:163(create)
     [java]         2    0.000    0.000    0.000    0.000 transpiler.py:186(instantiate)
     [java]         6    0.000    0.000    0.000    0.000 transpiler.py:198(<genexpr>)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:247(get_transformed_name)
     [java]         2    0.000    0.000    0.239    0.119 transpiler.py:266(transform)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:286(_erase_arg_defaults)
     [java]         1    0.000    0.000    0.168    0.168 transpiler.py:324(transform_function)
     [java]         1    0.000    0.000    0.026    0.026 transpiler.py:34(_wrap_into_factory)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:426(_cached_factory)
     [java]         2    0.000    0.000    0.239    0.119 transpiler.py:432(transform_function)
     [java]         2    0.000    0.000    0.000    0.000 type_dispatch.py:107(try_generalizing_trace_type)
     [java]      2494    0.006    0.000    0.006    0.000 type_dispatch.py:38(__init__)
     [java]      2492    0.010    0.000    0.074    0.000 type_dispatch.py:49(add_target)
     [java]      3320    0.022    0.000    0.389    0.000 type_dispatch.py:75(dispatch)
     [java]      2492    0.004    0.000    0.004    0.000 type_dispatch.py:99(_cache_dispatch)
     [java]   834/832    0.014    0.000    0.298    0.000 type_spec.py:139(most_specific_common_supertype)
     [java]      1668    0.002    0.000    0.002    0.000 type_spec.py:154(<genexpr>)
     [java] 2498/2492    0.012    0.000    0.125    0.000 type_spec.py:158(make_supertype_attribute)
     [java]      3328    0.006    0.000    0.009    0.000 type_spec.py:171(<genexpr>)
     [java]      1668    0.003    0.000    0.004    0.000 type_spec.py:181(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 type_spec.py:188(_placeholder_value)
     [java]         4    0.000    0.000    0.001    0.000 type_spec.py:265(_without_tensor_names)
     [java]         4    0.000    0.000    0.000    0.000 type_spec.py:278(rename)
     [java]       838    0.003    0.000    0.020    0.000 type_spec.py:414(_deserialize)
     [java]      1656    0.011    0.000    0.169    0.000 type_spec.py:438(__eq__)
     [java]      2494    0.010    0.000    0.164    0.000 type_spec.py:446(__hash__)
     [java]      3320    0.010    0.000    0.015    0.000 type_spec.py:474(__tf_tracing_type__)
     [java]      5806    0.026    0.000    0.243    0.000 type_spec.py:496(__get_cmp_key)
     [java] 11612/5806    0.065    0.000    0.208    0.000 type_spec.py:501(__make_cmp_key)
     [java]      5806    0.017    0.000    0.072    0.000 type_spec.py:517(<listcomp>)
     [java]       310    0.001    0.000    0.038    0.000 type_spec.py:848(type_spec_from_value)
     [java]      7780    0.065    0.000    0.461    0.000 type_spec.py:897(_type_spec_from_value)
     [java]       215    0.001    0.000    0.001    0.000 types.py:171(__get__)
     [java]     14136    0.378    0.000    0.679    0.000 typing.py:1048(_get_protocol_attrs)
     [java]      9143    0.045    0.000    0.598    0.000 typing.py:1065(_is_callable_members_only)
     [java]     18286    0.043    0.000    0.065    0.000 typing.py:1067(<genexpr>)
     [java]      9135    0.094    0.000    1.059    0.000 typing.py:1099(__instancecheck__)
     [java]      9970    0.019    0.000    0.026    0.000 typing.py:1107(<genexpr>)
     [java]         8    0.000    0.000    0.001    0.000 typing.py:1158(_proto_hook)
     [java]         1    0.000    0.000    0.000    0.000 unsupported_features_checker.py:56(verify)
     [java]         2    0.000    0.000    0.000    0.000 util.py:1142(__init__)
     [java]         2    0.000    0.000    0.000    0.000 util.py:1532(saver_with_op_caching)
     [java]         4    0.000    0.000    0.000    0.000 util.py:1543(_assert_trackable)
     [java]      4150    0.011    0.000    0.017    0.000 util.py:19(is_namedtuple)
     [java]         2    0.000    0.000    0.001    0.000 util.py:2077(__init__)
     [java]         2    0.000    0.000    0.000    0.000 util.py:2118(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:106(make_global_gradient_clipnorm_fn)
     [java]       996    0.058    0.000    0.128    0.000 utils.py:112(softmax)
     [java]      1660    0.003    0.000    0.003    0.000 utils.py:126(rank_to_util)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:128(make_gradient_clipvalue_fn)
     [java]       830    0.023    0.000    0.036    0.000 utils.py:130(utilities)
     [java]         6    0.000    0.000    0.034    0.006 utils.py:134(_wrap_function)
     [java]       830    0.044    0.000    0.406    0.000 utils.py:148(apply_dirichlet)
     [java]      7555    0.016    0.000    0.016    0.000 utils.py:153(get_coord)
     [java]      5020    0.051    0.000    0.061    0.000 utils.py:157(index_action)
     [java]       830    0.006    0.000    0.006    0.000 utils.py:182(reverse_index_action)
     [java]       830    0.145    0.000    0.411    0.000 utils.py:202(chose_move)
     [java]    129888    9.676    0.000   10.463    0.000 utils.py:253(format_positions)
     [java]       913    1.303    0.001   11.918    0.013 utils.py:264(format_state)
     [java]         1    0.000    0.000    0.079    0.079 utils.py:68(add_to_dataset)
     [java]         2    0.000    0.000   10.929    5.464 utils.py:82(load_nn)
     [java]       178    0.006    0.000    1.120    0.006 utils.py:84(_wrap_function)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:84(make_gradient_clipnorm_fn)
     [java]         1    0.000    0.000    0.000    0.000 variable_scope.py:1142(__init__)
     [java]      2492    0.005    0.000    0.005    0.000 variable_scope.py:1193(use_resource)
     [java]      4984    0.017    0.000    0.058    0.000 variable_scope.py:1229(set_use_resource)
     [java]         1    0.000    0.000    0.000    0.000 variable_scope.py:1427(__init__)
     [java]      2492    0.009    0.000    0.051    0.000 variable_scope.py:1453(get_variable_scope_store)
     [java]      2492    0.011    0.000    0.062    0.000 variable_scope.py:1466(get_variable_scope)
     [java]       458    0.011    0.000    0.652    0.001 variable_scope.py:2679(default_variable_creator)
     [java]       536    0.011    0.000    0.682    0.001 variable_scope.py:2738(default_variable_creator_v2)
     [java]      1672    0.010    0.000    0.054    0.000 variable_scope.py:2860(variable_creator_scope)
     [java]       528    0.003    0.000    0.006    0.000 variables.py:1123(_shared_name)
     [java]      3786    0.018    0.000    0.031    0.000 variables.py:154(validate_synchronization_aggregation_trainable)
     [java]         6    0.000    0.000    0.000    0.000 variables.py:18(ld)
     [java]       458    0.004    0.000    0.663    0.001 variables.py:185(_variable_v1_call)
     [java]       458    0.003    0.000    0.655    0.001 variables.py:202(<lambda>)
     [java]       536    0.005    0.000    0.694    0.001 variables.py:226(_variable_v2_call)
     [java]       536    0.003    0.000    0.685    0.001 variables.py:240(<lambda>)
     [java] 3786/2792    0.024    0.000    1.620    0.001 variables.py:261(__call__)
     [java]        18    0.000    0.000    0.004    0.000 variables.py:51(visit_Name)
     [java]         6    0.000    0.000    0.000    0.000 variables.py:60(_make_getter)
     [java]         6    0.000    0.000    0.007    0.001 variables.py:63(getter)
     [java]         1    0.000    0.000    0.008    0.008 variables.py:96(transform)
     [java]       830    0.004    0.000    0.016    0.000 version_utils.py:121(disallow_legacy_graph)
     [java]         2    0.000    0.000    0.000    0.000 version_utils.py:131(is_v1_layer_or_model)
     [java]         2    0.000    0.000    0.001    0.000 version_utils.py:50(__new__)
     [java]       320    0.003    0.000    0.046    0.000 version_utils.py:59(__new__)
     [java]       322    0.001    0.000    0.004    0.000 version_utils.py:80(should_use_v2)
     [java]       322    0.037    0.000    0.038    0.000 version_utils.py:96(swap_class)
     [java]        85    0.000    0.000    0.001    0.000 weakref.py:105(__init__)
     [java]         1    0.000    0.000    0.000    0.000 weakref.py:106(remove)
     [java]        13    0.000    0.000    0.000    0.000 weakref.py:122(_commit_removals)
     [java]         7    0.000    0.000    0.000    0.000 weakref.py:162(__setitem__)
     [java]        15    0.000    0.000    0.000    0.000 weakref.py:207(items)
     [java]        85    0.001    0.000    0.001    0.000 weakref.py:287(update)
     [java]         7    0.000    0.000    0.000    0.000 weakref.py:345(__new__)
     [java]         7    0.000    0.000    0.000    0.000 weakref.py:350(__init__)
     [java]      2500    0.011    0.000    0.011    0.000 weakref.py:365(__init__)
     [java]      2363    0.004    0.000    0.004    0.000 weakref.py:367(remove)
     [java]       830    0.002    0.000    0.002    0.000 weakref.py:404(__getitem__)
     [java]      4177    0.009    0.000    0.009    0.000 weakref.py:417(__setitem__)
     [java]      9588    0.030    0.000    0.045    0.000 weakref.py:441(get)
     [java]      1139    0.007    0.000    0.007    0.000 weakref.py:444(__contains__)
     [java]       960    0.003    0.000    0.005    0.000 weakref.py:493(pop)
     [java]     31885    0.061    0.000    0.068    0.000 {built-in method __new__ of type object at 0x7f30cf41a9c0}
     [java]    309909    0.456    0.000    0.542    0.000 {built-in method _abc._abc_instancecheck}
     [java] 23035/14583    0.063    0.000    0.089    0.000 {built-in method _abc._abc_subclasscheck}
     [java]    306824    0.583    0.000    0.583    0.000 {built-in method _codecs.lookup}
     [java]        20    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
     [java]     28236    0.096    0.000    1.133    0.000 {built-in method _functools.reduce}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
     [java]        73    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method _imp.extension_suffixes}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
     [java]        73    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
     [java]      1826    0.003    0.000    0.003    0.000 {built-in method _operator.index}
     [java]         1    0.008    0.008    0.008    0.008 {built-in method _pickle.dump}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
     [java]      3196    0.005    0.000    0.005    0.000 {built-in method _thread.allocate_lock}
     [java]     23730    0.033    0.000    0.033    0.000 {built-in method _thread.get_ident}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method atexit.register}
     [java]         6    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
     [java]         1    0.000    0.000    0.001    0.001 {built-in method builtins.__import__}
     [java]     51702    0.206    0.000    0.917    0.000 {built-in method builtins.all}
     [java] 71094/56112    0.640    0.000    1.699    0.000 {built-in method builtins.any}
     [java]    233251    0.239    0.000    0.239    0.000 {built-in method builtins.callable}
     [java]        19    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
     [java]        30    0.000    0.000    0.000    0.000 {built-in method builtins.dir}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method builtins.exec}
     [java]   1017311    1.642    0.000    4.434    0.000 {built-in method builtins.getattr}
     [java]      1110    0.002    0.000    0.002    0.000 {built-in method builtins.globals}
     [java] 961946/961592    1.288    0.000    1.436    0.000 {built-in method builtins.hasattr}
     [java] 87189/20748    0.230    0.000    0.572    0.000 {built-in method builtins.hash}
     [java]    735484    0.817    0.000    0.817    0.000 {built-in method builtins.id}
     [java] 3124942/3124087    4.149    0.000    6.389    0.000 {built-in method builtins.isinstance}
     [java]     26535    0.049    0.000    0.090    0.000 {built-in method builtins.issubclass}
     [java]     32037    0.045    0.000   13.054    0.000 {built-in method builtins.iter}
     [java] 522924/449900    0.716    0.000    0.876    0.000 {built-in method builtins.len}
     [java]     24408    0.053    0.000    0.053    0.000 {built-in method builtins.max}
     [java]        18    0.000    0.000    0.000    0.000 {built-in method builtins.min}
     [java] 303744/194070    0.809    0.000    6.468    0.000 {built-in method builtins.next}
     [java]        22    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
     [java]        15    0.000    0.000    0.000    0.000 {built-in method builtins.print}
     [java]        13    0.000    0.000    0.000    0.000 {built-in method builtins.repr}
     [java]    116343    0.135    0.000    0.164    0.000 {built-in method builtins.setattr}
     [java]     28017    0.058    0.000    0.060    0.000 {built-in method builtins.sorted}
     [java]      2492    0.004    0.000    0.004    0.000 {built-in method builtins.sum}
     [java]         3    0.000    0.000    0.000    0.000 {built-in method from_bytes}
     [java]    262296    0.357    0.000    0.357    0.000 {built-in method from_iterable}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method fromkeys}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method h5py.h5.get_config}
     [java]       504    0.004    0.000    0.004    0.000 {built-in method h5py.h5t.py_create}
     [java]         3    0.000    0.000    0.000    0.000 {built-in method io.open_code}
     [java]         3    0.001    0.000    0.001    0.000 {built-in method io.open}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method marshal.dumps}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method marshal.loads}
     [java]       830    0.002    0.000    0.002    0.000 {built-in method math.ceil}
     [java]        92    0.000    0.000    0.000    0.000 {built-in method math.isinf}
     [java]        92    0.000    0.000    0.000    0.000 {built-in method math.isnan}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
     [java]      7932    0.044    0.000    0.044    0.000 {built-in method numpy.array}
     [java]      1744    0.002    0.000    0.002    0.000 {built-in method numpy.asanyarray}
     [java]     13309    0.037    0.000    0.524    0.000 {built-in method numpy.asarray}
     [java] 17386/15507    0.122    0.000    0.513    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     [java]      2657    0.004    0.000    0.004    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
     [java]      1743    0.062    0.000    0.062    0.000 {built-in method numpy.empty}
     [java]         8    0.000    0.000    0.000    0.000 {built-in method numpy.frombuffer}
     [java]    134930    0.498    0.000    0.498    0.000 {built-in method numpy.zeros}
     [java]        11    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method posix.open}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method posix.replace}
     [java]        17    0.002    0.000    0.002    0.000 {built-in method posix.stat}
     [java]      5630    0.008    0.000    0.008    0.000 {built-in method sys._getframe}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method sys.audit}
     [java]     21082    0.042    0.000    0.042    0.000 {built-in method sys.exc_info}
     [java]       179    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
     [java]      2492    0.144    0.000    0.144    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextListDevices}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetConfig}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetDevicePlacementPolicy}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetJitCompileRewrite}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetRunEagerOpAsFunction}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetTfrt}
     [java]      2361    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
     [java]       830    0.019    0.000    0.019    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_DeleteContextOptions}
     [java]      2312    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
     [java]      3324    0.011    0.000    0.011    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringCounterCellIncrementBy}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
     [java]      2310    0.021    0.000    0.021    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
     [java]      2492    0.016    0.000    0.016    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellCounter0}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellCounter1}
     [java]       830    0.007    0.000    0.007    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellCounter2}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContextOptions}
     [java]         1    0.001    0.001    0.001    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContext}
     [java]       830   21.824    0.026   21.824    0.026 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
     [java]     24092   15.021    0.001   15.287    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_SetCEagerContext}
     [java]     11976    0.031    0.000    0.031    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
     [java]      7275    0.013    0.000    0.013    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
     [java]       830    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
     [java]      1746    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
     [java]      5385    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
     [java]      5385    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
     [java]      5776    0.015    0.000    0.015    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
     [java]     29974    0.079    0.000    0.079    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
     [java]      5776    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeleteDeviceList}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListCount}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListName}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListType}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_IsMlirBridgeEnabled}
     [java]         1    0.026    0.026    0.026    0.026 {built-in method tensorflow.python._pywrap_tfe.TF_ListPhysicalDevices}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_ListPluggablePhysicalDevices}
     [java]      3764    0.017    0.000    0.017    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.AddControlInput}
     [java]     21204    0.086    0.000    0.086    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.GetOperationInputs}
     [java]      4156    0.044    0.000    0.044    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.SetAttr}
     [java]       874    0.012    0.000    0.012    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.SetHandleShapeAndType}
     [java]      2806    0.008    0.000    0.008    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.SetRequireShapeInferenceFns}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_AddControlInput}
     [java]      1660    0.018    0.000    0.018    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_AddInputList}
     [java]     18400    0.094    0.000    0.094    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_AddInput}
     [java]     51214    0.114    0.000    0.114    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_DeleteBuffer}
     [java]      2361    0.047    0.000    0.047    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_DeleteFunction}
     [java]      2671    0.098    0.000    0.098    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_DeleteGraph}
     [java]     23656    0.713    0.000    0.713    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_FinishOperation}
     [java]      2490    0.020    0.000    0.020    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_FunctionSetAttrValueProto}
     [java]      2494    0.052    0.000    0.052    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_FunctionToFunctionDef}
     [java]     26288    0.063    0.000    0.063    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GetBuffer}
     [java]      5166    0.057    0.000    0.057    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GraphGetOpDef}
     [java]     10004    0.055    0.000    0.055    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
     [java]      3504    0.029    0.000    0.029    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
     [java]      2492    0.203    0.000    0.203    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GraphToFunction_wrapper}
     [java]     11980    0.067    0.000    0.067    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_GraphVersions}
     [java]      4156    0.023    0.000    0.023    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_NewBufferFromString}
     [java]     47058    0.186    0.000    0.186    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_NewBuffer}
     [java]      2806    0.103    0.000    0.103    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_NewGraph}
     [java]     23656    0.247    0.000    0.247    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_NewOperation}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationDevice}
     [java]     27418    0.687    0.000    0.965    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationGetAttrValueProto}
     [java]     19374    0.047    0.000    0.047    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationName}
     [java]     23656    0.080    0.000    0.080    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationNumOutputs}
     [java]    358506    0.805    0.000    0.805    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationOpType}
     [java]       438    0.002    0.000    0.002    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
     [java]     23682    0.091    0.000    0.091    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_OperationOutputType}
     [java]     47742    0.336    0.000    0.336    0.000 {built-in method tensorflow.python.client._pywrap_tf_session.TF_SetAttrValueProto}
     [java]        21    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.framework._op_def_registry.get}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.lib.io._pywrap_file_io.FileExists}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.lib.io._pywrap_file_io.IsDirectory}
     [java]         8    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.lib.io._pywrap_file_io.Stat}
     [java]      5149    0.014    0.000    0.014    0.000 {built-in method tensorflow.python.platform._pywrap_tf2.is_enabled}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python.util._pywrap_determinism.is_enabled}
     [java]      4980    0.021    0.000    0.022    0.000 {built-in method tensorflow.python.util._pywrap_utils.AssertSameStructureForData}
     [java] 4156/4152    0.047    0.000    0.050    0.000 {built-in method tensorflow.python.util._pywrap_utils.AssertSameStructure}
     [java]     44000    0.143    0.000    0.144    0.000 {built-in method tensorflow.python.util._pywrap_utils.FlattenForData}
     [java]    104366    0.471    0.000    0.528    0.000 {built-in method tensorflow.python.util._pywrap_utils.Flatten}
     [java]     21720    0.035    0.000    0.035    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsAttrs}
     [java]     22770    0.035    0.000    0.035    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsCompositeTensor}
     [java]     19390    0.027    0.000    0.027    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsMappingView}
     [java]     20406    0.029    0.000    0.029    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsMapping}
     [java]     28228    0.050    0.000    0.050    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsMutableMapping}
     [java]     19394    0.062    0.000    0.062    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsNamedtuple}
     [java]     16604    0.035    0.000    0.035    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsNestedForData}
     [java]     38086    0.079    0.000    0.079    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsNestedOrComposite}
     [java]     80650    0.153    0.000    0.153    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsNested}
     [java]     21078    0.029    0.000    0.029    0.000 {built-in method tensorflow.python.util._pywrap_utils.IsTypeSpec}
     [java]     23656    0.261    0.000    0.261    0.000 {built-in method tensorflow.python.util._tf_stack.extract_stack_for_node}
     [java]      5900    0.016    0.000    0.016    0.000 {built-in method time.time}
     [java]         1    0.000    0.000    0.000    0.000 {function Random.seed at 0x7f30cecda700}
     [java]       504    0.003    0.000    0.005    0.000 {h5py.h5t.check_string_dtype}
     [java]     47312    0.317    0.000    0.317    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     59722    0.308    0.000    0.308    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]    103654    0.174    0.000    0.174    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     26309    0.314    0.000    0.314    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     66884    0.390    0.000    0.390    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]      6648    0.015    0.000    0.015    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method '__enter__' of '_io._IOBase' objects}
     [java]         6    0.069    0.011    0.069    0.011 {method '__exit__' of '_io._IOBase' objects}
     [java]     72966    0.098    0.000    0.098    0.000 {method '__exit__' of '_thread.RLock' objects}
     [java]       935    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
     [java]      6340    0.009    0.000    0.009    0.000 {method '__exit__' of 'h5py._objects.FastRLock' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
     [java]     24266    0.040    0.000    0.040    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
     [java]        60    0.000    0.000    0.000    0.000 {method '_fastdict_insert' of 'fast_module_type.FastModuleType' objects}
     [java]      6342    0.058    0.000    0.058    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
     [java]      5034    0.015    0.000    0.015    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
     [java]       831    0.003    0.000    0.003    0.000 {method 'acquire' of '_thread.RLock' objects}
     [java]     70969    0.131    0.000    0.131    0.000 {method 'acquire' of '_thread.lock' objects}
     [java]    539254    0.608    0.000    0.622    0.000 {method 'add' of 'set' objects}
     [java]      3328    0.013    0.000    0.061    0.000 {method 'all' of 'numpy.ndarray' objects}
     [java]       312    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     [java]       994    0.006    0.000    0.006    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
     [java]    417121    0.505    0.000    0.505    0.000 {method 'append' of 'list' objects}
     [java]        83    0.000    0.000    0.000    0.000 {method 'argmax' of 'numpy.ndarray' objects}
     [java]      3328    0.015    0.000    0.015    0.000 {method 'astype' of 'numpy.ndarray' objects}
     [java]      3474    0.005    0.000    0.005    0.000 {method 'bit_length' of 'int' objects}
     [java]       936    0.001    0.000    0.001    0.000 {method 'clear' of 'dict' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
     [java]      2090    0.003    0.000    0.003    0.000 {method 'copy' of 'dict' objects}
     [java]        40    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
     [java]      2196    0.057    0.000    0.057    0.000 {method 'copy' of 'numpy.ndarray' objects}
     [java]       312    0.001    0.000    0.001    0.000 {method 'count' of 'list' objects}
     [java]       830    0.012    0.000    0.012    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
     [java]      8366    0.014    0.000    0.014    0.000 {method 'decode' of 'bytes' objects}
     [java]       830    0.212    0.000    0.267    0.000 {method 'dirichlet' of 'numpy.random.mtrand.RandomState' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     [java]        13    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
     [java]     68110    0.102    0.000    0.102    0.000 {method 'encode' of 'str' objects}
     [java]        13    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
     [java]       351    0.001    0.000    0.001    0.000 {method 'endswith' of 'str' objects}
     [java]         4    0.000    0.000    0.000    0.000 {method 'extend' of 'bytearray' objects}
     [java]        14    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
     [java]      2492    0.015    0.000    0.015    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
     [java]      3008    0.012    0.000    0.012    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
     [java]     28188    0.052    0.000    0.088    0.000 {method 'extend' of 'list' objects}
     [java]     74284    0.269    0.000    1.201    0.000 {method 'extendleft' of 'collections.deque' objects}
     [java]        10    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
     [java]      1334    0.003    0.000    0.003    0.000 {method 'find' of 'str' objects}
     [java]        11    0.000    0.000    0.000    0.000 {method 'findall' of 're.Pattern' objects}
     [java]      3648    0.013    0.000    0.013    0.000 {method 'format' of 'str' objects}
     [java]    434144    0.507    0.000    0.507    0.000 {method 'get' of 'dict' objects}
     [java]       327    0.001    0.000    0.001    0.000 {method 'get' of 'mappingproxy' objects}
     [java]      5668    0.007    0.000    0.007    0.000 {method 'getrandbits' of '_random.Random' objects}
     [java]         8    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
     [java]       312    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
     [java]       528    0.001    0.000    0.001    0.000 {method 'index' of 'str' objects}
     [java]       915    0.002    0.000    0.002    0.000 {method 'insert' of 'list' objects}
     [java]         5    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
     [java]         6    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
     [java]     13896    0.019    0.000    0.019    0.000 {method 'isidentifier' of 'str' objects}
     [java]        48    0.000    0.000    0.000    0.000 {method 'isprintable' of 'str' objects}
     [java]       310    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
     [java]      4152    0.024    0.000    0.024    0.000 {method 'item' of 'numpy.generic' objects}
     [java]       176    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
     [java]     68056    0.100    0.000    0.100    0.000 {method 'items' of 'dict' objects}
     [java]     17719    0.142    0.000    0.699    0.000 {method 'join' of 'str' objects}
     [java]     60533    0.079    0.000    0.079    0.000 {method 'keys' of 'dict' objects}
     [java]     14136    0.021    0.000    0.021    0.000 {method 'keys' of 'mappingproxy' objects}
     [java]     25498    0.037    0.000    0.037    0.000 {method 'lower' of 'str' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     [java]     39424    0.182    0.000    0.182    0.000 {method 'match' of 're.Pattern' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'mean' of 'numpy.ndarray' objects}
     [java]       312    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.deque' objects}
     [java]     74437    0.101    0.000    0.101    0.000 {method 'pop' of 'dict' objects}
     [java]     41439    0.061    0.000    0.061    0.000 {method 'pop' of 'list' objects}
     [java]       830    0.001    0.000    0.001    0.000 {method 'pop' of 'set' objects}
     [java]    329974    0.363    0.000    0.363    0.000 {method 'popleft' of 'collections.deque' objects}
     [java]       830    0.007    0.000    0.007    0.000 {method 'rand' of 'numpy.random.mtrand.RandomState' objects}
     [java]      6642    0.016    0.000    0.016    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'read' of '_io.BufferedReader' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
     [java]        30    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
     [java]         1    0.001    0.001    0.001    0.001 {method 'readlines' of '_io._IOBase' objects}
     [java]      6130    0.082    0.000    0.082    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     [java]       831    0.001    0.000    0.001    0.000 {method 'release' of '_thread.RLock' objects}
     [java]     47313    0.064    0.000    0.064    0.000 {method 'release' of '_thread.lock' objects}
     [java]       375    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
     [java]     14944    0.021    0.000    0.021    0.000 {method 'replace' of 'str' objects}
     [java]    132837    0.346    0.000    0.346    0.000 {method 'reshape' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
     [java]      5891    0.008    0.000    0.008    0.000 {method 'rpartition' of 'str' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
     [java]       341    0.001    0.000    0.001    0.000 {method 'rstrip' of 'str' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'set_alignment' of 'h5py.h5p.PropFAID' objects}
     [java]       840    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
     [java]      1677    0.005    0.000    0.007    0.000 {method 'sort' of 'list' objects}
     [java]       210    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
     [java]        18    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
     [java]       830    0.002    0.000    0.002    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
     [java]    282591    0.373    0.000    0.373    0.000 {method 'startswith' of 'str' objects}
     [java]        12    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
     [java]        19    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     [java]     20770    0.068    0.000    0.191    0.000 {method 'throw' of 'generator' objects}
     [java]         3    0.000    0.000    0.000    0.000 {method 'to_bytes' of 'int' objects}
     [java]       838    0.002    0.000    0.002    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
     [java]       913    0.002    0.000    0.002    0.000 {method 'transpose' of 'numpy.ndarray' objects}
     [java]     25304    0.039    0.000    0.039    0.000 {method 'update' of 'dict' objects}
     [java]    108981    0.142    0.000    0.144    0.000 {method 'update' of 'set' objects}
     [java]       173    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     [java]     12460    0.017    0.000    0.017    0.000 {method 'values' of 'collections.OrderedDict' objects}
     [java]     34531    0.109    0.000    0.141    0.000 {method 'values' of 'dict' objects}
     [java]      4894    0.008    0.000    0.008    0.000 {method 'values' of 'mappingproxy' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'write' of '_io.FileIO' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
     [java]      4150    0.026    0.000    0.026    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
     [java]      2492    0.019    0.000    0.019    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
     [java] 
     [java] 

BUILD SUCCESSFUL
Total time: 2 minutes 42 seconds
********************************************************************************************
***************************************TRAINING MODEL***************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

train_model:
     [exec] --> Loading dataset for the game : Bashni
     [exec] * Number of examples in the dataset : 304
     [exec] * X shape (304, 8, 8, 145)
     [exec] * y_values shape (304,)
     [exec] * y_distrib shape (304, 8, 8, 32)
     [exec] --> Done !
     [exec] --> No outsider found, creating one
     [exec] Epoch 1/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4468 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 8s 8s/step - loss: 5.4468 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4465 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 2/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4465 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 900ms/step - loss: 5.4465 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4463 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 3/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4463 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 907ms/step - loss: 5.4463 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4460 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 4/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4460 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 902ms/step - loss: 5.4460 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4458 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 5/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4458 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 890ms/step - loss: 5.4458 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4455 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 6/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4455 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 944ms/step - loss: 5.4455 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4453 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 7/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4453 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 886ms/step - loss: 5.4453 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4451 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 8/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4451 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 907ms/step - loss: 5.4451 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4448 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 9/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4448 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 903ms/step - loss: 5.4448 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4446 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242Epoch 10/10
     [exec] 
     [exec] 1/1 [==============================] - ETA: 0s - loss: 5.4446 - value_head_loss: 1.0000 - policy_head_loss: 7.62421/1 [==============================] - 1s 900ms/step - loss: 5.4446 - value_head_loss: 1.0000 - policy_head_loss: 7.6242 - val_loss: 5.4444 - val_value_head_loss: 1.0000 - val_policy_head_loss: 7.6242
     [exec] 
     [exec] --> Saving model for the game : Bashni , model type : outsider
     [exec] --> Done !

BUILD SUCCESSFUL
Total time: 25 seconds
********************************************************************************************
*****************************************MCTS DOJO******************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

mcts_dojo:
     [java] --> Loading model for the game : Bashni , model type : champion
     [java] --> Done !
     [java] --> Loading model for the game : Bashni , model type : outsider
     [java] --> Done !
     [java] --> Running 1 games
     [java] Exception in thread "main" java.lang.RuntimeException: Error in Python interpreter:
     [java] Type: <class 'ValueError'>
     [java] Value: too many values to unpack (expected 3)
     [java] Line: 220
     [java] Namespace: chose_move
     [java] File: /home/durande/Bureau/AlphaZeroICGA/src/main/src_python/utils.py
     [java] Traceback (most recent call last):
     [java]   File "/home/durande/Bureau/AlphaZeroICGA/src/main/src_python/dojo.py", line 48, in run_dojo
     [java]   File "/home/durande/Bureau/AlphaZeroICGA/src/main/src_python/mcts_uct.py", line 71, in select_action
     [java]   File "/home/durande/Bureau/AlphaZeroICGA/src/main/src_python/mcts_uct.py", line 161, in select_node
     [java]   File "/home/durande/Bureau/AlphaZeroICGA/src/main/src_python/utils.py", line 220, in chose_move
     [java] 
     [java] 	at org.jpy.PyLib.callAndReturnObject(Native Method)
     [java] 	at org.jpy.PyObject.call(PyObject.java:449)
     [java] 	at alphazero.RunningDojoWithPython.run(RunningDojoWithPython.java:58)
     [java] 	at alphazero.RunningDojoWithPython.main(RunningDojoWithPython.java:37)

BUILD SUCCESSFUL
Total time: 15 seconds
********************************************************************************************
*****************************************CREATING AGENT**************************************
********************************************************************************************
Buildfile: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

init:

build:
     [echo] AlphaZero: /home/durande/Bureau/AlphaZeroICGA/src/main/build.xml

create_agent:
      [jar] Building jar: /home/durande/Bureau/AlphaZeroICGA/src/main/agents/LudiiAgent.jar

BUILD SUCCESSFUL
Total time: 3 seconds
********************************************************************************************
*****************************************AGENT READY****************************************
********************************************************************************************
