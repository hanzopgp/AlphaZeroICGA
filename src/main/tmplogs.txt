Buildfile: /home/vittaut/AlphaZeroICGA/src/main/build.xml

init:

build:

run_trials:
     [java] --> Loading model for the game : Bashni , model type : champion
     [java] ⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼
     [java] True
     [java] False
     [java] ==================================================
     [java] --> Done !
     [java] --> Loading model for the game : Bashni , model type : champion
     [java] ⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼⁼
     [java] False
     [java] False
     [java] ==================================================
     [java] --> Done !
     [java] --> Running 2 episodes
     [java] /data/vittaut/envs/alphazero/lib/python3.9/site-packages/tensorflow/python/keras/engine/training.py:2325: UserWarning: `Model.state_updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.
     [java]   warnings.warn('`Model.state_updates` will be removed in a future version. '
     [java] --> Ended one game because it was too long
     [java] * X shape (92, 8, 8, 145)
     [java] * y_values shape (92,)
     [java] * y_distrib shape (92, 8, 8, 32)
     [java] * AI1 winrate: 0.5
     [java] * AI2 winrate: 0.0
     [java] * Draws: 0.5
     [java] * Mean game duration 60.25130319595337
     [java] * Max game duration 60.30422019958496
     [java] --> Episodes are over
     [java] --> Saving data to pickle for the game : Bashni
     [java] --> Hash code : 2731277817390693
     [java] --> Done !
     [java]          105574297 function calls (103754599 primitive calls) in 132.399 seconds
     [java] 
     [java]    Ordered by: standard name
     [java] 
     [java]    ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     [java]      2760    0.005    0.000    0.063    0.000 <__array_function__ internals>:177(any)
     [java]      5612    0.007    0.000    0.109    0.000 <__array_function__ internals>:177(append)
     [java]        80    0.000    0.000    0.002    0.000 <__array_function__ internals>:177(array_equal)
     [java]      5612    0.009    0.000    0.084    0.000 <__array_function__ internals>:177(concatenate)
     [java]      8372    0.020    0.000    0.062    0.000 <__array_function__ internals>:177(copyto)
     [java]      2760    0.004    0.000    0.060    0.000 <__array_function__ internals>:177(cumsum)
     [java]      5520    0.009    0.000    0.103    0.000 <__array_function__ internals>:177(expand_dims)
     [java]      5612    0.011    0.000    0.156    0.000 <__array_function__ internals>:177(moveaxis)
     [java]      2314    0.003    0.000    0.051    0.000 <__array_function__ internals>:177(prod)
     [java]      1052    0.002    0.000    0.026    0.000 <__array_function__ internals>:177(product)
     [java]      2944    0.004    0.000    0.052    0.000 <__array_function__ internals>:177(sum)
     [java]     13800    0.022    0.000    0.246    0.000 <__array_function__ internals>:177(where)
     [java]        13    0.000    0.000    0.015    0.001 <frozen importlib._bootstrap>:1002(_find_and_load)
     [java]        10    0.000    0.000    0.004    0.000 <frozen importlib._bootstrap>:1018(_gcd_import)
     [java]     44765    0.054    0.000    0.074    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
     [java]        22    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:112(release)
     [java]        13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:152(__init__)
     [java]        13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:156(__enter__)
     [java]        13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:160(__exit__)
     [java]        22    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:166(_get_module_lock)
     [java]        22    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:185(cb)
     [java]         9    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:203(_lock_unlock_module)
     [java]         6    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap>:220(_call_with_frames_removed)
     [java]        30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:231(_verbose_message)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:351(__init__)
     [java]        10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:385(cached)
     [java]      2542    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap>:398(parent)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:406(has_location)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:486(_init_module_attrs)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:558(module_from_spec)
     [java]        22    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
     [java]         4    0.000    0.000    0.013    0.003 <frozen importlib._bootstrap>:659(_load_unlocked)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:736(find_spec)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:811(find_spec)
     [java]        22    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:87(acquire)
     [java]        16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:874(__enter__)
     [java]        16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:878(__exit__)
     [java]         4    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap>:901(_find_spec)
     [java]        10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:948(_sanity_check)
     [java]         4    0.000    0.000    0.015    0.004 <frozen importlib._bootstrap>:967(_find_and_load_unlocked)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1017(path_stats)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1022(_cache_bytecode)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1027(set_data)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:104(_path_isdir)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:120(_write_atomic)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1272(_path_importer_cache)
     [java]         4    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1309(_get_spec)
     [java]         4    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1341(find_spec)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1433(_get_spec)
     [java]         4    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1438(find_spec)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1564(_get_supported_file_loaders)
     [java]        10    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:301(cache_from_source)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:40(_relax_case)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:431(_get_cached)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:443(_calc_mode)
     [java]         3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:46(_pack_uint32)
     [java]         6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:463(_check_name_wrapper)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:500(_classify_pyc)
     [java]        12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_unpack_uint32)
     [java]         4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:533(_validate_timestamp_pyc)
     [java]         4    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:585(_compile_bytecode)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:598(_code_to_timestamp_pyc)
     [java]        26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:636(spec_from_file_location)
     [java]        26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
     [java]        12    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_path_split)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:773(is_package)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:781(create_module)
     [java]         5    0.000    0.000    0.013    0.003 <frozen importlib._bootstrap_external>:784(exec_module)
     [java]        15    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
     [java]         1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:848(source_to_code)
     [java]         5    0.000    0.000    0.011    0.002 <frozen importlib._bootstrap_external>:856(get_code)
     [java]         5    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:90(_path_is_mode_type)
     [java]         5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:946(__init__)
     [java]         6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:971(get_filename)
     [java]         6    0.000    0.000    0.008    0.001 <frozen importlib._bootstrap_external>:976(get_data)
     [java]         4    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:99(_path_isfile)
     [java]       968    0.001    0.000    0.001    0.000 <string>:1(<lambda>)
     [java]         1    0.000    0.000    0.000    0.000 <string>:1(<module>)
     [java]        10    0.000    0.000    0.004    0.000 __init__.py:109(import_module)
     [java]         1    0.000    0.000    0.001    0.001 __init__.py:11(unparse)
     [java]       578    0.001    0.000    0.024    0.000 __init__.py:138(deserialize)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:144(_DType_reduce)
     [java]       914    0.001    0.000    0.025    0.000 __init__.py:149(get)
     [java]        15    0.000    0.000    0.000    0.000 __init__.py:278(__getattr__)
     [java]         4    0.000    0.000    0.003    0.001 __init__.py:299(loads)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:345(namedtuple)
     [java]         4    0.000    0.000    0.000    0.000 __init__.py:36(__init__)
     [java]       578    0.001    0.000    0.002    0.000 __init__.py:38(populate_deserializable_objects)
     [java]         4    0.000    0.000    0.000    0.000 __init__.py:419(<genexpr>)
     [java]         1    0.000    0.000    0.000    0.000 __init__.py:43(normalize_encoding)
     [java]         4    0.000    0.000    0.001    0.000 __init__.py:43(start)
     [java]        94    0.000    0.000    0.000    0.000 __init__.py:437(_make)
     [java]         4    0.000    0.000    0.000    0.000 __init__.py:55(__getattr__)
     [java]         2    0.000    0.000    0.000    0.000 __init__.py:581(__init__)
     [java]       172    0.000    0.000    0.000    0.000 __init__.py:595(__missing__)
     [java]         2    0.000    0.000    0.000    0.000 __init__.py:649(update)
     [java]         1    0.000    0.000    0.003    0.003 __init__.py:70(search_function)
     [java]         4    0.000    0.000    0.000    0.000 __init__.py:84(find_spec)
     [java]        33    0.000    0.000    0.000    0.000 __init__.py:88(<lambda>)
     [java]       567    0.000    0.000    0.000    0.000 _collections_abc.py:262(__subclasshook__)
     [java]        18    0.000    0.000    0.000    0.000 _collections_abc.py:283(__subclasshook__)
     [java]       265    0.000    0.000    0.000    0.000 _collections_abc.py:315(__subclasshook__)
     [java]        23    0.000    0.000    0.000    0.000 _collections_abc.py:381(__subclasshook__)
     [java]      1132    0.000    0.000    0.000    0.000 _collections_abc.py:409(__subclasshook__)
     [java]     27465    0.048    0.000    0.173    0.000 _collections_abc.py:759(get)
     [java]     27404    0.021    0.000    0.140    0.000 _collections_abc.py:766(__contains__)
     [java]      9240    0.008    0.000    0.012    0.000 _collections_abc.py:778(items)
     [java]      9240    0.004    0.000    0.004    0.000 _collections_abc.py:801(__init__)
     [java]     23574    0.046    0.000    0.046    0.000 _collections_abc.py:848(__iter__)
     [java]      1380    0.001    0.000    0.002    0.000 _collections_abc.py:979(__iter__)
     [java]   2286384    1.546    0.000    2.846    0.000 _collections_abc.py:995(__reversed__)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:162(_mean)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:38(_amax)
     [java]        80    0.000    0.000    0.001    0.000 _methods.py:60(_all)
     [java]         1    0.000    0.000    0.000    0.000 _methods.py:66(_count_reduce_items)
     [java]        19    0.000    0.000    0.000    0.000 _weakrefset.py:117(update)
     [java]        83    0.000    0.000    0.000    0.000 _weakrefset.py:17(__init__)
     [java]        83    0.000    0.000    0.000    0.000 _weakrefset.py:21(__enter__)
     [java]        83    0.000    0.000    0.000    0.000 _weakrefset.py:27(__exit__)
     [java]        84    0.000    0.000    0.000    0.000 _weakrefset.py:37(__init__)
     [java]        17    0.000    0.000    0.000    0.000 _weakrefset.py:39(_remove)
     [java]        64    0.000    0.000    0.000    0.000 _weakrefset.py:53(_commit_removals)
     [java]       122    0.000    0.000    0.000    0.000 _weakrefset.py:59(__iter__)
     [java]        41    0.000    0.000    0.000    0.000 _weakrefset.py:82(add)
     [java] 8781/5473    0.002    0.000    0.072    0.000 abc.py:100(__subclasscheck__)
     [java]   2458605    0.672    0.000    1.496    0.000 abc.py:96(__instancecheck__)
     [java]        42    0.000    0.000    0.017    0.000 activations.py:268(relu)
     [java]         2    0.000    0.000    0.001    0.000 activations.py:349(tanh)
     [java]         8    0.000    0.000    0.000    0.000 activations.py:452(linear)
     [java]        52    0.000    0.000    0.001    0.000 activations.py:504(deserialize)
     [java]        98    0.000    0.000    0.001    0.000 activations.py:539(get)
     [java]       9/3    0.000    0.000    0.000    0.000 activity.py:136(referenced)
     [java]       138    0.000    0.000    0.001    0.000 activity.py:186(finalize)
     [java]        14    0.000    0.000    0.000    0.000 activity.py:208(mark_param)
     [java]        14    0.000    0.000    0.000    0.000 activity.py:227(__init__)
     [java]         7    0.000    0.000    0.000    0.000 activity.py:241(__init__)
     [java]        82    0.000    0.000    0.000    0.000 activity.py:252(_in_constructor)
     [java]       297    0.001    0.000    0.003    0.000 activity.py:271(_track_symbol)
     [java]       138    0.000    0.000    0.001    0.000 activity.py:328(_enter_scope)
     [java]       138    0.000    0.000    0.001    0.000 activity.py:331(_exit_scope)
     [java]       137    0.000    0.000    0.002    0.000 activity.py:337(_exit_and_record_scope)
     [java]        46    0.000    0.000    0.010    0.000 activity.py:342(_process_statement)
     [java]         1    0.000    0.000    0.000    0.000 activity.py:382(visit_Raise)
     [java]         7    0.000    0.000    0.001    0.000 activity.py:385(visit_Return)
     [java]        33    0.000    0.000    0.008    0.000 activity.py:388(visit_Assign)
     [java]       215    0.000    0.000    0.002    0.000 activity.py:417(visit_Name)
     [java]     82/75    0.000    0.000    0.004    0.000 activity.py:436(visit_Attribute)
     [java]     58/42    0.000    0.000    0.008    0.000 activity.py:461(visit_Call)
     [java]        56    0.000    0.000    0.001    0.000 activity.py:548(_visit_node_list)
     [java]        56    0.000    0.000    0.001    0.000 activity.py:549(<listcomp>)
     [java]         7    0.000    0.000    0.000    0.000 activity.py:551(_visit_arg_annotations)
     [java]        14    0.000    0.000    0.001    0.000 activity.py:559(_visit_arg_declarations)
     [java]         7    0.000    0.000    0.013    0.002 activity.py:569(visit_FunctionDef)
     [java]         5    0.000    0.000    0.009    0.002 activity.py:649(visit_With)
     [java]         5    0.000    0.000    0.001    0.000 activity.py:655(visit_withitem)
     [java]         1    0.000    0.000    0.000    0.000 activity.py:697(visit_ExceptHandler)
     [java]         7    0.000    0.000    0.013    0.002 activity.py:708(resolve)
     [java]       145    0.000    0.000    0.001    0.000 activity.py:98(__init__)
     [java]         2    0.000    0.000    0.000    0.000 adam.py:107(__init__)
     [java]         2    0.000    0.000    1.222    0.611 adam.py:123(_create_slots)
     [java]         2    0.000    0.000    2.979    1.490 adam.py:156(set_weights)
     [java]        48    0.000    0.000    0.017    0.000 advanced_activations.py:68(__init__)
     [java]        48    0.000    0.000    0.025    0.001 advanced_activations.py:73(call)
     [java]        52    0.000    0.000    0.000    0.000 ag_ctx.py:29(_control_ctx)
     [java]        22    0.000    0.000    0.000    0.000 ag_ctx.py:35(control_status_ctx)
     [java]         1    0.000    0.000    0.000    0.000 ag_ctx.py:49(__init__)
     [java]        10    0.000    0.000    0.000    0.000 ag_ctx.py:53(__enter__)
     [java]        10    0.000    0.000    0.000    0.000 ag_ctx.py:61(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 ag_ctx.py:76(_default_control_status_ctx)
     [java]        56    0.000    0.000    0.000    0.000 ag_logging.py:114(get_verbosity)
     [java]        56    0.000    0.000    0.000    0.000 ag_logging.py:121(has_verbosity)
     [java]        53    0.000    0.000    0.000    0.000 ag_logging.py:138(log)
     [java]      2936    0.002    0.000    0.003    0.000 anno.py:127(getanno)
     [java]      9796    0.005    0.000    0.009    0.000 anno.py:134(hasanno)
     [java]      1731    0.002    0.000    0.003    0.000 anno.py:138(setanno)
     [java]      3882    0.001    0.000    0.005    0.000 anno.py:156(copyanno)
     [java]         1    0.000    0.000    0.001    0.001 anno.py:165(dup)
     [java]         2    0.000    0.000    0.000    0.000 api.py:169(__init__)
     [java]        78    0.000    0.000    0.000    0.000 api.py:172(get_effective_source_map)
     [java]         1    0.000    0.000    0.000    0.000 api.py:228(get_transformed_name)
     [java]         1    0.000    0.000    0.000    0.000 api.py:231(get_extra_locals)
     [java]         2    0.000    0.000    0.000    0.000 api.py:234(get_caching_key)
     [java]         1    0.000    0.000    0.005    0.005 api.py:237(initial_analysis)
     [java]         1    0.000    0.000    0.070    0.070 api.py:250(transform_ast)
     [java]         2    0.000    0.000    0.115    0.058 api.py:275(_convert_actual)
     [java]        22    0.000    0.000    0.000    0.000 api.py:298(autograph_artifact)
     [java]        22    0.000    0.000    0.000    0.000 api.py:306(is_autograph_artifact)
     [java]     24/10    0.000    0.000    0.187    0.019 api.py:310(converted_call)
     [java]        22    0.000    0.000    0.069    0.003 api.py:469(_call_unconverted)
     [java]        12    0.000    0.000    0.001    0.000 api.py:509(tf_convert)
     [java]        11    0.000    0.000    0.000    0.000 api.py:629(convert)
     [java]        11    0.000    0.000    0.000    0.000 api.py:656(decorator)
     [java]        10    0.000    0.000    0.187    0.019 api.py:659(wrapper)
     [java]         6    0.000    0.000    0.010    0.002 array_ops.py:1051(slice)
     [java]         6    0.000    0.000    0.003    0.001 array_ops.py:1416(_autopacking_helper)
     [java]         6    0.000    0.000    0.000    0.000 array_ops.py:1466(_get_dtype_from_nested_lists)
     [java]        68    0.000    0.000    0.001    0.000 array_ops.py:1502(_should_not_autopack)
     [java]       280    0.000    0.000    0.000    0.000 array_ops.py:1508(<genexpr>)
     [java]        68    0.000    0.000    0.004    0.000 array_ops.py:1512(_autopacking_conversion_function)
     [java]         4    0.000    0.000    0.005    0.001 array_ops.py:1585(concat)
     [java]        96    0.000    0.000    0.065    0.001 array_ops.py:200(fill)
     [java]       510    0.001    0.000    0.199    0.000 array_ops.py:244(identity)
     [java]       482    0.002    0.000    0.226    0.000 array_ops.py:2802(_constant_if_small)
     [java]       392    0.000    0.000    0.362    0.001 array_ops.py:2818(wrapped)
     [java]       392    0.004    0.000    0.361    0.001 array_ops.py:2826(zeros)
     [java]        92    0.001    0.000    0.053    0.001 array_ops.py:3081(ones)
     [java]       532    0.001    0.000    0.223    0.000 array_ops.py:3137(placeholder)
     [java]         1    0.000    0.000    0.001    0.001 array_ops.py:3182(placeholder_with_default)
     [java]         2    0.000    0.000    0.001    0.001 array_ops.py:4488(where_v2)
     [java]         4    0.000    0.000    0.002    0.001 array_ops.py:573(shape_v2)
     [java]        10    0.000    0.000    0.006    0.001 array_ops.py:59(reshape)
     [java]        10    0.000    0.000    0.005    0.001 array_ops.py:625(shape)
     [java]        10    0.000    0.000    0.005    0.001 array_ops.py:652(shape_internal)
     [java]         8    0.000    0.000    0.004    0.000 array_ops.py:734(size)
     [java]         8    0.000    0.000    0.003    0.000 array_ops.py:766(size_internal)
     [java]         8    0.000    0.000    0.000    0.000 array_ops.py:799(<genexpr>)
     [java]        14    0.000    0.000    0.006    0.000 array_ops.py:804(rank)
     [java]        14    0.000    0.000    0.006    0.000 array_ops.py:840(rank_internal)
     [java]         1    0.000    0.000    0.001    0.001 ascii.py:1(<module>)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:13(Codec)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:20(IncrementalEncoder)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:24(IncrementalDecoder)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:28(StreamWriter)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:31(StreamReader)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:34(StreamConverter)
     [java]         1    0.000    0.000    0.000    0.000 ascii.py:41(getregentry)
     [java]       258    0.001    0.000    0.001    0.000 ast.py:175(copy_location)
     [java]     17364    0.005    0.000    0.006    0.000 ast.py:244(iter_fields)
     [java]       169    0.000    0.000    0.000    0.000 ast.py:256(iter_child_nodes)
     [java]        36    0.000    0.000    0.001    0.000 ast.py:33(parse)
     [java]        86    0.000    0.000    0.000    0.000 ast.py:369(walk)
     [java]   6151/40    0.005    0.000    0.084    0.002 ast.py:403(visit)
     [java]    751/22    0.002    0.000    0.006    0.000 ast.py:409(generic_visit)
     [java]       231    0.001    0.000    0.002    0.000 ast.py:419(visit_Constant)
     [java]   4208/77    0.010    0.000    0.066    0.001 ast.py:477(generic_visit)
     [java]       181    0.000    0.000    0.003    0.000 ast3.py:173(visit_Name)
     [java]         6    0.000    0.000    0.000    0.000 ast3.py:183(visit_arg)
     [java]         2    0.000    0.000    0.000    0.000 ast3.py:198(visit_ExceptHandler)
     [java]         9    0.000    0.000    0.000    0.000 ast3.py:272(_make_arg)
     [java]        68    0.000    0.000    0.001    0.000 ast3.py:288(visit_Name)
     [java]         1    0.000    0.000    0.000    0.000 ast3.py:296(visit_ExceptHandler)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:416(visit_arguments)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:418(<listcomp>)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:424(<listcomp>)
     [java]         3    0.000    0.000    0.000    0.000 ast3.py:425(<listcomp>)
     [java]        36    0.000    0.000    0.008    0.000 ast3.py:436(ast_to_gast)
     [java]         1    0.000    0.000    0.002    0.002 ast3.py:440(gast_to_ast)
     [java]       300    0.002    0.000    0.003    0.000 ast_util.py:283(parallel_walk)
     [java]        66    0.000    0.000    0.000    0.000 ast_util.py:33(__init__)
     [java]   1514/66    0.005    0.000    0.013    0.000 ast_util.py:37(copy)
     [java]    154/23    0.000    0.000    0.011    0.000 ast_util.py:41(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 ast_util.py:43(<genexpr>)
     [java]        66    0.000    0.000    0.013    0.000 ast_util.py:63(copy_clean)
     [java]    372/76    0.000    0.000    0.010    0.000 astn.py:11(<listcomp>)
     [java]    778/37    0.002    0.000    0.011    0.000 astn.py:17(generic_visit)
     [java]   1977/78    0.001    0.000    0.010    0.000 astn.py:9(_visit)
     [java]       278    0.002    0.000    0.002    0.000 attrs.py:277(__contains__)
     [java]       560    0.001    0.000    0.001    0.000 attrs.py:51(__init__)
     [java]       282    0.014    0.000    0.022    0.000 attrs.py:56(__getitem__)
     [java]        92    0.002    0.000    0.013    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
     [java]       368    0.000    0.000    0.000    0.000 auto_control_deps_utils.py:54(<listcomp>)
     [java]       368    0.001    0.000    0.005    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
     [java]       368    0.000    0.000    0.001    0.000 auto_control_deps_utils.py:66(<listcomp>)
     [java]       274    0.000    0.000    0.000    0.000 autocast_variable.py:536(__init__)
     [java]       274    0.000    0.000    0.000    0.000 autocast_variable.py:541(__enter__)
     [java]       274    0.000    0.000    0.000    0.000 autocast_variable.py:545(__exit__)
     [java]       542    0.002    0.000    0.010    0.000 backend.py:1000(track_variable)
     [java]      8286    0.028    0.000    0.102    0.000 backend.py:1069(_get_variables)
     [java]      8286    1.274    0.000    7.556    0.001 backend.py:1078(_initialize_variables)
     [java]         4    0.001    0.000    0.269    0.067 backend.py:1089(<listcomp>)
     [java]         4    0.000    0.000    0.000    0.000 backend.py:1092(<listcomp>)
     [java]         6    0.000    0.000    0.005    0.001 backend.py:1179(placeholder)
     [java]        50    0.000    0.000    0.000    0.000 backend.py:1327(int_shape)
     [java]       530    0.001    0.000    0.002    0.000 backend.py:1387(dtype)
     [java]       100    0.000    0.000    0.001    0.000 backend.py:190(cast_to_floatx)
     [java]         2    0.000    0.000    0.002    0.001 backend.py:2323(mean)
     [java]        46    0.000    0.000    0.007    0.000 backend.py:339(learning_phase)
     [java]         2    0.000    0.000    1.679    0.839 backend.py:3630(batch_get_value)
     [java]         4    0.007    0.002    4.167    1.042 backend.py:3694(batch_set_value)
     [java]       170    0.000    0.000    0.000    0.000 backend.py:370(global_learning_phase_is_set)
     [java]        46    0.000    0.000    0.000    0.000 backend.py:374(_mark_func_graph_as_unsaveable)
     [java]         2    0.000    0.000    0.002    0.001 backend.py:3795(__init__)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:3832(<listcomp>)
     [java]         2    0.000    0.000    1.360    0.680 backend.py:3851(_make_callable)
     [java]      8280    0.024    0.000    0.024    0.000 backend.py:3900(_call_fetch_callbacks)
     [java]     16560    0.049    0.000    0.127    0.000 backend.py:3905(_eval_if_composite)
     [java]      8280    0.221    0.000   36.393    0.004 backend.py:3919(__call__)
     [java]         1    0.000    0.000    0.001    0.001 backend.py:399(_default_learning_phase)
     [java]         2    0.000    0.000    0.002    0.001 backend.py:4042(function)
     [java]        90    0.001    0.000    0.041    0.000 backend.py:4661(relu)
     [java]      8285    0.009    0.000    0.058    0.000 backend.py:588(_current_graph)
     [java]      8286    0.036    0.000    0.910    0.000 backend.py:593(_get_session)
     [java]      8286    0.048    0.000    8.972    0.001 backend.py:618(get_session)
     [java]         2    0.000    0.000    0.000    0.000 backend.py:6426(cast_variables_to_tensor)
     [java]         4    0.000    0.000    0.000    0.000 backend.py:6428(_cast_variables_to_tensor)
     [java]        46    0.000    0.000    0.000    0.000 backend.py:6521(_key)
     [java]      8986    0.013    0.000    0.046    0.000 backend.py:653(get_graph)
     [java]     17160    0.015    0.000    0.038    0.000 backend.py:6540(_get_recursive)
     [java]     17160    0.012    0.000    0.051    0.000 backend.py:6553(__getitem__)
     [java]         1    0.000    0.000    0.000    0.000 backend.py:710(get_default_session_config)
     [java]         4    0.000    0.000    0.000    0.000 backend.py:852(is_sparse)
     [java]       391    0.000    0.000    0.001    0.000 backend.py:909(name_scope)
     [java]       196    0.000    0.000    0.000    0.000 backend_config.py:67(floatx)
     [java]      6399    0.005    0.000    0.010    0.000 backprop.py:170(_must_record_gradient)
     [java]       804    0.000    0.000    0.000    0.000 base.py:102(_lapl)
     [java]      1366    0.002    0.000    0.003    0.000 base.py:114(_e)
     [java]     16560    0.007    0.000    0.013    0.000 base.py:1205(isspmatrix)
     [java]      5348    0.001    0.000    0.001    0.000 base.py:241(id)
     [java]       556    0.002    0.000    0.004    0.000 base.py:267(attrs)
     [java]       806    0.000    0.000    0.000    0.000 base.py:274(__init__)
     [java]         2    0.001    0.001    0.001    0.001 base.py:38(is_hdf5)
     [java]         6    0.000    0.000    0.000    0.000 base.py:496(no_automatic_dependency_tracking)
     [java] 57800/57136    0.149    0.000    1.641    0.000 base.py:513(_method_wrapper)
     [java]      1404    0.001    0.000    0.003    0.000 base.py:638(_maybe_initialize_trackable)
     [java]       302    0.000    0.000    0.000    0.000 base.py:723(_deferred_dependencies)
     [java]       546    0.000    0.000    0.000    0.000 base.py:738(_lookup_dependency)
     [java]       254    0.002    0.000    1.044    0.004 base.py:752(_add_variable_with_custom_getter)
     [java]       808    0.007    0.000    0.007    0.000 base.py:85(is_empty_dataspace)
     [java]       546    0.002    0.000    0.016    0.000 base.py:859(_track_trackable)
     [java]       302    0.001    0.000    0.004    0.000 base.py:913(_handle_deferred_dependencies)
     [java]       270    0.000    0.000    0.000    0.000 base_layer.py:1257(supports_masking)
     [java]       300    0.000    0.000    0.007    0.000 base_layer.py:1262(supports_masking)
     [java]         2    0.000    0.000    0.001    0.000 base_layer.py:1606(_clear_losses)
     [java]       170    0.001    0.000    0.030    0.000 base_layer.py:2623(_set_connectivity_metadata)
     [java]       170    0.000    0.000    0.000    0.000 base_layer.py:2628(<setcomp>)
     [java]       716    0.001    0.000    0.001    0.000 base_layer.py:2823(__setattr__)
     [java]   6476504    9.437    0.000   19.533    0.000 base_layer.py:2913(_flatten_layers)
     [java]       178    0.001    0.000    0.006    0.000 base_layer.py:302(_instrument_layer_creation)
     [java]         7    0.000    0.000    0.025    0.004 base_layer.py:704(from_config)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_utils.py:161(have_all_keras_metadata)
     [java]       360    0.000    0.000    0.000    0.000 base_layer_utils.py:162(<genexpr>)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_utils.py:282(unnest_if_single_tensor)
     [java]       360    0.001    0.000    0.002    0.000 base_layer_utils.py:293(needs_keras_history)
     [java]       740    0.000    0.000    0.000    0.000 base_layer_utils.py:314(<genexpr>)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_utils.py:322(is_in_keras_graph)
     [java]         4    0.000    0.000    0.000    0.000 base_layer_utils.py:327(is_in_eager_or_tf_function)
     [java]         4    0.000    0.000    0.000    0.000 base_layer_utils.py:332(is_in_tf_function)
     [java]       940    0.001    0.000    0.001    0.000 base_layer_utils.py:411(call_context)
     [java]         1    0.000    0.000    0.000    0.000 base_layer_utils.py:438(__init__)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_utils.py:453(enter)
     [java]        92    0.000    0.000    0.000    0.000 base_layer_utils.py:475(layer)
     [java]        92    0.000    0.000    0.000    0.000 base_layer_utils.py:479(inputs)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_utils.py:487(training)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_utils.py:502(in_keras_graph)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_utils.py:515(__init__)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_utils.py:520(__enter__)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_utils.py:536(__exit__)
     [java]       254    0.002    0.000    1.003    0.004 base_layer_utils.py:54(make_variable)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_utils.py:553(is_subclassed)
     [java]       188    0.000    0.000    0.000    0.000 base_layer_utils.py:762(v2_dtype_behavior_enabled)
     [java]       296    0.000    0.000    0.000    0.000 base_layer_utils.py:849(is_split_variable)
     [java]    118546    0.062    0.000    0.176    0.000 base_layer_utils.py:854(has_weights)
     [java]       104    0.001    0.000    0.350    0.003 base_layer_v1.py:1054(_tag_unconditional)
     [java]   2136240    2.519    0.000   10.054    0.000 base_layer_v1.py:1103(metrics)
     [java]        96    0.001    0.000    0.431    0.004 base_layer_v1.py:1178(add_update)
     [java]         4    0.000    0.000    0.000    0.000 base_layer_v1.py:1223(<listcomp>)
     [java]    188/96    0.001    0.000    0.429    0.004 base_layer_v1.py:1225(process_update)
     [java]        92    0.000    0.000    0.429    0.005 base_layer_v1.py:1235(<lambda>)
     [java]        96    0.000    0.000    0.429    0.004 base_layer_v1.py:1248(<listcomp>)
     [java]         4    0.000    0.000    0.381    0.095 base_layer_v1.py:1394(get_losses_for)
     [java]         2    0.000    0.000    0.000    0.000 base_layer_v1.py:1405(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 base_layer_v1.py:1408(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 base_layer_v1.py:1411(<listcomp>)
     [java]       178    0.004    0.000    0.040    0.000 base_layer_v1.py:151(__init__)
     [java]         2    0.000    0.000    0.000    0.000 base_layer_v1.py:1567(input)
     [java]         1    0.000    0.000    0.001    0.001 base_layer_v1.py:16(<module>)
     [java]         2    0.000    0.000    0.002    0.001 base_layer_v1.py:1743(trainable_variables)
     [java]      1114    0.000    0.000    0.000    0.000 base_layer_v1.py:1755(_inbound_nodes)
     [java]       190    0.000    0.000    0.000    0.000 base_layer_v1.py:1764(_outbound_nodes)
     [java]       178    0.001    0.000    0.004    0.000 base_layer_v1.py:1773(_set_dtype_policy)
     [java]       216    0.000    0.000    0.000    0.000 base_layer_v1.py:1805(_compute_dtype)
     [java]       170    0.001    0.000    0.006    0.000 base_layer_v1.py:1818(_maybe_cast_inputs)
     [java]       190    0.001    0.000    0.002    0.000 base_layer_v1.py:1833(f)
     [java]        16    0.000    0.000    0.000    0.000 base_layer_v1.py:1853(_dtype)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_v1.py:1865(_name_scope)
     [java]       176    0.000    0.000    0.000    0.000 base_layer_v1.py:1868(_init_set_name)
     [java]        52    0.000    0.000    0.001    0.000 base_layer_v1.py:1923(_handle_weight_regularization)
     [java]       104    0.000    0.000    0.349    0.003 base_layer_v1.py:1926(_loss_for_variable)
     [java]       170    0.000    0.000    0.000    0.000 base_layer_v1.py:1938(_handle_activity_regularization)
     [java]       170    0.001    0.000    0.003    0.000 base_layer_v1.py:1955(_set_mask_metadata)
     [java]       340    0.000    0.000    0.000    0.000 base_layer_v1.py:1960(<genexpr>)
     [java]        50    0.000    0.000    0.000    0.000 base_layer_v1.py:1972(<listcomp>)
     [java]       120    0.000    0.000    0.000    0.000 base_layer_v1.py:1978(<listcomp>)
     [java]       170    0.001    0.000    0.005    0.000 base_layer_v1.py:1995(_collect_input_masks)
     [java]       190    0.000    0.000    0.000    0.000 base_layer_v1.py:2003(<lambda>)
     [java]       340    0.001    0.000    0.002    0.000 base_layer_v1.py:2009(_call_arg_was_passed)
     [java]         2    0.000    0.000    0.000    0.000 base_layer_v1.py:2048(_get_node_attribute_at_index)
     [java]       170    0.002    0.000    1.053    0.006 base_layer_v1.py:2084(_maybe_build)
     [java]       360    0.000    0.000    0.002    0.000 base_layer_v1.py:2098(<genexpr>)
     [java]       190    0.000    0.000    0.000    0.000 base_layer_v1.py:2099(<lambda>)
     [java]     176/4    0.000    0.000    0.001    0.000 base_layer_v1.py:2128(_get_trainable_state)
     [java]     54808    0.118    0.000    0.985    0.000 base_layer_v1.py:2150(_obj_reference_counts)
     [java]     55880    0.025    0.000    0.046    0.000 base_layer_v1.py:2157(_maybe_create_attribute)
     [java]     27404    0.142    0.000    0.943    0.000 base_layer_v1.py:2174(__delattr__)
     [java] 149428/36984    0.501    0.000    2.498    0.000 base_layer_v1.py:2216(__setattr__)
     [java]        46    0.000    0.000    0.000    0.000 base_layer_v1.py:2258(<genexpr>)
     [java]       334    0.000    0.000    0.000    0.000 base_layer_v1.py:2281(<genexpr>)
     [java]       250    0.000    0.000    0.000    0.000 base_layer_v1.py:2285(<genexpr>)
     [java]      1328    0.002    0.000    0.009    0.000 base_layer_v1.py:2295(_gather_children_attribute)
     [java]      1328    0.001    0.000    0.006    0.000 base_layer_v1.py:2303(<genexpr>)
     [java]       178    0.001    0.000    0.015    0.000 base_layer_v1.py:2313(_init_call_fn_args)
     [java]       178    0.000    0.000    0.010    0.000 base_layer_v1.py:2325(_call_full_argspec)
     [java]       178    0.000    0.000    0.011    0.000 base_layer_v1.py:2332(_call_fn_args)
     [java]       176    0.000    0.000    0.000    0.000 base_layer_v1.py:2349(_call_accepts_kwargs)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_v1.py:2354(_should_compute_mask)
     [java]      1332    0.002    0.000    0.002    0.000 base_layer_v1.py:2360(_dedup_weights)
     [java]         1    0.000    0.000    0.000    0.000 base_layer_v1.py:2408(KerasHistory)
     [java]       170    0.000    0.000    0.001    0.000 base_layer_v1.py:266(build)
     [java]       244    0.003    0.000    1.022    0.004 base_layer_v1.py:319(add_weight)
     [java]       165    0.002    0.000    0.234    0.001 base_layer_v1.py:518(from_config)
     [java]       100    0.000    0.000    0.000    0.000 base_layer_v1.py:619(compute_mask)
     [java]       170    0.006    0.000    3.423    0.020 base_layer_v1.py:641(__call__)
     [java]       360    0.000    0.000    0.000    0.000 base_layer_v1.py:692(<genexpr>)
     [java]         1    0.000    0.000    0.001    0.001 base_layer_v1.py:76(Layer)
     [java]      8452    0.006    0.000    0.016    0.000 base_layer_v1.py:837(_assert_built_as_v1)
     [java]      8892    0.009    0.000    0.012    0.000 base_layer_v1.py:856(dtype)
     [java]      1398    0.000    0.000    0.000    0.000 base_layer_v1.py:860(name)
     [java]     16744    0.026    0.000    8.985    0.001 base_layer_v1.py:864(dynamic)
     [java]   1458852    0.601    0.000    8.731    0.000 base_layer_v1.py:866(<genexpr>)
     [java]      8452    0.012    0.000    4.466    0.001 base_layer_v1.py:868(stateful)
     [java]    728984    0.307    0.000    4.336    0.000 base_layer_v1.py:871(<genexpr>)
     [java]         4    0.000    0.000    0.000    0.000 base_layer_v1.py:873(stateful)
     [java]      1094    0.000    0.000    0.000    0.000 base_layer_v1.py:877(trainable)
     [java]       340    0.000    0.000    0.000    0.000 base_layer_v1.py:897(input_spec)
     [java]       154    0.000    0.000    0.001    0.000 base_layer_v1.py:901(input_spec)
     [java]       836    0.001    0.000    0.009    0.000 base_layer_v1.py:912(trainable_weights)
     [java]       492    0.001    0.000    0.004    0.000 base_layer_v1.py:920(non_trainable_weights)
     [java]       222    0.000    0.000    0.004    0.000 base_layer_v1.py:933(weights)
     [java]         4    0.001    0.000    0.353    0.088 base_layer_v1.py:962(losses)
     [java]        52    0.000    0.000    0.001    0.000 base_layer_v1.py:986(add_loss)
     [java]         1    0.000    0.000    0.004    0.004 break_statements.py:183(transform)
     [java]      9550    0.006    0.000    0.018    0.000 c_api_util.py:171(tf_buffer)
     [java]      8942    0.038    0.000    0.038    0.000 c_api_util.py:204(tf_output)
     [java]       185    0.000    0.000    0.005    0.000 c_api_util.py:49(__init__)
     [java]       184    0.000    0.000    0.000    0.000 c_api_util.py:96(__init__)
     [java]        27    0.000    0.000    0.000    0.000 cache.py:43(has)
     [java]        10    0.000    0.000    0.000    0.000 cache.py:50(__getitem__)
     [java]         5    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
     [java]        32    0.000    0.000    0.000    0.000 cache.py:92(_get_key)
     [java]         1    0.000    0.000    0.008    0.008 call_trees.py:108(visit_FunctionDef)
     [java]         1    0.000    0.000    0.008    0.008 call_trees.py:126(visit_With)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:131(_args_to_tuple)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:149(_kwargs_to_dict)
     [java]       9/7    0.000    0.000    0.008    0.001 call_trees.py:160(visit_Call)
     [java]         1    0.000    0.000    0.009    0.009 call_trees.py:211(transform)
     [java]         1    0.000    0.000    0.000    0.000 call_trees.py:44(__init__)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:59(__init__)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:64(_consume_args)
     [java]         9    0.000    0.000    0.000    0.000 call_trees.py:70(add_arg)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:82(finalize)
     [java]         7    0.000    0.000    0.000    0.000 call_trees.py:86(to_ast)
     [java]      8280    0.033    0.000    6.213    0.001 callbacks.py:136(set_callback_parameters)
     [java]     16560    0.044    0.000   12.923    0.001 callbacks.py:190(make_logs)
     [java]      8280    0.047    0.000    0.078    0.000 callbacks.py:205(__init__)
     [java]      8280    0.002    0.000    0.002    0.000 callbacks.py:237(<genexpr>)
     [java]      8280    0.002    0.000    0.002    0.000 callbacks.py:239(<genexpr>)
     [java]      8280    0.001    0.000    0.001    0.000 callbacks.py:241(<genexpr>)
     [java]      8280    0.002    0.000    0.002    0.000 callbacks.py:247(<listcomp>)
     [java]      8280    0.008    0.000    0.008    0.000 callbacks.py:254(_add_default_callbacks)
     [java]      8280    0.007    0.000    0.007    0.000 callbacks.py:276(set_params)
     [java]      8280    0.006    0.000    0.006    0.000 callbacks.py:281(set_model)
     [java]     16560    0.007    0.000    0.007    0.000 callbacks.py:288(_call_batch_hook)
     [java]      8280    0.011    0.000    0.016    0.000 callbacks.py:367(_call_begin_hook)
     [java]      8280    0.011    0.000    0.017    0.000 callbacks.py:376(_call_end_hook)
     [java]      8280    0.006    0.000    0.006    0.000 callbacks.py:568(on_predict_begin)
     [java]      8280    0.006    0.000    0.006    0.000 callbacks.py:585(on_predict_end)
     [java]      8280    0.005    0.000    0.007    0.000 callbacks.py:602(__iter__)
     [java]      8280    0.049    0.000    7.320    0.001 callbacks.py:74(configure_callbacks)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:174(__init__)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:201(reset)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:202(<dictcomp>)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:205(<dictcomp>)
     [java]         4    0.000    0.000    0.002    0.001 cfg.py:221(_visit_internal)
     [java]         3    0.000    0.000    0.002    0.001 cfg.py:245(visit_forward)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:248(visit_reverse)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:288(__init__)
     [java]         4    0.000    0.000    0.000    0.000 cfg.py:292(reset)
     [java]        17    0.000    0.000    0.000    0.000 cfg.py:333(_connect_nodes)
     [java]        19    0.000    0.000    0.000    0.000 cfg.py:348(_add_new_node)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:372(begin_statement)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:381(end_statement)
     [java]        16    0.000    0.000    0.000    0.000 cfg.py:391(add_ordinary_node)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:406(_add_jump_node)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:425(_connect_jump_to_finally_sections)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:438(add_exit_node)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:469(connect_raise_node)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:484(enter_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:496(exit_section)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:539(enter_cond_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:553(new_cond_branch)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:567(exit_cond_section)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:574(enter_except_section)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:599(build)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:653(__init__)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:662(_enter_lexical_scope)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:665(_exit_lexical_scope)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:669(_get_enclosing_finally_scopes)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:678(_get_enclosing_except_scopes)
     [java]        16    0.000    0.000    0.001    0.000 cfg.py:687(_process_basic_statement)
     [java]         3    0.000    0.000    0.000    0.000 cfg.py:691(_process_exit_statement)
     [java]        19    0.000    0.000    0.000    0.000 cfg.py:72(__init__)
     [java]         2    0.000    0.000    0.002    0.001 cfg.py:742(_process_function_def)
     [java]         2    0.000    0.000    0.002    0.001 cfg.py:767(visit_FunctionDef)
     [java]        19    0.000    0.000    0.000    0.000 cfg.py:77(freeze)
     [java]         2    0.000    0.000    0.000    0.000 cfg.py:773(visit_Return)
     [java]        13    0.000    0.000    0.001    0.000 cfg.py:785(visit_Assign)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:806(visit_Raise)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:900(visit_ExceptHandler)
     [java]         1    0.000    0.000    0.000    0.000 cfg.py:914(visit_Try)
     [java]         1    0.000    0.000    0.001    0.001 cfg.py:956(visit_With)
     [java]         2    0.000    0.000    0.002    0.001 cfg.py:964(build)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
     [java]         2    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
     [java]         2    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
     [java]        19    0.000    0.000    0.000    0.000 codecs.py:319(decode)
     [java]         1    0.000    0.000    0.000    0.000 codecs.py:94(__new__)
     [java]         4    0.000    0.000    0.000    0.000 compat.py:103(filename_encode)
     [java]     55751    0.029    0.000    0.057    0.000 compat.py:114(as_str)
     [java]     30719    0.026    0.000    0.047    0.000 compat.py:64(as_bytes)
     [java]     55751    0.020    0.000    0.028    0.000 compat.py:90(as_text)
     [java]     57960    0.053    0.000    0.149    0.000 composite_tensor_utils.py:31(is_composite_or_composite_value)
     [java]        92    0.001    0.000    0.020    0.000 cond_v2.py:1224(_set_read_only_resource_inputs_attr)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:1244(<listcomp>)
     [java]        92    0.000    0.000    0.172    0.002 cond_v2.py:196(_run_as_function_for_tape_gradients)
     [java]        92    0.003    0.000    1.128    0.012 cond_v2.py:227(_build_cond)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:292(<listcomp>)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:295(<listcomp>)
     [java]        92    0.001    0.000    0.171    0.002 cond_v2.py:303(make_op)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:306(<listcomp>)
     [java]        92    0.001    0.000    0.198    0.002 cond_v2.py:333(<listcomp>)
     [java]       184    0.005    0.000    0.276    0.001 cond_v2.py:476(_get_intermediates)
     [java]        92    0.000    0.000    0.015    0.000 cond_v2.py:492(_make_intermediates_match)
     [java]       276    0.000    0.000    0.000    0.000 cond_v2.py:511(<genexpr>)
     [java]        92    0.001    0.000    0.002    0.000 cond_v2.py:534(_make_inputs_match)
     [java]       184    0.000    0.000    0.000    0.000 cond_v2.py:562(<listcomp>)
     [java]        92    0.002    0.000    1.712    0.019 cond_v2.py:63(cond_v2)
     [java]        92    0.001    0.000    0.002    0.000 cond_v2.py:657(_make_indexed_slices_indices_types_match)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:666(<listcomp>)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:670(<listcomp>)
     [java]       552    0.000    0.000    0.001    0.000 cond_v2.py:675(<genexpr>)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:721(_get_op_and_outputs)
     [java]        92    0.000    0.000    0.003    0.000 cond_v2.py:730(_pack_sequence_as)
     [java]       184    0.001    0.000    0.323    0.002 cond_v2.py:757(_wrap_intermediates)
     [java]       184    0.001    0.000    0.308    0.002 cond_v2.py:759(<listcomp>)
     [java]       184    0.001    0.000    0.014    0.000 cond_v2.py:777(_create_none_optionals)
     [java]       184    0.000    0.000    0.000    0.000 cond_v2.py:788(<listcomp>)
     [java]       184    0.002    0.000    0.004    0.000 cond_v2.py:798(_check_same_outputs)
     [java]        92    0.001    0.000    0.005    0.000 cond_v2.py:842(_get_output_shapes)
     [java]        92    0.001    0.000    0.004    0.000 cond_v2.py:852(_copy_handle_data)
     [java]        92    0.001    0.000    0.001    0.000 cond_v2.py:878(verify_captures)
     [java]        92    0.000    0.000    0.000    0.000 cond_v2.py:884(<dictcomp>)
     [java]         1    0.000    0.000    0.002    0.002 conditional_expressions.py:48(transform)
     [java]       196    0.000    0.000    0.000    0.000 config_lib.py:33(matches)
     [java]       186    0.000    0.000    0.000    0.000 config_lib.py:50(get_action)
     [java]        10    0.000    0.000    0.000    0.000 config_lib.py:62(get_action)
     [java]         2    0.000    0.000    0.000    0.000 connection.py:122(__init__)
     [java]         1    0.000    0.000    0.000    0.000 connection.py:521(Pipe)
     [java]      1207    0.003    0.000    0.543    0.000 constant_op.py:166(constant)
     [java]      1207    0.022    0.000    0.540    0.000 constant_op.py:268(_constant_impl)
     [java]        62    0.000    0.000    0.029    0.000 constant_op.py:336(_constant_tensor_conversion_function)
     [java]        92    0.000    0.000    0.050    0.001 constant_op.py:348(_tensor_shape_tensor_conversion_function)
     [java]       532    0.000    0.000    0.000    0.000 constraints.py:299(get)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1037(_compute_gpu_options)
     [java]       184    0.000    0.000    0.098    0.001 context.py:1085(function_call_options)
     [java]         1    0.000    0.000    0.009    0.009 context.py:110(SimpleQueue)
     [java]         1    0.000    0.000    0.000    0.000 context.py:116(__init__)
     [java]      9240    0.020    0.000    0.020    0.000 context.py:1233(op_callbacks)
     [java]         4    0.000    0.000    0.097    0.024 context.py:1245(_initialize_physical_devices)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1254(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1257(<dictcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1262(<dictcomp>)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1269(list_physical_devices)
     [java]         2    0.000    0.000    0.000    0.000 context.py:1287(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 context.py:1320(_import_config)
     [java]       184    0.000    0.000    0.000    0.000 context.py:133(executor_type)
     [java]         1    0.000    0.000    0.000    0.000 context.py:137(executor_type)
     [java]         1    0.000    0.000    0.000    0.000 context.py:145(config_proto_serialized)
     [java]     77622    0.016    0.000    0.016    0.000 context.py:1737(context_switches)
     [java]    224685    0.034    0.000    0.034    0.000 context.py:1849(context_safe)
     [java]         3    0.000    0.000    0.000    0.000 context.py:187(get_context)
     [java]    103549    0.093    0.000    0.224    0.000 context.py:1874(executing_eagerly)
     [java]         2    0.000    0.000    0.000    0.000 context.py:197(get_start_method)
     [java]     31637    0.030    0.000    0.084    0.000 context.py:2024(graph_mode)
     [java]     31637    0.048    0.000    0.085    0.000 context.py:212(push)
     [java]     31637    0.023    0.000    0.028    0.000 context.py:232(pop)
     [java]         1    0.000    0.000    0.000    0.000 context.py:233(get_context)
     [java]       102    0.000    0.000    0.000    0.000 context.py:2401(_tmp_in_graph_mode)
     [java]         2    0.000    0.000    0.005    0.002 context.py:65(Lock)
     [java]     63274    0.111    0.000    0.111    0.000 context.py:797(_mode)
     [java]    105149    0.116    0.000    0.116    0.000 context.py:815(executing_eagerly)
     [java]         2    0.000    0.000    0.097    0.049 context.py:926(config)
     [java]        26    0.000    0.000    0.000    0.000 context.py:963(rewriter_toggle)
     [java]         4    0.000    0.000    0.000    0.000 context.py:973(rewriter_bool)
     [java] 134105/60901    0.091    0.000    1.150    0.000 contextlib.py:112(__enter__)
     [java] 134105/61019    0.118    0.000    0.505    0.000 contextlib.py:121(__exit__)
     [java]      1656    0.004    0.000    0.015    0.000 contextlib.py:215(contextmanager)
     [java]    134105    0.088    0.000    0.306    0.000 contextlib.py:242(helper)
     [java]    134105    0.191    0.000    0.218    0.000 contextlib.py:86(__init__)
     [java]         1    0.000    0.000    0.001    0.001 continue_statements.py:119(_visit_non_loop_body)
     [java]         1    0.000    0.000    0.001    0.001 continue_statements.py:145(visit_With)
     [java]         1    0.000    0.000    0.004    0.004 continue_statements.py:163(transform)
     [java]         1    0.000    0.000    0.000    0.000 continue_statements.py:31(__init__)
     [java]         2    0.000    0.000    0.000    0.000 continue_statements.py:54(__init__)
     [java]         5    0.000    0.000    0.000    0.000 continue_statements.py:79(_postprocess_statement)
     [java]         1    0.000    0.000    0.017    0.017 control_flow.py:408(transform)
     [java]         1    0.000    0.000    0.002    0.002 control_flow.py:51(visit_FunctionDef)
     [java]        92    0.000    0.000    1.713    0.019 control_flow_ops.py:1100(cond)
     [java]         4    0.000    0.000    0.007    0.002 control_flow_ops.py:2861(_GroupControlDeps)
     [java]         6    0.000    0.000    0.012    0.002 control_flow_ops.py:2871(group)
     [java]        46    0.000    0.000    0.001    0.000 control_flow_util.py:118(constant_value)
     [java]      9163    0.005    0.000    0.006    0.000 control_flow_util.py:180(GetOutputContext)
     [java]       276    0.000    0.000    0.000    0.000 control_flow_util.py:213(GetContainingXLAContext)
     [java]      9163    0.011    0.000    0.018    0.000 control_flow_util.py:266(CheckInputFromValidContext)
     [java]        92    0.000    0.000    0.000    0.000 control_flow_util.py:50(EnableControlFlowV2)
     [java]       276    0.000    0.000    0.000    0.000 control_flow_util.py:68(InXlaContext)
     [java]       276    0.001    0.000    0.001    0.000 control_flow_util.py:73(GraphOrParentsInXlaContext)
     [java]        92    0.000    0.000    1.729    0.019 control_flow_util.py:92(smart_cond)
     [java]        92    0.000    0.000    0.000    0.000 control_flow_util_v2.py:131(maybe_propagate_compile_time_consts_in_xla)
     [java]        92    0.000    0.000    0.000    0.000 control_flow_util_v2.py:240(_is_tpu_strategy)
     [java]        92    0.000    0.000    0.000    0.000 control_flow_util_v2.py:245(_is_building_keras_layer)
     [java]        92    0.001    0.000    0.100    0.001 control_flow_util_v2.py:254(output_all_intermediates)
     [java]        92    0.000    0.000    0.001    0.000 control_flow_util_v2.py:44(in_defun)
     [java]       184    0.001    0.000    0.087    0.000 control_flow_util_v2.py:63(create_new_tf_function)
     [java]       184    0.000    0.000    0.001    0.000 control_flow_util_v2.py:78(unique_fn_name)
     [java]        92    0.001    0.000    0.003    0.000 control_flow_util_v2.py:95(maybe_set_lowering_attr)
     [java]       184    0.001    0.000    0.027    0.000 control_flow_v2_func_graphs.py:28(__init__)
     [java]        50    0.000    0.000    0.000    0.000 conv_utils.py:189(normalize_data_format)
     [java]        46    0.000    0.000    0.000    0.000 conv_utils.py:200(normalize_padding)
     [java]        46    0.000    0.000    0.000    0.000 conv_utils.py:28(convert_data_format)
     [java]       138    0.000    0.000    0.000    0.000 conv_utils.py:51(normalize_tuple)
     [java]     12/10    0.000    0.000    0.001    0.000 conversion.py:116(is_allowlisted)
     [java]        24    0.000    0.000    0.000    0.000 conversion.py:221(is_in_allowlist_cache)
     [java]         8    0.000    0.000    0.000    0.000 conversion.py:229(cache_allowlisted)
     [java]        50    0.000    0.000    0.000    0.000 conversion.py:37(_is_of_known_loaded_module)
     [java]        50    0.000    0.000    0.000    0.000 conversion.py:41(<genexpr>)
     [java]        30    0.000    0.000    0.000    0.000 conversion.py:46(_is_known_loaded_type)
     [java]        10    0.000    0.000    0.000    0.000 conversion.py:73(is_unsupported)
     [java]        60    0.000    0.000    0.000    0.000 conversion.py:99(<genexpr>)
     [java]        12    0.000    0.000    0.000    0.000 converter.py:152(__init__)
     [java]        57    0.000    0.000    0.000    0.000 converter.py:169(as_tuple)
     [java]        25    0.000    0.000    0.000    0.000 converter.py:173(__hash__)
     [java]        16    0.000    0.000    0.000    0.000 converter.py:176(__eq__)
     [java]         7    0.000    0.000    0.000    0.000 converter.py:183(uses)
     [java]         2    0.000    0.000    0.000    0.000 converter.py:187(call_options)
     [java]         1    0.000    0.000    0.000    0.000 converter.py:195(to_ast)
     [java]         2    0.000    0.000    0.000    0.000 converter.py:244(__init__)
     [java]        11    0.000    0.000    0.000    0.000 converter.py:256(__init__)
     [java]   1427/11    0.002    0.000    0.038    0.003 converter.py:311(visit)
     [java]        46    0.001    0.000    0.055    0.001 convolutional.py:112(__init__)
     [java]        46    0.000    0.000    0.000    0.000 convolutional.py:170(_validate_init)
     [java]        46    0.001    0.000    0.320    0.007 convolutional.py:186(build)
     [java]        46    0.000    0.000    0.073    0.002 convolutional.py:244(call)
     [java]        92    0.000    0.000    0.000    0.000 convolutional.py:351(_get_channel_axis)
     [java]        46    0.000    0.000    0.000    0.000 convolutional.py:357(_get_input_channel)
     [java]        46    0.001    0.000    0.067    0.001 convolutional.py:635(__init__)
     [java]         1    0.000    0.000    0.000    0.000 copy.py:128(deepcopy)
     [java]         1    0.000    0.000    0.000    0.000 copy.py:182(_deepcopy_atomic)
     [java]         6    0.000    0.000    0.006    0.001 core.py:1145(__init__)
     [java]         6    0.000    0.000    0.043    0.007 core.py:1173(build)
     [java]         6    0.000    0.000    0.007    0.001 core.py:1206(call)
     [java]         6    0.000    0.000    0.007    0.001 core.py:30(dense)
     [java]         4    0.000    0.000    0.001    0.000 core.py:655(__init__)
     [java]         4    0.000    0.000    0.004    0.001 core.py:661(call)
     [java] 27496/27404    0.034    0.000    0.105    0.000 data_structures.py:105(sticky_attribute_assignment)
     [java]        46    0.000    0.000    0.000    0.000 data_structures.py:142(__init__)
     [java]        46    0.000    0.000    0.000    0.000 data_structures.py:154(__init__)
     [java]        46    0.000    0.000    0.000    0.000 data_structures.py:175(_track_value)
     [java]       414    0.001    0.000    0.003    0.000 data_structures.py:197(_layers)
     [java]       414    0.001    0.000    0.004    0.000 data_structures.py:210(layers)
     [java]        46    0.000    0.000    0.001    0.000 data_structures.py:311(__init__)
     [java]        46    0.000    0.000    0.000    0.000 data_structures.py:332(_name_element)
     [java]   1143606    0.184    0.000    0.184    0.000 data_structures.py:335(_values)
     [java]   1144618    0.308    0.000    0.308    0.000 data_structures.py:379(__getitem__)
     [java]   2286476    0.841    0.000    1.152    0.000 data_structures.py:385(__len__)
     [java]        46    0.000    0.000    0.002    0.000 data_structures.py:416(__init__)
     [java]        46    0.000    0.000    0.000    0.000 data_structures.py:477(_make_storage)
     [java]       138    0.000    0.000    0.000    0.000 data_structures.py:590(__eq__)
     [java]        46    0.000    0.000    0.001    0.000 data_structures.py:637(_track_value)
     [java]       140    0.000    0.000    0.001    0.000 data_structures.py:68(_should_wrap_tuple)
     [java] 27780/27404    0.045    0.000    0.058    0.000 data_structures.py:82(wrap_or_unwrap)
     [java]      8280    0.014    0.000    0.016    0.000 data_utils.py:108(is_generator_or_sequence)
     [java]      1868    0.019    0.000    0.019    0.000 dataset.py:282(shape)
     [java]       236    0.005    0.000    0.005    0.000 dataset.py:301(dtype)
     [java]       526    0.019    0.000    0.022    0.000 dataset.py:395(__init__)
     [java]       282    0.000    0.000    0.000    0.000 dataset.py:41(readtime_dtype)
     [java]       526    0.033    0.000    0.070    0.000 dataset.py:710(read_direct)
     [java]       526    0.009    0.000    0.113    0.000 dataset.py:760(__array__)
     [java]         4    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
     [java]         4    0.000    0.000    0.003    0.001 decoder.py:332(decode)
     [java]         4    0.002    0.001    0.003    0.001 decoder.py:343(raw_decode)
     [java]     16574    0.004    0.000    0.004    0.000 def_function.py:394(functions_run_eagerly)
     [java]       102    0.001    0.000    1.757    0.017 deprecation.py:504(new_func)
     [java]         2    0.000    0.000    0.000    0.000 deprecation.py:614(deprecated_argument_lookup)
     [java]         1    0.000    0.000    0.000    0.000 device.py:117(__init__)
     [java]      1630    0.002    0.000    0.003    0.000 device.py:174(is_null_merge)
     [java]      1630    0.003    0.000    0.004    0.000 device.py:67(merge_device)
     [java]        46    0.000    0.000    0.000    0.000 device_context.py:21(enclosing_tpu_context)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:112(__init__)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:143(from_string)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:301(_string_to_components)
     [java]         2    0.000    0.000    0.000    0.000 device_spec.py:35(_as_str_or_none)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:351(_components_to_string)
     [java]         3    0.000    0.000    0.000    0.000 device_spec.py:39(_as_int_or_none)
     [java]         1    0.000    0.000    0.000    0.000 device_spec.py:43(_as_device_str_or_none)
     [java]      1631    0.001    0.000    0.001    0.000 device_spec.py:432(to_string)
     [java]        26    0.000    0.000    0.000    0.000 directives.py:117(visit_Name)
     [java]     11/10    0.000    0.000    0.000    0.000 directives.py:126(visit_Attribute)
     [java]         4    0.000    0.000    0.001    0.000 directives.py:134(visit_Assign)
     [java]         1    0.000    0.000    0.001    0.001 directives.py:180(transform)
     [java]         1    0.000    0.000    0.000    0.000 directives.py:50(__init__)
     [java] 11518/2278    0.009    0.000    8.657    0.004 dispatch.py:198(wrapper)
     [java]         6    0.000    0.000    0.000    0.000 distribute_lib.py:1506(num_replicas_in_sync)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:2039(__init__)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:2863(__init__)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:2991(strategy)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:3310(__init__)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:3363(__init__)
     [java]       288    0.000    0.000    0.005    0.000 distribute_lib.py:3371(colocate_vars_with)
     [java]       288    0.000    0.000    0.000    0.000 distribute_lib.py:3376(variable_created_in_scope)
     [java]       484    0.000    0.000    0.000    0.000 distribute_lib.py:3449(value_container)
     [java]         6    0.000    0.000    0.000    0.000 distribute_lib.py:3452(_num_replicas_in_sync)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:3482(_get_local_replica_id)
     [java]       288    0.000    0.000    0.001    0.000 distribute_lib.py:352(_require_strategy_scope_extended)
     [java]         1    0.000    0.000    0.000    0.000 distribute_lib.py:775(__init__)
     [java]      1349    0.000    0.000    0.000    0.000 distribute_lib.py:802(extended)
     [java]        12    0.000    0.000    0.000    0.000 distributed_training_utils.py:25(is_tpu_strategy)
     [java]         4    0.000    0.000    0.033    0.008 distributed_training_utils.py:38(call_replica_local_fn)
     [java]       557    0.000    0.000    0.004    0.000 distribution_strategy_context.py:180(get_strategy)
     [java]       165    0.000    0.000    0.001    0.000 distribution_strategy_context.py:200(has_strategy)
     [java]       484    0.000    0.000    0.003    0.000 distribution_strategy_context.py:216(get_strategy_and_replica_context)
     [java]       167    0.000    0.000    0.000    0.000 distribution_strategy_context.py:313(_get_default_strategy)
     [java]         1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:332(_get_default_replica_context)
     [java]      1333    0.001    0.000    0.001    0.000 distribution_strategy_context.py:344(_get_default_replica_mode)
     [java]         2    0.000    0.000    0.000    0.000 distribution_strategy_context.py:43(__init__)
     [java]         1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:57(__init__)
     [java]         1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:75(__init__)
     [java]      1333    0.004    0.000    0.007    0.000 distribution_strategy_context.py:80(_get_per_thread_mode)
     [java]         4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:91(get_replica_context)
     [java]         4    0.000    0.000    0.000    0.000 doc_controls.py:114(do_not_doc_inheritable)
     [java]         7    0.000    0.000    0.000    0.000 doc_controls.py:177(for_subclass_implementers)
     [java]         1    0.000    0.000    0.000    0.000 doc_controls.py:33(do_not_generate_docs)
     [java]      9718    0.010    0.000    0.010    0.000 dtypes.py:103(as_numpy_dtype)
     [java]     15879    0.035    0.000    0.076    0.000 dtypes.py:172(is_compatible_with)
     [java]     23522    0.036    0.000    0.045    0.000 dtypes.py:192(__eq__)
     [java]      7722    0.004    0.000    0.021    0.000 dtypes.py:205(__ne__)
     [java]     74213    0.135    0.000    0.170    0.000 dtypes.py:606(as_dtype)
     [java]     43187    0.033    0.000    0.033    0.000 dtypes.py:71(_is_ref_dtype)
     [java]     42553    0.020    0.000    0.052    0.000 dtypes.py:84(base_dtype)
     [java]         5    0.000    0.000    0.000    0.000 enum.py:22(_is_dunder)
     [java]      3600    0.003    0.000    0.005    0.000 enum.py:334(__call__)
     [java]         5    0.000    0.000    0.000    0.000 enum.py:391(__getattr__)
     [java]      3600    0.001    0.000    0.001    0.000 enum.py:646(__new__)
     [java]     10026    0.003    0.000    0.004    0.000 enum.py:745(__hash__)
     [java]       677    0.000    0.000    0.000    0.000 enum.py:763(value)
     [java]         3    0.000    0.000    0.000    0.000 enum.py:948(__and__)
     [java]      1530    0.001    0.000    0.002    0.000 errors_impl.py:123(__str__)
     [java]      1530    0.004    0.000    0.008    0.000 errors_impl.py:270(__init__)
     [java]      1530    0.004    0.000    0.004    0.000 errors_impl.py:70(__init__)
     [java]      1530    0.000    0.000    0.000    0.000 errors_impl.py:92(message)
     [java]       232    0.000    0.000    0.001    0.000 execute.py:159(make_float)
     [java]       478    0.000    0.000    0.000    0.000 execute.py:166(make_int)
     [java]      1268    0.001    0.000    0.003    0.000 execute.py:177(make_str)
     [java]       278    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
     [java]      3446    0.006    0.000    0.015    0.000 execute.py:191(make_type)
     [java]      1581    0.002    0.000    0.007    0.000 execute.py:201(make_shape)
     [java]         2    0.000    0.000    0.000    0.000 files.py:140(make_fcpl)
     [java]         2    0.001    0.000    0.001    0.000 files.py:153(make_fid)
     [java]         4    0.000    0.000    0.000    0.000 files.py:226(attrs)
     [java]         2    0.000    0.000    0.001    0.001 files.py:316(__init__)
     [java]         2    0.010    0.005    0.012    0.006 files.py:422(close)
     [java]         2    0.002    0.001    0.002    0.001 files.py:434(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 files.py:435(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 files.py:98(make_fapl)
     [java]       526    0.002    0.000    0.002    0.000 filters.py:246(get_filters)
     [java]      2944    0.001    0.000    0.001    0.000 fromnumeric.py:2155(_sum_dispatcher)
     [java]      2944    0.008    0.000    0.043    0.000 fromnumeric.py:2160(sum)
     [java]      2760    0.001    0.000    0.001    0.000 fromnumeric.py:2300(_any_dispatcher)
     [java]      2760    0.007    0.000    0.046    0.000 fromnumeric.py:2305(any)
     [java]      2760    0.001    0.000    0.001    0.000 fromnumeric.py:2491(_cumsum_dispatcher)
     [java]      2760    0.005    0.000    0.053    0.000 fromnumeric.py:2495(cumsum)
     [java]      3366    0.001    0.000    0.001    0.000 fromnumeric.py:2965(_prod_dispatcher)
     [java]      2314    0.004    0.000    0.045    0.000 fromnumeric.py:2970(prod)
     [java]      1052    0.001    0.000    0.023    0.000 fromnumeric.py:3776(product)
     [java]      2760    0.005    0.000    0.048    0.000 fromnumeric.py:51(_wrapfunc)
     [java]      8018    0.030    0.000    0.112    0.000 fromnumeric.py:69(_wrapreduction)
     [java]      8018    0.008    0.000    0.008    0.000 fromnumeric.py:70(<dictcomp>)
     [java]       184    0.000    0.000    0.001    0.000 func_graph.py:1020(<listcomp>)
     [java]       552    0.000    0.000    0.001    0.000 func_graph.py:1026(<genexpr>)
     [java]      1656    0.002    0.000    0.006    0.000 func_graph.py:1059(device_stack_has_callable)
     [java]      1656    0.001    0.000    0.001    0.000 func_graph.py:1061(<genexpr>)
     [java]       368    0.001    0.000    0.004    0.000 func_graph.py:1065(check_mutation)
     [java]       184    0.000    0.000    0.001    0.000 func_graph.py:1085(flatten)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:1096(<listcomp>)
     [java]        92    0.000    0.000    0.002    0.000 func_graph.py:1102(pack_sequence_as)
     [java]       460    0.003    0.000    0.162    0.000 func_graph.py:1127(_create_substitute_placeholder)
     [java]       184    0.000    0.000    0.004    0.000 func_graph.py:1140(_get_defun_inputs_from_args)
     [java]       368    0.001    0.000    0.008    0.000 func_graph.py:1152(_get_defun_inputs)
     [java]       184    0.000    0.000    0.004    0.000 func_graph.py:1265(_get_defun_inputs_from_kwargs)
     [java]       368    0.000    0.000    0.000    0.000 func_graph.py:131(<listcomp>)
     [java]       184    0.003    0.000    0.017    0.000 func_graph.py:166(__init__)
     [java]       368    0.001    0.000    0.004    0.000 func_graph.py:267(watch_variable)
     [java]       460    0.001    0.000    0.002    0.000 func_graph.py:323(control_dependencies)
     [java]      1656    0.005    0.000    0.044    0.000 func_graph.py:364(as_default)
     [java]      3312    0.016    0.000    0.088    0.000 func_graph.py:367(inner_cm)
     [java]      1288    0.001    0.000    0.001    0.000 func_graph.py:424(outer_graph)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:488(variables)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:490(<listcomp>)
     [java] 1656/1196    0.012    0.000    0.479    0.000 func_graph.py:525(_create_op_internal)
     [java]      1840    0.003    0.000    0.175    0.000 func_graph.py:594(capture)
     [java]       460    0.002    0.000    0.167    0.000 func_graph.py:643(_capture_helper)
     [java]       460    0.001    0.000    0.001    0.000 func_graph.py:668(add_capture)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:682(reset_captures)
     [java]       368    0.001    0.000    0.009    0.000 func_graph.py:70(convert_structure_to_signature)
     [java]       368    0.000    0.000    0.001    0.000 func_graph.py:739(external_captures)
     [java]       368    0.000    0.000    0.000    0.000 func_graph.py:742(<listcomp>)
     [java]       184    0.000    0.000    0.001    0.000 func_graph.py:744(internal_captures)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:747(<listcomp>)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:754(deferred_internal_captures)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:757(<listcomp>)
     [java]       184    0.006    0.000    0.549    0.003 func_graph.py:805(func_graph_from_py_func)
     [java]       184    0.000    0.000    0.000    0.000 func_graph.py:923(<listcomp>)
     [java]       368    0.001    0.000    0.040    0.000 func_graph.py:934(convert)
     [java]       184    0.007    0.000    0.065    0.000 function.py:422(__init__)
     [java]       644    0.000    0.000    0.000    0.000 function.py:432(<genexpr>)
     [java]       184    0.000    0.000    0.000    0.000 function.py:433(<listcomp>)
     [java]       184    0.000    0.000    0.000    0.000 function.py:451(<listcomp>)
     [java]       184    0.000    0.000    0.000    0.000 function.py:452(<listcomp>)
     [java]       184    0.000    0.000    0.000    0.000 function.py:453(<listcomp>)
     [java]       184    0.000    0.000    0.000    0.000 function.py:455(<listcomp>)
     [java]       184    0.001    0.000    0.001    0.000 function.py:484(<listcomp>)
     [java]       184    0.000    0.000    0.007    0.000 function.py:485(<listcomp>)
     [java]       552    0.000    0.000    0.000    0.000 function.py:494(<genexpr>)
     [java]       184    0.001    0.000    0.021    0.000 function.py:499(add_to_graph)
     [java]       368    0.000    0.000    0.000    0.000 function.py:511(name)
     [java]      5612    0.001    0.000    0.001    0.000 function_base.py:5333(_append_dispatcher)
     [java]      5612    0.009    0.000    0.096    0.000 function_base.py:5337(append)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
     [java]         2    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
     [java]         2    0.000    0.000    0.001    0.000 functional.py:1006(_build_map)
     [java]     194/4    0.001    0.000    0.001    0.000 functional.py:1037(_build_map_helper)
     [java]         2    0.000    0.000    0.073    0.036 functional.py:108(__init__)
     [java]       172    0.000    0.000    0.000    0.000 functional.py:1085(_should_skip_first_node)
     [java]         2    0.000    0.000    0.034    0.017 functional.py:1095(connect_ancillary_layers)
     [java]         2    0.000    0.000    0.034    0.017 functional.py:1098(<listcomp>)
     [java]         2    0.001    0.000    3.722    1.861 functional.py:1111(reconstruct_from_config)
     [java]       170    0.000    0.000    0.000    0.000 functional.py:1142(add_unprocessed_node)
     [java]       196    0.000    0.000    0.001    0.000 functional.py:1148(get_node_index)
     [java]       190    0.000    0.000    0.007    0.000 functional.py:1154(_deserialize_keras_tensors)
     [java]       170    0.002    0.000    3.438    0.020 functional.py:1184(process_node)
     [java]         2    0.000    0.000    0.072    0.036 functional.py:122(_init_graph_network)
     [java]       172    0.001    0.000    0.284    0.002 functional.py:1240(process_layer)
     [java]         6    0.000    0.000    0.000    0.000 functional.py:154(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:162(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:328(_set_output_names)
     [java]         2    0.000    0.000    0.004    0.002 functional.py:347(_layer_checkpoint_dependencies)
     [java]         2    0.000    0.000    0.004    0.002 functional.py:379(_lookup_dependency)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:503(_init_set_name)
     [java]         2    0.000    0.000    3.831    1.916 functional.py:652(from_config)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:675(_validate_graph_inputs_and_outputs)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:678(<setcomp>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:710(<listcomp>)
     [java]         2    0.001    0.000    0.002    0.001 functional.py:812(_compute_tensor_usage_count)
     [java]         4    0.000    0.000    0.000    0.000 functional.py:820(<genexpr>)
     [java]       170    0.000    0.000    0.000    0.000 functional.py:828(<setcomp>)
     [java]         4    0.000    0.000    0.000    0.000 functional.py:843(_assert_weights_created)
     [java]       172    0.000    0.000    0.000    0.000 functional.py:880(_make_node_key)
     [java]         2    0.001    0.001    0.004    0.002 functional.py:884(_map_graph_network)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:904(<setcomp>)
     [java]       172    0.000    0.000    0.000    0.000 functional.py:964(<lambda>)
     [java]         2    0.000    0.000    0.000    0.000 functional.py:997(<listcomp>)
     [java]         1    0.000    0.000    0.007    0.007 functions.py:134(transform)
     [java]         2    0.000    0.000    0.000    0.000 functions.py:34(__init__)
     [java]         1    0.000    0.000    0.000    0.000 functions.py:41(_function_scope_options)
     [java]         1    0.000    0.000    0.004    0.004 functions.py:81(visit_FunctionDef)
     [java]      1673    0.006    0.000    0.010    0.000 functools.py:35(update_wrapper)
     [java]         2    0.000    0.000    0.000    0.000 functools.py:420(_unwrap_partial)
     [java]      1662    0.002    0.000    0.002    0.000 functools.py:65(wraps)
     [java]      1506    0.003    0.000    0.004    0.000 gast.py:15(create_node)
     [java]        36    0.000    0.000    0.010    0.000 gast.py:299(parse)
     [java]         4    0.000    0.000    0.005    0.001 gen_array_ops.py:1170(concat_v2)
     [java]        96    0.001    0.000    0.064    0.001 gen_array_ops.py:3304(fill)
     [java]       510    0.003    0.000    0.194    0.000 gen_array_ops.py:3915(identity)
     [java]         6    0.000    0.000    0.003    0.000 gen_array_ops.py:6338(pack)
     [java]       532    0.005    0.000    0.220    0.000 gen_array_ops.py:6687(placeholder)
     [java]         1    0.000    0.000    0.001    0.001 gen_array_ops.py:6821(placeholder_with_default)
     [java]        10    0.000    0.000    0.006    0.001 gen_array_ops.py:8288(reshape)
     [java]        10    0.000    0.000    0.005    0.000 gen_array_ops.py:9133(shape)
     [java]         4    0.000    0.000    0.002    0.000 gen_array_ops.py:9276(size)
     [java]         6    0.000    0.000    0.010    0.002 gen_array_ops.py:9348(_slice)
     [java]         6    0.000    0.000    0.004    0.001 gen_control_flow_ops.py:464(no_op)
     [java]       644    0.004    0.000    0.307    0.000 gen_dataset_ops.py:4114(optional_from_value)
     [java]        46    0.001    0.000    0.049    0.001 gen_functional_ops.py:341(_if)
     [java]        46    0.000    0.000    0.002    0.000 gen_functional_ops.py:391(<listcomp>)
     [java]        46    0.000    0.000    0.002    0.000 gen_functional_ops.py:398(<listcomp>)
     [java]        46    0.001    0.000    0.029    0.001 gen_functional_ops.py:836(stateless_if)
     [java]        46    0.000    0.000    0.000    0.000 gen_functional_ops.py:889(<listcomp>)
     [java]        46    0.000    0.000    0.000    0.000 gen_functional_ops.py:896(<listcomp>)
     [java]       104    0.001    0.000    0.174    0.002 gen_math_ops.py:10132(square)
     [java]         2    0.000    0.000    0.001    0.001 gen_math_ops.py:10208(squared_difference)
     [java]       192    0.001    0.000    0.107    0.001 gen_math_ops.py:10285(sub)
     [java]       116    0.001    0.000    0.059    0.001 gen_math_ops.py:10344(_sum)
     [java]         2    0.000    0.000    0.001    0.000 gen_math_ops.py:10499(tanh)
     [java]         8    0.000    0.000    0.003    0.000 gen_math_ops.py:1807(cast)
     [java]        52    0.000    0.000    0.027    0.001 gen_math_ops.py:299(add)
     [java]         8    0.000    0.000    0.003    0.000 gen_math_ops.py:3070(div_no_nan)
     [java]         2    0.000    0.000    0.001    0.000 gen_math_ops.py:3130(equal)
     [java]         4    0.000    0.000    0.003    0.001 gen_math_ops.py:379(add_n)
     [java]        20    0.000    0.000    0.009    0.000 gen_math_ops.py:450(add_v2)
     [java]         6    0.000    0.000    0.006    0.001 gen_math_ops.py:5500(mat_mul)
     [java]         2    0.000    0.000    0.002    0.001 gen_math_ops.py:5739(mean)
     [java]       256    0.002    0.000    0.123    0.000 gen_math_ops.py:6046(mul)
     [java]         8    0.000    0.000    0.005    0.001 gen_math_ops.py:7157(_range)
     [java]         2    0.000    0.000    0.001    0.001 gen_math_ops.py:8714(select_v2)
     [java]        42    0.000    0.000    0.016    0.000 gen_nn_ops.py:10442(relu)
     [java]         2    0.000    0.000    0.001    0.000 gen_nn_ops.py:10890(softmax_cross_entropy_with_logits)
     [java]        92    0.001    0.000    0.268    0.003 gen_nn_ops.py:4206(fused_batch_norm_v3)
     [java]        48    0.000    0.000    0.022    0.000 gen_nn_ops.py:5073(leaky_relu)
     [java]        46    0.001    0.000    0.052    0.001 gen_nn_ops.py:860(conv2d)
     [java]        46    0.000    0.000    0.000    0.000 gen_nn_ops.py:947(<listcomp>)
     [java]        46    0.000    0.000    0.000    0.000 gen_nn_ops.py:958(<listcomp>)
     [java]        46    0.000    0.000    0.000    0.000 gen_nn_ops.py:968(<listcomp>)
     [java]         2    0.000    0.000    0.001    0.001 gen_random_ops.py:690(random_uniform)
     [java]        50    0.001    0.000    0.030    0.001 gen_random_ops.py:865(truncated_normal)
     [java]       542    0.007    0.000    0.337    0.001 gen_resource_variable_ops.py:1148(var_handle_op)
     [java]       542    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1202(<listcomp>)
     [java]      1068    0.005    0.000    0.429    0.000 gen_resource_variable_ops.py:122(assign_variable_op)
     [java]      1084    0.007    0.000    0.390    0.000 gen_resource_variable_ops.py:1250(var_is_initialized_op)
     [java]         8    0.000    0.000    0.003    0.000 gen_resource_variable_ops.py:24(assign_add_variable_op)
     [java]      1792    0.013    0.000    1.007    0.001 gen_resource_variable_ops.py:447(read_variable_op)
     [java]        92    0.000    0.000    0.045    0.000 gen_resource_variable_ops.py:73(assign_sub_variable_op)
     [java]      1012    0.001    0.000    0.001    0.000 generic_utils.py:199(get_registered_object)
     [java]       516    0.003    0.000    0.006    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
     [java]   862/298    0.004    0.000    3.835    0.013 generic_utils.py:334(deserialize_keras_object)
     [java]      8280    0.077    0.000    0.098    0.000 generic_utils.py:697(make_batches)
     [java]      8280    0.011    0.000    0.021    0.000 generic_utils.py:708(<listcomp>)
     [java]        96    0.000    0.000    0.000    0.000 generic_utils.py:758(to_list)
     [java]       516    0.000    0.000    0.000    0.000 generic_utils.py:77(__init__)
     [java]        16    0.000    0.000    0.000    0.000 generic_utils.py:775(to_snake_case)
     [java]       170    0.000    0.000    0.000    0.000 generic_utils.py:785(is_all_none)
     [java]         4    0.000    0.000    0.000    0.000 generic_utils.py:794(check_for_unexpected_keys)
     [java]       182    0.000    0.000    0.000    0.000 generic_utils.py:802(validate_kwargs)
     [java]       516    0.001    0.000    0.001    0.000 generic_utils.py:81(__enter__)
     [java]         3    0.000    0.000    0.000    0.000 generic_utils.py:816(default)
     [java]         3    0.001    0.000    0.009    0.003 generic_utils.py:827(populate_dict_with_module_objects)
     [java]         5    0.000    0.000    0.004    0.001 generic_utils.py:843(_load)
     [java]         5    0.000    0.000    0.004    0.001 generic_utils.py:854(__getattr__)
     [java]       516    0.001    0.000    0.001    0.000 generic_utils.py:87(__exit__)
     [java]         7    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
     [java]         2    0.000    0.000    0.000    0.000 genericpath.py:27(isfile)
     [java]        92    0.000    0.000    0.000    0.000 gradients_util.py:1020(PossibleTapeGradientTypes)
     [java]       460    0.006    0.000    0.129    0.000 graph_only_ops.py:29(graph_placeholder)
     [java]         2    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
     [java]       804    0.039    0.000    0.066    0.000 group.py:255(__getitem__)
     [java]       280    0.001    0.000    0.001    0.000 group.py:36(__init__)
     [java]         2    0.000    0.000    0.000    0.000 group.py:412(__contains__)
     [java]      1416    0.006    0.000    0.021    0.000 handle_data_util.py:28(get_resource_handle_data)
     [java]       460    0.002    0.000    0.017    0.000 handle_data_util.py:38(copy_handle_data)
     [java]       368    0.001    0.000    0.006    0.000 handle_data_util.py:65(set_handle_data)
     [java]         2    0.001    0.000   11.806    5.903 hdf5_format.py:139(load_model_from_hdf5)
     [java]        98    0.000    0.000    0.001    0.000 hdf5_format.py:227(preprocess_weights_for_loading)
     [java]        98    0.000    0.000    0.000    0.000 hdf5_format.py:413(_convert_rnn_weights)
     [java]         2    0.000    0.000    0.030    0.015 hdf5_format.py:604(load_optimizer_weights_from_hdf5_group)
     [java]         2    0.000    0.000    0.030    0.015 hdf5_format.py:616(<listcomp>)
     [java]         2    0.003    0.001    3.003    1.502 hdf5_format.py:650(load_weights_from_hdf5_group)
     [java]        98    0.006    0.000    0.084    0.001 hdf5_format.py:696(<listcomp>)
     [java]       274    0.003    0.000    0.027    0.000 hdf5_format.py:837(load_attributes_from_hdf5_group)
     [java]       274    0.002    0.000    0.002    0.000 hdf5_format.py:852(<listcomp>)
     [java]       270    0.001    0.000    0.008    0.000 hdf5_format.py:863(_legacy_weights)
     [java]       742    0.000    0.000    0.000    0.000 hdf5_format.py:882(<genexpr>)
     [java]        58    0.000    0.000    0.000    0.000 indexed_slices.py:284(internal_convert_to_tensor_or_indexed_slices)
     [java]         4    0.000    0.000    0.000    0.000 indexed_slices.py:321(internal_convert_n_to_tensor_or_indexed_slices)
     [java]         4    0.000    0.000    0.000    0.000 indexed_slices.py:362(convert_n_to_tensor_or_indexed_slices)
     [java]         8    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
     [java]         8    0.000    0.000    0.005    0.001 init_ops.py:111(__call__)
     [java]        52    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
     [java]       526    0.000    0.000    0.000    0.000 init_ops_v2.py:102(_validate_kwargs)
     [java]        52    0.000    0.000    0.000    0.000 init_ops_v2.py:1035(_assert_float_dtype)
     [java]        52    0.000    0.000    0.000    0.000 init_ops_v2.py:1058(__init__)
     [java]         2    0.000    0.000    0.007    0.004 init_ops_v2.py:1075(random_uniform)
     [java]        50    0.000    0.000    0.159    0.003 init_ops_v2.py:1084(truncated_normal)
     [java]       382    0.002    0.000    0.358    0.001 init_ops_v2.py:136(__call__)
     [java]        92    0.000    0.000    0.053    0.001 init_ops_v2.py:182(__call__)
     [java]        52    0.000    0.000    0.000    0.000 init_ops_v2.py:545(__init__)
     [java]        52    0.000    0.000    0.167    0.003 init_ops_v2.py:567(__call__)
     [java]       288    0.000    0.000    0.001    0.000 init_ops_v2.py:80(from_config)
     [java]       382    0.001    0.000    0.360    0.001 initializers_v2.py:128(__call__)
     [java]        92    0.000    0.000    0.054    0.001 initializers_v2.py:159(__call__)
     [java]        52    0.000    0.000    0.168    0.003 initializers_v2.py:398(__call__)
     [java]         2    0.000    0.000    0.000    0.000 initializers_v2.py:538(__init__)
     [java]        50    0.000    0.000    0.000    0.000 initializers_v2.py:582(__init__)
     [java]       526    0.001    0.000    0.002    0.000 initializers_v2.py:764(_get_dtype)
     [java]         2    0.000    0.000    0.008    0.004 input_layer.py:91(__init__)
     [java]       154    0.000    0.000    0.000    0.000 input_spec.py:102(<dictcomp>)
     [java]       340    0.001    0.000    0.003    0.000 input_spec.py:159(assert_input_compatibility)
     [java]       154    0.001    0.000    0.001    0.000 input_spec.py:75(__init__)
     [java]       968    0.008    0.000    0.042    0.000 inspect.py:1129(getfullargspec)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:1546(currentframe)
     [java]      2461    0.001    0.000    0.001    0.000 inspect.py:159(isfunction)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:172(_has_code_flag)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:183(isgeneratorfunction)
     [java]      8280    0.007    0.000    0.009    0.000 inspect.py:209(isgenerator)
     [java]       968    0.010    0.000    0.025    0.000 inspect.py:2150(_signature_from_function)
     [java]  1834/968    0.005    0.000    0.031    0.000 inspect.py:2244(_signature_from_callable)
     [java]        11    0.000    0.000    0.000    0.000 inspect.py:237(istraceback)
     [java]        11    0.000    0.000    0.000    0.000 inspect.py:247(isframe)
     [java]      2510    0.005    0.000    0.008    0.000 inspect.py:2515(__init__)
     [java]      5020    0.001    0.000    0.001    0.000 inspect.py:2565(name)
     [java]      3168    0.000    0.000    0.000    0.000 inspect.py:2569(default)
     [java]      2510    0.000    0.000    0.000    0.000 inspect.py:2573(annotation)
     [java]      2510    0.000    0.000    0.000    0.000 inspect.py:2577(kind)
     [java]        10    0.000    0.000    0.000    0.000 inspect.py:261(iscode)
     [java]       968    0.004    0.000    0.005    0.000 inspect.py:2798(__init__)
     [java]      3478    0.001    0.000    0.002    0.000 inspect.py:2847(<genexpr>)
     [java]        10    0.000    0.000    0.000    0.000 inspect.py:286(isbuiltin)
     [java]       968    0.000    0.000    0.000    0.000 inspect.py:2882(parameters)
     [java]       968    0.000    0.000    0.000    0.000 inspect.py:2886(return_annotation)
     [java]         1    0.000    0.000    0.000    0.000 inspect.py:494(unwrap)
     [java]         1    0.000    0.000    0.000    0.000 inspect.py:511(_is_wrapper)
     [java]        34    0.000    0.000    0.000    0.000 inspect.py:64(ismodule)
     [java]         8    0.000    0.000    0.000    0.000 inspect.py:655(getfile)
     [java]         7    0.000    0.000    0.000    0.000 inspect.py:693(getsourcefile)
     [java]        15    0.000    0.000    0.000    0.000 inspect.py:700(<genexpr>)
     [java]        20    0.000    0.000    0.000    0.000 inspect.py:703(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:715(getabsfile)
     [java]        14    0.000    0.000    0.000    0.000 inspect.py:727(getmodule)
     [java]      1850    0.001    0.000    0.001    0.000 inspect.py:73(isclass)
     [java]         2    0.000    0.000    0.001    0.000 inspect.py:809(findsource)
     [java]       235    0.000    0.000    0.000    0.000 inspect.py:81(ismethod)
     [java]         2    0.000    0.000    0.000    0.000 inspect.py:926(__init__)
     [java]       204    0.000    0.000    0.000    0.000 inspect.py:936(tokeneater)
     [java]         2    0.000    0.000    0.008    0.004 inspect.py:986(getblock)
     [java]         1    0.000    0.000    0.001    0.001 inspect.py:997(getsourcelines)
     [java]         1    0.001    0.001    0.005    0.005 inspect_utils.py:116(_fix_linecache_record)
     [java]         1    0.000    0.000    0.013    0.013 inspect_utils.py:143(getimmediatesource)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:151(getnamespace)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:339(getfutureimports)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:350(<genexpr>)
     [java]         1    0.000    0.000    0.000    0.000 inspect_utils.py:60(islambda)
     [java]         4    0.000    0.000    0.000    0.000 inspect_utils.py:68(isnamedtuple)
     [java]        10    0.000    0.000    0.000    0.000 inspect_utils.py:82(isbuiltin)
     [java]      1550    0.000    0.000    0.000    0.000 inspect_utils.py:84(<genexpr>)
     [java]        10    0.000    0.000    0.000    0.000 inspect_utils.py:96(isconstructor)
     [java]         4    0.000    0.000    0.003    0.001 json_utils.py:68(decode)
     [java]      1228    0.001    0.000    0.001    0.000 json_utils.py:72(_decode_helper)
     [java]        92    0.000    0.000    0.000    0.000 keras_deps.py:42(get_call_context_function)
     [java]       180    0.000    0.000    0.010    0.000 keras_tensor.py:51(keras_tensors_enabled)
     [java]       414    0.000    0.000    0.001    0.000 layer_utils.py:141(filter_empty_layer_containers)
     [java]         4    0.000    0.000    0.003    0.001 layer_utils.py:161(gather_trainable_weights)
     [java]         4    0.000    0.000    0.000    0.000 layer_utils.py:179(<listcomp>)
     [java]       414    0.000    0.000    0.000    0.000 layer_utils.py:37(is_layer)
     [java]         5    0.000    0.000    0.000    0.000 layer_utils.py:377(cached_per_instance)
     [java]       414    0.000    0.000    0.000    0.000 layer_utils.py:43(has_weights)
     [java] 9798/9274    0.012    0.000    0.043    0.000 layer_utils.py:461(wrapped)
     [java]   2179316    3.507    0.000    5.928    0.000 layer_utils.py:472(filter_empty_layer_containers)
     [java]        46    0.000    0.000    0.000    0.000 layer_utils.py:86(__init__)
     [java]         5    0.000    0.000    0.000    0.000 lazy_loader.py:42(_load)
     [java]         5    0.000    0.000    0.000    0.000 lazy_loader.py:61(__getattr__)
     [java]         1    0.000    0.000    0.002    0.002 linecache.py:26(getline)
     [java]         3    0.000    0.000    0.002    0.001 linecache.py:36(getlines)
     [java]         2    0.000    0.000    0.000    0.000 linecache.py:52(checkcache)
     [java]         2    0.000    0.000    0.003    0.001 linecache.py:80(updatecache)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:114(__init__)
     [java]     202/1    0.000    0.000    0.003    0.003 liveness.py:121(visit)
     [java]         1    0.000    0.000    0.003    0.003 liveness.py:131(_analyze_function)
     [java]         1    0.000    0.000    0.003    0.003 liveness.py:145(visit_FunctionDef)
     [java]         2    0.000    0.000    0.000    0.000 liveness.py:148(_block_statement_live_out)
     [java]         3    0.000    0.000    0.000    0.000 liveness.py:156(_block_statement_live_in)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:183(visit_Try)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:188(visit_ExceptHandler)
     [java]         1    0.000    0.000    0.002    0.002 liveness.py:193(visit_With)
     [java]         1    0.000    0.000    0.003    0.003 liveness.py:206(resolve)
     [java]         1    0.000    0.000    0.000    0.000 liveness.py:43(__init__)
     [java]        26    0.000    0.000    0.000    0.000 liveness.py:47(init_state)
     [java]        13    0.000    0.000    0.000    0.000 liveness.py:50(visit_node)
     [java]         2    0.000    0.000    0.000    0.000 load_context.py:32(set_load_options)
     [java]         2    0.000    0.000    0.000    0.000 load_context.py:35(clear_load_options)
     [java]         4    0.000    0.000    0.000    0.000 load_context.py:45(load_context)
     [java]         1    0.000    0.000    0.001    0.001 loader.py:49(load_source)
     [java]         1    0.000    0.000    0.018    0.018 loader.py:69(load_ast)
     [java]      9256    0.018    0.000    0.034    0.000 lock_util.py:108(_another_group_active)
     [java]     18512    0.008    0.000    0.008    0.000 lock_util.py:109(<genexpr>)
     [java]     27768    0.011    0.000    0.011    0.000 lock_util.py:112(_validate_group_id)
     [java]      9256    0.004    0.000    0.004    0.000 lock_util.py:123(__init__)
     [java]      9256    0.005    0.000    0.073    0.000 lock_util.py:127(__enter__)
     [java]      9256    0.008    0.000    0.089    0.000 lock_util.py:130(__exit__)
     [java]       185    0.001    0.000    0.001    0.000 lock_util.py:56(__init__)
     [java]      9256    0.013    0.000    0.022    0.000 lock_util.py:76(group)
     [java]      9256    0.023    0.000    0.067    0.000 lock_util.py:88(acquire)
     [java]      9256    0.028    0.000    0.081    0.000 lock_util.py:98(release)
     [java]         1    0.000    0.000    0.000    0.000 logical_expressions.py:114(visit_UnaryOp)
     [java]         1    0.000    0.000    0.002    0.002 logical_expressions.py:135(transform)
     [java]         1    0.000    0.000    0.000    0.000 logical_expressions.py:52(_overload_of)
     [java]         8    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
     [java]         8    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
     [java]         2    0.000    0.000    0.003    0.002 losses.py:1165(mean_squared_error)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:1842(deserialize)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:1861(get)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:216(__init__)
     [java]         4    0.000    0.000    0.162    0.040 losses.py:242(call)
     [java]         4    0.000    0.000    0.000    0.000 losses.py:84(__init__)
     [java]         4    0.000    0.000    0.012    0.003 losses_utils.py:188(_safe_mean)
     [java]         4    0.000    0.000    0.004    0.001 losses_utils.py:203(_num_elements)
     [java]         8    0.000    0.000    0.019    0.002 losses_utils.py:209(reduce_weighted_loss)
     [java]         4    0.000    0.000    0.004    0.001 losses_utils.py:221(compute_weighted_loss)
     [java]         6    0.000    0.000    0.000    0.000 losses_utils.py:278(scale_loss_for_distribution)
     [java]         4    0.000    0.000    0.001    0.000 losses_utils.py:287(cast_losses_to_common_dtype)
     [java]         4    0.000    0.000    0.000    0.000 losses_utils.py:310(<listcomp>)
     [java]         4    0.000    0.000    0.000    0.000 losses_utils.py:38(remove_squeezable_dimensions)
     [java]         8    0.000    0.000    0.000    0.000 losses_utils.py:99(squeeze_or_expand_dimensions)
     [java]       258    0.001    0.000    0.149    0.001 math_ops.py:1161(binary_op_wrapper)
     [java]       200    0.001    0.000    0.185    0.001 math_ops.py:1192(r_binary_op_wrapper)
     [java]         8    0.000    0.000    0.008    0.001 math_ops.py:1366(div_no_nan)
     [java]        20    0.000    0.000    0.009    0.000 math_ops.py:1458(_add_dispatch)
     [java]       252    0.001    0.000    0.123    0.000 math_ops.py:1489(_mul_dispatch)
     [java]         2    0.000    0.000    0.001    0.000 math_ops.py:1646(equal)
     [java]      7728    0.006    0.000    0.265    0.000 math_ops.py:1718(tensor_equals)
     [java]       448    0.001    0.000    0.020    0.000 math_ops.py:1756(tensor_not_equals)
     [java]         8    0.000    0.000    0.011    0.001 math_ops.py:1796(range)
     [java]        32    0.000    0.000    0.000    0.000 math_ops.py:1865(<genexpr>)
     [java]         8    0.000    0.000    0.000    0.000 math_ops.py:1866(<listcomp>)
     [java]       118    0.001    0.000    0.048    0.000 math_ops.py:1891(_ReductionDims)
     [java]       118    0.000    0.000    0.002    0.000 math_ops.py:1910(_has_fully_defined_shape)
     [java]       118    0.000    0.000    0.002    0.000 math_ops.py:1915(_may_reduce_to_scalar)
     [java]       116    0.000    0.000    0.110    0.001 math_ops.py:1981(reduce_sum)
     [java]       116    0.000    0.000    0.061    0.001 math_ops.py:2047(reduce_sum_with_dims)
     [java]         2    0.000    0.000    0.002    0.001 math_ops.py:2315(reduce_mean)
     [java]         4    0.000    0.000    0.004    0.001 math_ops.py:3518(add_n)
     [java]        62    0.000    0.000    0.000    0.000 math_ops.py:3560(<genexpr>)
     [java]       256    0.000    0.000    0.124    0.000 math_ops.py:472(multiply)
     [java]       192    0.000    0.000    0.107    0.001 math_ops.py:533(subtract)
     [java]       202    0.001    0.000    0.005    0.000 math_ops.py:907(cast)
     [java]        92    0.120    0.001  120.465    1.309 mcts_uct_alphazero.py:101(select_action)
     [java]      2760    0.371    0.000   49.337    0.018 mcts_uct_alphazero.py:173(select_node)
     [java]         2    0.000    0.000   11.810    5.905 mcts_uct_alphazero.py:20(__init__)
     [java]        92    0.013    0.000    0.698    0.008 mcts_uct_alphazero.py:251(final_move_selection)
     [java]         2    0.000    0.000    0.000    0.000 mcts_uct_alphazero.py:26(init_ai)
     [java]         2    0.000    0.000    0.000    0.000 mcts_uct_alphazero.py:30(set_precompute)
     [java]      2852    0.215    0.000    0.303    0.000 mcts_uct_alphazero.py:311(__init__)
     [java]      2852    0.043    0.000    0.043    0.000 mcts_uct_alphazero.py:328(<listcomp>)
     [java]      8280    0.018    0.000   76.496    0.009 mcts_uct_alphazero.py:37(predict_with_onnx_model)
     [java]      2760    0.207    0.000    0.541    0.000 mcts_uct_alphazero.py:46(chose_move)
     [java]        20    0.000    0.000    0.010    0.001 merge.py:120(call)
     [java]        20    0.000    0.000    0.000    0.000 merge.py:204(compute_mask)
     [java]        20    0.000    0.000    0.010    0.001 merge.py:250(_merge_function)
     [java]        20    0.000    0.000    0.006    0.000 merge.py:39(__init__)
     [java]        20    0.000    0.000    0.000    0.000 merge.py:51(_compute_elemwise_op_output_shape)
     [java]        20    0.000    0.000    0.002    0.000 merge.py:89(build)
     [java]        20    0.000    0.000    0.000    0.000 merge.py:98(<setcomp>)
     [java]         4    0.000    0.000    0.002    0.000 metrics.py:154(__init__)
     [java]         4    0.000    0.000    0.014    0.003 metrics.py:163(__new__)
     [java]         4    0.000    0.000    0.023    0.006 metrics.py:174(update_state_fn)
     [java]         4    0.000    0.000    0.006    0.002 metrics.py:189(result_fn)
     [java]         4    0.000    0.000    0.033    0.008 metrics.py:198(__call__)
     [java]         4    0.000    0.000    0.032    0.008 metrics.py:210(replica_local_fn)
     [java]         8    0.000    0.000    0.000    0.000 metrics.py:212(<genexpr>)
     [java]         8    0.000    0.000    0.030    0.004 metrics.py:285(add_weight)
     [java]         4    0.000    0.000    0.033    0.008 metrics.py:332(__init__)
     [java]         4    0.000    0.000    0.022    0.006 metrics.py:342(update_state)
     [java]         4    0.000    0.000    0.000    0.000 metrics.py:3498(is_built_in)
     [java]         4    0.000    0.000    0.006    0.001 metrics.py:400(result)
     [java]         4    0.000    0.000    0.033    0.008 metrics.py:487(__init__)
     [java]         4    0.000    0.000    0.008    0.002 metrics_utils.py:117(decorated)
     [java]         4    0.000    0.000    0.000    0.000 metrics_utils.py:480(ragged_assert_compatible_and_get_flat_values)
     [java]         8    0.000    0.000    0.000    0.000 metrics_utils.py:499(<genexpr>)
     [java]         8    0.000    0.000    0.000    0.000 metrics_utils.py:501(<genexpr>)
     [java]         4    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
     [java]         4    0.000    0.000    0.024    0.006 metrics_utils.py:73(decorated)
     [java]         4    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
     [java]         2    0.000    0.000    3.841    1.920 model_config.py:34(model_from_config)
     [java]       204    0.000    0.000    0.000    0.000 module_wrapper.py:154(__getattribute__)
     [java]      8649    0.024    0.000    0.085    0.000 monitoring.py:138(get_cell)
     [java]         1    0.000    0.000    0.000    0.000 monitoring.py:152(__init__)
     [java]         1    0.000    0.000    0.000    0.000 monitoring.py:160(increase_by)
     [java]         1    0.000    0.000    0.000    0.000 monitoring.py:194(get_cell)
     [java]      8648    0.005    0.000    0.005    0.000 monitoring.py:311(__init__)
     [java]      8648    0.009    0.000    0.016    0.000 monitoring.py:319(set)
     [java]      8648    0.029    0.000    0.119    0.000 monitoring.py:353(get_cell)
     [java]      8372    0.003    0.000    0.003    0.000 multiarray.py:1071(copyto)
     [java]      5612    0.001    0.000    0.001    0.000 multiarray.py:148(concatenate)
     [java]     13800    0.004    0.000    0.004    0.000 multiarray.py:341(where)
     [java]         1    0.000    0.000    0.000    0.000 naming.py:27(__init__)
     [java]         6    0.000    0.000    0.000    0.000 naming.py:31(new_symbol)
     [java]     51164    0.031    0.000    0.063    0.000 nest.py:104(_is_namedtuple)
     [java] 24840/8280    0.071    0.000    0.272    0.000 nest.py:1264(get_traverse_shallow_structure)
     [java]     52268    0.215    0.000    0.448    0.000 nest.py:129(_sequence_like)
     [java]       368    0.000    0.000    0.002    0.000 nest.py:1334(yield_flat_paths)
     [java]       368    0.001    0.000    0.004    0.000 nest.py:1404(flatten_with_tuple_paths)
     [java]    234816    0.151    0.000    0.292    0.000 nest.py:198(_yield_value)
     [java]    334912    0.158    0.000    0.180    0.000 nest.py:203(_yield_sorted_items)
     [java]      1094    0.000    0.000    0.001    0.000 nest.py:260(is_nested)
     [java]    204899    0.163    0.000    0.501    0.000 nest.py:274(flatten)
     [java]      8832    0.010    0.000    0.028    0.000 nest.py:362(assert_same_structure)
     [java]         4    0.001    0.000    0.041    0.010 nest.py:414(flatten_dict_items)
     [java] 43432/43412    0.152    0.000    0.384    0.000 nest.py:470(_packed_nest_with_indices)
     [java]     44346    0.145    0.000    1.013    0.000 nest.py:505(_pack_sequence_as)
     [java]     44346    0.041    0.000    1.055    0.000 nest.py:545(pack_sequence_as)
     [java]     17964    0.137    0.000    0.986    0.000 nest.py:582(map_structure)
     [java]     35928    0.019    0.000    0.082    0.000 nest.py:655(<genexpr>)
     [java]     17964    0.035    0.000    0.404    0.000 nest.py:659(<listcomp>)
     [java] 116288/50048    0.130    0.000    0.201    0.000 nest.py:744(_yield_flat_up_to)
     [java] 49680/16560    0.155    0.000    0.367    0.000 nest.py:774(assert_shallow_structure)
     [java]     16560    0.034    0.000    0.625    0.000 nest.py:897(flatten_up_to)
     [java]      2576    0.002    0.000    0.004    0.000 nest.py:96(_sorted)
     [java]     16560    0.025    0.000    0.224    0.000 nest.py:978(<listcomp>)
     [java]        92    0.001    0.000    0.444    0.005 nn_impl.py:1567(fused_batch_norm)
     [java]        46    0.000    0.000    0.056    0.001 nn_ops.py:1003(convolution_v2)
     [java]        46    0.001    0.000    0.056    0.001 nn_ops.py:1029(convolution_internal)
     [java]       230    0.000    0.000    0.000    0.000 nn_ops.py:1116(<genexpr>)
     [java]        46    0.000    0.000    0.053    0.001 nn_ops.py:2583(_conv2d_expanded_batch)
     [java]        48    0.000    0.000    0.024    0.001 nn_ops.py:3472(leaky_relu)
     [java]         4    0.000    0.000    0.023    0.006 nn_ops.py:3551(_flatten_outer_dims)
     [java]         2    0.000    0.000    0.033    0.016 nn_ops.py:3805(softmax_cross_entropy_with_logits_v2)
     [java]         2    0.000    0.000    0.032    0.016 nn_ops.py:3868(softmax_cross_entropy_with_logits_v2_helper)
     [java]        92    0.000    0.000    0.000    0.000 nn_ops.py:68(_get_sequence)
     [java]       172    0.000    0.000    0.000    0.000 node.py:114(<listcomp>)
     [java]       172    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
     [java]      1024    0.000    0.000    0.000    0.000 node.py:117(keras_inputs)
     [java]       172    0.000    0.000    0.000    0.000 node.py:122(parent_nodes)
     [java]         2    0.000    0.000    0.000    0.000 node.py:230(input_tensors)
     [java]         6    0.000    0.000    0.000    0.000 node.py:236(output_tensors)
     [java]       190    0.000    0.000    0.000    0.000 node.py:291(is_keras_tensor)
     [java]       172    0.004    0.000    0.028    0.000 node.py:53(__init__)
     [java]       190    0.000    0.000    0.000    0.000 node.py:71(<lambda>)
     [java]       172    0.000    0.000    0.000    0.000 node.py:73(<lambda>)
     [java]        46    0.001    0.000    0.072    0.002 normalization.py:161(__init__)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:232(_raise_if_fused_cannot_be_used)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:267(_fused_can_be_used)
     [java]       460    0.000    0.000    0.000    0.000 normalization.py:274(trainable)
     [java]        46    0.000    0.000    0.002    0.000 normalization.py:278(trainable)
     [java]       184    0.001    0.000    0.002    0.000 normalization.py:282(_param_dtype)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:290(_support_zero_size_input)
     [java]        46    0.002    0.000    0.672    0.015 normalization.py:295(build)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:371(<dictcomp>)
     [java]        92    0.002    0.000    0.376    0.004 normalization.py:505(_assign_moving_average)
     [java]        46    0.001    0.000    2.164    0.047 normalization.py:523(_fused_batch_norm)
     [java]        92    0.000    0.000    0.000    0.000 normalization.py:549(_maybe_add_or_remove_bessels_correction)
     [java]        46    0.000    0.000    0.223    0.005 normalization.py:567(_fused_batch_norm_training)
     [java]        46    0.000    0.000    0.222    0.005 normalization.py:583(_fused_batch_norm_inference)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:611(<lambda>)
     [java]        46    0.000    0.000    0.000    0.000 normalization.py:612(<lambda>)
     [java]        46    0.000    0.000    0.187    0.004 normalization.py:616(mean_update)
     [java]        46    0.000    0.000    0.189    0.004 normalization.py:624(variance_update)
     [java]        46    0.000    0.000    0.007    0.000 normalization.py:713(_get_training_value)
     [java]        46    0.000    0.000    2.171    0.047 normalization.py:725(call)
     [java]     16744    0.060    0.000    0.088    0.000 numeric.py:1341(normalize_axis_tuple)
     [java]     16744    0.012    0.000    0.020    0.000 numeric.py:1391(<listcomp>)
     [java]      5612    0.002    0.000    0.002    0.000 numeric.py:1400(_moveaxis_dispatcher)
     [java]      5612    0.042    0.000    0.131    0.000 numeric.py:1404(moveaxis)
     [java]      5612    0.004    0.000    0.004    0.000 numeric.py:1466(<listcomp>)
     [java]        80    0.000    0.000    0.000    0.000 numeric.py:2384(_array_equal_dispatcher)
     [java]        80    0.001    0.000    0.002    0.000 numeric.py:2388(array_equal)
     [java]      8372    0.026    0.000    0.124    0.000 numeric.py:289(full)
     [java]       526    0.000    0.000    0.000    0.000 object_identity.py:109(deref)
     [java]     54810    0.024    0.000    0.024    0.000 object_identity.py:131(__init__)
     [java]    133244    0.084    0.000    0.120    0.000 object_identity.py:134(_wrap_key)
     [java]     80324    0.130    0.000    0.328    0.000 object_identity.py:137(__getitem__)
     [java]     35776    0.049    0.000    0.114    0.000 object_identity.py:140(__setitem__)
     [java]     17144    0.026    0.000    0.063    0.000 object_identity.py:143(__delitem__)
     [java]      1531    0.003    0.000    0.005    0.000 object_identity.py:184(__init__)
     [java]      2089    0.001    0.000    0.001    0.000 object_identity.py:185(<genexpr>)
     [java]     17726    0.008    0.000    0.010    0.000 object_identity.py:193(_wrap_key)
     [java]      7512    0.006    0.000    0.014    0.000 object_identity.py:196(__contains__)
     [java]      3542    0.002    0.000    0.007    0.000 object_identity.py:199(discard)
     [java]      7024    0.005    0.000    0.017    0.000 object_identity.py:202(add)
     [java]      3496    0.001    0.000    0.001    0.000 object_identity.py:218(__len__)
     [java]       910    0.001    0.000    0.003    0.000 object_identity.py:232(_wrap_key)
     [java]       368    0.000    0.000    0.002    0.000 object_identity.py:235(__len__)
     [java]       368    0.000    0.000    0.001    0.000 object_identity.py:237(<listcomp>)
     [java]   4508121    1.596    0.000    2.435    0.000 object_identity.py:239(__iter__)
     [java]    157838    0.039    0.000    0.039    0.000 object_identity.py:35(__init__)
     [java]     94472    0.032    0.000    0.046    0.000 object_identity.py:42(_assert_type)
     [java]     94472    0.061    0.000    0.107    0.000 object_identity.py:54(__eq__)
     [java]    157838    0.058    0.000    0.084    0.000 object_identity.py:63(__hash__)
     [java]       910    0.002    0.000    0.002    0.000 object_identity.py:77(__init__)
     [java]   4490997    0.839    0.000    0.839    0.000 object_identity.py:80(unwrapped)
     [java]      9240    0.012    0.000    0.034    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
     [java]     18268    0.007    0.000    0.013    0.000 op_def_library.py:103(_IsListValue)
     [java]      7573    0.011    0.000    0.036    0.000 op_def_library.py:107(_Flatten)
     [java]      7573    0.010    0.000    0.021    0.000 op_def_library.py:110(<listcomp>)
     [java]      7573    0.004    0.000    0.004    0.000 op_def_library.py:112(<listcomp>)
     [java]       232    0.000    0.000    0.001    0.000 op_def_library.py:164(_MakeFloat)
     [java]       492    0.000    0.000    0.000    0.000 op_def_library.py:171(_MakeInt)
     [java]      1268    0.001    0.000    0.003    0.000 op_def_library.py:182(_MakeStr)
     [java]       278    0.000    0.000    0.000    0.000 op_def_library.py:189(_MakeBool)
     [java]      7619    0.011    0.000    0.030    0.000 op_def_library.py:196(_MakeType)
     [java]      1581    0.003    0.000    0.023    0.000 op_def_library.py:205(_MakeShape)
     [java]       184    0.001    0.000    0.001    0.000 op_def_library.py:237(_MakeFunc)
     [java]     15146    0.004    0.000    0.004    0.000 op_def_library.py:256(_MaybeColocateWith)
     [java] 7573/7227    0.392    0.000    3.641    0.001 op_def_library.py:320(_apply_op_helper)
     [java]      4187    0.007    0.000    0.007    0.000 op_def_library.py:40(_Attr)
     [java]        86    0.000    0.000    0.000    0.000 op_def_library.py:440(<genexpr>)
     [java]       750    0.001    0.000    0.001    0.000 op_def_library.py:471(<listcomp>)
     [java]      4589    0.002    0.000    0.002    0.000 op_def_library.py:48(_AttrValue)
     [java]     11792    0.010    0.000    0.023    0.000 op_def_library.py:55(_SatisfiesTypeConstraint)
     [java]      8967    0.006    0.000    0.019    0.000 op_def_library.py:562(<listcomp>)
     [java]        86    0.000    0.000    0.000    0.000 op_def_library.py:584(<genexpr>)
     [java]      1600    0.001    0.000    0.001    0.000 op_def_library.py:66(_SatisfiesLengthConstraint)
     [java]       184    0.001    0.000    0.001    0.000 op_def_library.py:73(_SatisfiesAllowedStringsConstraint)
     [java]      7573    0.011    0.000    0.011    0.000 op_def_library.py:743(<listcomp>)
     [java]     11000    0.045    0.000    0.117    0.000 op_def_library.py:768(value_to_attr_value)
     [java]       542    0.000    0.000    0.000    0.000 op_def_library.py:789(<listcomp>)
     [java]       138    0.000    0.000    0.000    0.000 op_def_library.py:793(<listcomp>)
     [java]       828    0.001    0.000    0.006    0.000 op_def_library.py:805(<listcomp>)
     [java]        92    0.000    0.000    0.004    0.000 op_def_library.py:809(<listcomp>)
     [java]        14    0.000    0.000    0.000    0.000 op_def_library.py:81(_SatisfiesIntMinimumConstraint)
     [java]      8967    0.005    0.000    0.005    0.000 op_def_library.py:87(_IsListParameter)
     [java]      7573    0.004    0.000    0.005    0.000 op_def_registry.py:34(get)
     [java]      1380    0.000    0.000    0.000    0.000 ops.py:115(tensor_id)
     [java]      2172    0.009    0.000    0.017    0.000 ops.py:123(__init__)
     [java]       110    0.000    0.000    0.002    0.000 ops.py:1340(convert_to_tensor_v2_with_dispatch)
     [java]       110    0.000    0.000    0.002    0.000 ops.py:1408(convert_to_tensor_v2)
     [java] 11657/11119    0.023    0.000    0.770    0.000 ops.py:1481(convert_to_tensor)
     [java]       750    0.004    0.000    0.011    0.000 ops.py:1564(internal_convert_n_to_tensor)
     [java]       368    0.000    0.000    0.039    0.000 ops.py:1643(convert_to_tensor_or_composite)
     [java]       368    0.001    0.000    0.039    0.000 ops.py:1666(internal_convert_to_tensor_or_composite)
     [java]      2386    0.000    0.000    0.000    0.000 ops.py:169(__init__)
     [java]      2386    0.000    0.000    0.000    0.000 ops.py:172(__enter__)
     [java]      2386    0.000    0.000    0.000    0.000 ops.py:175(__exit__)
     [java]      9240    0.101    0.000    0.171    0.000 ops.py:1778(_NodeDef)
     [java]      9240    0.122    0.000    0.648    0.000 ops.py:1805(_create_c_op)
     [java]       750    0.001    0.000    0.001    0.000 ops.py:1835(<listcomp>)
     [java]      9240    0.189    0.000    1.348    0.000 ops.py:1880(__init__)
     [java]     20369    0.009    0.000    0.015    0.000 ops.py:195(_as_graph_element)
     [java]      1207    0.000    0.000    0.000    0.000 ops.py:1963(<listcomp>)
     [java]     17196    0.012    0.000    0.058    0.000 ops.py:1965(<genexpr>)
     [java]      9240    0.014    0.000    0.035    0.000 ops.py:2036(_control_flow_post_processing)
     [java]      1888    0.011    0.000    0.087    0.000 ops.py:2054(colocation_groups)
     [java]      1888    0.002    0.000    0.004    0.000 ops.py:2064(<listcomp>)
     [java]     18868    0.003    0.000    0.003    0.000 ops.py:2077(_get_control_flow_context)
     [java]     12924    0.006    0.000    0.018    0.000 ops.py:2093(name)
     [java]      4978    0.003    0.000    0.010    0.000 ops.py:2103(device)
     [java]      9311    0.006    0.000    0.015    0.000 ops.py:218(uid)
     [java]     14796    0.004    0.000    0.004    0.000 ops.py:2352(outputs)
     [java]      2942    0.005    0.000    0.013    0.000 ops.py:2357(inputs)
     [java]       988    0.001    0.000    0.002    0.000 ops.py:2378(control_inputs)
     [java]       988    0.000    0.000    0.000    0.000 ops.py:2395(<listcomp>)
     [java]      2416    0.002    0.000    0.004    0.000 ops.py:2401(_control_outputs)
     [java]      2416    0.001    0.000    0.001    0.000 ops.py:2415(<listcomp>)
     [java]     33656    0.014    0.000    0.039    0.000 ops.py:2421(type)
     [java]     45228    0.009    0.000    0.009    0.000 ops.py:2426(graph)
     [java]       988    0.006    0.000    0.030    0.000 ops.py:2431(node_def)
     [java]      3602    0.011    0.000    0.079    0.000 ops.py:2467(_set_attr)
     [java]      3602    0.004    0.000    0.037    0.000 ops.py:2476(_set_attr_with_buf)
     [java]      3418    0.038    0.000    0.143    0.000 ops.py:2516(get_attr)
     [java]     11491    0.009    0.000    0.009    0.000 ops.py:2852(name_from_scope_name)
     [java]       185    0.005    0.000    0.013    0.000 ops.py:2913(__init__)
     [java]      3854    0.002    0.000    0.002    0.000 ops.py:3066(_variable_creator_stack)
     [java]      3312    0.001    0.000    0.001    0.000 ops.py:3090(_variable_creator_stack)
     [java]     19343    0.005    0.000    0.005    0.000 ops.py:3094(_check_not_finalized)
     [java]      9240    0.038    0.000    0.051    0.000 ops.py:3103(_add_op)
     [java]     19316    0.010    0.000    0.010    0.000 ops.py:3122(_c_graph)
     [java]        14    0.000    0.000    0.000    0.000 ops.py:3128(version)
     [java]       236    0.000    0.000    0.000    0.000 ops.py:3163(seed)
     [java]       184    0.000    0.000    0.000    0.000 ops.py:3168(seed)
     [java]     12178    0.003    0.000    0.003    0.000 ops.py:3199(_get_control_flow_context)
     [java]      5324    0.001    0.000    0.001    0.000 ops.py:3207(_set_control_flow_context)
     [java]       184    0.000    0.000    0.001    0.000 ops.py:3348(_is_function)
     [java]       184    0.001    0.000    0.020    0.000 ops.py:3370(_add_function)
     [java]     61081    0.013    0.000    0.013    0.000 ops.py:3405(building_function)
     [java]      9240    0.103    0.000    2.422    0.000 ops.py:3469(_create_op_internal)
     [java]     18403    0.007    0.000    0.011    0.000 ops.py:3523(<genexpr>)
     [java]      9240    0.111    0.000    0.552    0.000 ops.py:3572(_create_op_helper)
     [java]      8942    0.024    0.000    0.083    0.000 ops.py:361(__init__)
     [java]      3070    0.004    0.000    0.018    0.000 ops.py:3692(as_graph_element)
     [java]      3070    0.004    0.000    0.014    0.000 ops.py:3728(_as_graph_element_locked)
     [java]       552    0.001    0.000    0.002    0.000 ops.py:3817(get_operations)
     [java]      4100    0.004    0.000    0.005    0.000 ops.py:3856(_get_operation_by_name_unsafe)
     [java]      1138    0.001    0.000    0.003    0.000 ops.py:3879(_get_operation_by_tf_operation)
     [java]      8942    0.009    0.000    0.092    0.000 ops.py:388(_create_with_tf_output)
     [java]      1138    0.002    0.000    0.006    0.000 ops.py:3904(_get_tensor_by_tf_output)
     [java]      1667    0.004    0.000    0.010    0.000 ops.py:3924(_get_op_def)
     [java]     29054    0.008    0.000    0.008    0.000 ops.py:394(op)
     [java]     31637    0.033    0.000    0.134    0.000 ops.py:3942(as_default)
     [java]       679    0.002    0.000    0.002    0.000 ops.py:3989(add_to_collection)
     [java]     41984    0.010    0.000    0.010    0.000 ops.py:399(dtype)
     [java]       542    0.001    0.000    0.004    0.000 ops.py:4007(add_to_collections)
     [java]     31884    0.020    0.000    0.026    0.000 ops.py:404(graph)
     [java]       184    0.001    0.000    0.001    0.000 ops.py:4053(get_collection)
     [java]      1700    0.005    0.000    0.009    0.000 ops.py:409(name)
     [java]     48166    0.019    0.000    0.028    0.000 ops.py:4135(_name_stack)
     [java]     28252    0.013    0.000    0.013    0.000 ops.py:4142(_name_stack)
     [java]     28252    0.064    0.000    0.196    0.000 ops.py:4147(name_scope)
     [java]      2006    0.002    0.000    0.007    0.000 ops.py:418(device)
     [java]      6122    0.004    0.000    0.037    0.000 ops.py:423(shape)
     [java]     11252    0.039    0.000    0.057    0.000 ops.py:4262(unique_name)
     [java]      2202    0.001    0.000    0.003    0.000 ops.py:4314(get_name_scope)
     [java]      3092    0.003    0.000    0.042    0.000 ops.py:4331(_colocate_with_for_gradient)
     [java]      3092    0.009    0.000    0.032    0.000 ops.py:4348(colocate_with)
     [java]      2172    0.005    0.000    0.063    0.000 ops.py:4427(_add_device_to_stack)
     [java]      4344    0.008    0.000    0.080    0.000 ops.py:4434(device)
     [java]      3315    0.012    0.000    0.033    0.000 ops.py:446(_c_api_shape)
     [java]      9240    0.023    0.000    0.075    0.000 ops.py:4505(_apply_device_functions)
     [java]      3315    0.001    0.000    0.001    0.000 ops.py:454(<listcomp>)
     [java]      3398    0.004    0.000    0.004    0.000 ops.py:4588(__init__)
     [java]      3398    0.008    0.000    0.018    0.000 ops.py:4623(__enter__)
     [java]      3398    0.005    0.000    0.017    0.000 ops.py:4633(__exit__)
     [java]      2497    0.001    0.000    0.001    0.000 ops.py:4641(control_inputs)
     [java]      4374    0.004    0.000    0.007    0.000 ops.py:4645(add_op)
     [java]      2865    0.002    0.000    0.003    0.000 ops.py:4650(op_in_group)
     [java]      3398    0.002    0.000    0.005    0.000 ops.py:4655(_push_control_dependencies_controller)
     [java]      3398    0.004    0.000    0.009    0.000 ops.py:4658(_pop_control_dependencies_controller)
     [java]       736    0.001    0.000    0.002    0.000 ops.py:4662(_current_control_dependencies)
     [java]      9240    0.015    0.000    0.032    0.000 ops.py:4669(_control_dependencies_for_inputs)
     [java]      3679    0.001    0.000    0.001    0.000 ops.py:4700(<genexpr>)
     [java]      9240    0.009    0.000    0.028    0.000 ops.py:4703(_record_op_seen_by_control_dependencies)
     [java]      3398    0.007    0.000    0.021    0.000 ops.py:4712(control_dependencies)
     [java]      1084    0.004    0.000    0.005    0.000 ops.py:4826(_attr_scope)
     [java]       526    0.000    0.000    0.001    0.000 ops.py:5032(is_feedable)
     [java]        92    0.000    0.000    0.000    0.000 ops.py:5036(prevent_fetching)
     [java]      1362    0.001    0.000    0.001    0.000 ops.py:5040(is_fetchable)
     [java]       185    0.000    0.000    0.000    0.000 ops.py:5047(switch_to_thread_local)
     [java]     80901    0.041    0.000    0.058    0.000 ops.py:5064(_device_function_stack)
     [java]      9240    0.013    0.000    0.029    0.000 ops.py:5085(_snapshot_device_function_stack_metadata)
     [java]      9336    0.004    0.000    0.004    0.000 ops.py:5101(_device_function_stack)
     [java]     23238    0.010    0.000    0.014    0.000 ops.py:5110(_colocation_stack)
     [java]      9240    0.012    0.000    0.037    0.000 ops.py:5125(_snapshot_colocation_stack_metadata)
     [java]      9240    0.006    0.000    0.016    0.000 ops.py:5127(<dictcomp>)
     [java]      2516    0.001    0.000    0.001    0.000 ops.py:5132(_colocation_stack)
     [java]     32072    0.019    0.000    0.031    0.000 ops.py:5141(_control_dependencies_stack)
     [java]      5324    0.002    0.000    0.002    0.000 ops.py:5153(_control_dependencies_stack)
     [java]      6301    0.003    0.000    0.005    0.000 ops.py:5160(_distribution_strategy_stack)
     [java]      3312    0.001    0.000    0.001    0.000 ops.py:5167(_distribution_strategy_stack)
     [java]        94    0.000    0.000    0.002    0.000 ops.py:517(_shape_as_list)
     [java]      9240    0.008    0.000    0.029    0.000 ops.py:5183(_mutation_lock)
     [java]        94    0.000    0.000    0.000    0.000 ops.py:519(<listcomp>)
     [java]        16    0.000    0.000    0.000    0.000 ops.py:5190(_session_run_lock)
     [java]      2172    0.004    0.000    0.109    0.000 ops.py:5202(device)
     [java]        94    0.000    0.000    0.002    0.000 ops.py:523(_shape_tuple)
     [java]      1546    0.004    0.000    0.015    0.000 ops.py:5291(_colocate_with_for_gradient)
     [java]      1546    0.001    0.000    0.016    0.000 ops.py:5314(colocate_with)
     [java]      3398    0.005    0.000    0.036    0.000 ops.py:5325(control_dependencies)
     [java]      1114    0.001    0.000    0.006    0.000 ops.py:537(get_shape)
     [java]      8286    0.006    0.000    0.006    0.000 ops.py:5370(get_default)
     [java]     63274    0.061    0.000    0.076    0.000 ops.py:5387(get_controller)
     [java]      8286    0.016    0.000    0.022    0.000 ops.py:5457(get_default_session)
     [java]     90722    0.043    0.000    0.044    0.000 ops.py:5557(get_default)
     [java]     63274    0.292    0.000    0.942    0.000 ops.py:5580(get_controller)
     [java]     14852    0.044    0.000    0.081    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
     [java]      4404    0.031    0.000    0.221    0.000 ops.py:5639(init_scope)
     [java]     12650    0.031    0.000    0.460    0.000 ops.py:5744(executing_eagerly_outside_functions)
     [java]      9998    0.012    0.000    0.031    0.000 ops.py:5777(inside_function)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:5870(disable_eager_execution)
     [java]     90722    0.151    0.000    0.195    0.000 ops.py:6006(get_default_graph)
     [java]       626    0.001    0.000    0.001    0.000 ops.py:6025(has_default_graph)
     [java]      3418    0.002    0.000    0.007    0.000 ops.py:6050(_assert_same_graph)
     [java]     17016    0.056    0.000    0.118    0.000 ops.py:6068(_get_graph_from_inputs)
     [java]         2    0.000    0.000    0.000    0.000 ops.py:618(set_shape)
     [java]         1    0.000    0.000    0.000    0.000 ops.py:6304(add_to_collection)
     [java]       542    0.001    0.000    0.005    0.000 ops.py:6324(add_to_collections)
     [java]       184    0.000    0.000    0.001    0.000 ops.py:6368(get_collection)
     [java]     13735    0.018    0.000    0.051    0.000 ops.py:6402(name_scope)
     [java]     13735    0.010    0.000    0.011    0.000 ops.py:6454(__init__)
     [java]     13735    0.030    0.000    0.353    0.000 ops.py:6473(__enter__)
     [java]     13735    0.016    0.000    0.051    0.000 ops.py:6513(__exit__)
     [java]       391    0.000    0.000    0.000    0.000 ops.py:6602(__init__)
     [java]       391    0.001    0.000    0.010    0.000 ops.py:6620(__enter__)
     [java]       391    0.001    0.000    0.002    0.000 ops.py:6654(__exit__)
     [java]      1546    0.002    0.000    0.005    0.000 ops.py:6788(_op_to_colocate_with)
     [java]      9240    0.047    0.000    0.051    0.000 ops.py:6899(_reconstruct_sequence_inputs)
     [java]        92    0.001    0.000    0.003    0.000 ops.py:6958(set_int_list_attr)
     [java]       990    0.000    0.000    0.000    0.000 ops.py:764(value_index)
     [java]      4022    0.005    0.000    0.018    0.000 ops.py:769(consumers)
     [java]      4022    0.003    0.000    0.008    0.000 ops.py:778(<listcomp>)
     [java]     22276    0.006    0.000    0.006    0.000 ops.py:803(_as_tf_output)
     [java]       542    0.003    0.000    0.015    0.000 ops.py:822(__repr__)
     [java]      1578    0.002    0.000    0.064    0.000 ops.py:826(__hash__)
     [java]      5958    0.003    0.000    0.004    0.000 ops.py:927(ref)
     [java]         4    0.000    0.000    0.000    0.000 optimizer_v2.py:1011(weights)
     [java]         2    0.000    0.000    2.979    1.490 optimizer_v2.py:1047(set_weights)
     [java]        10    0.000    0.000    0.033    0.003 optimizer_v2.py:1095(add_weight)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:1137(_init_set_name)
     [java]       288    0.001    0.000    0.003    0.000 optimizer_v2.py:1265(_restore_slot_variable)
     [java]         8    0.000    0.000    0.000    0.000 optimizer_v2.py:1338(_distribution_strategy_scope)
     [java]       576    0.001    0.000    0.002    0.000 optimizer_v2.py:1348(_var_key)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:284(__init__)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:390(clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:400(clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:410(global_clipnorm)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:425(clipvalue)
     [java]         8    0.000    0.000    0.000    0.000 optimizer_v2.py:735(_set_hyper)
     [java]         2    0.000    0.000    1.255    0.627 optimizer_v2.py:768(_create_all_weights)
     [java] 2318/2206    0.002    0.000    0.009    0.000 optimizer_v2.py:785(__getattribute__)
     [java]   128/116    0.000    0.000    0.000    0.000 optimizer_v2.py:808(__setattr__)
     [java]       288    0.005    0.000    1.221    0.004 optimizer_v2.py:822(add_slot)
     [java]         2    0.000    0.000    0.026    0.013 optimizer_v2.py:895(_create_hypers)
     [java]         2    0.000    0.000    0.007    0.004 optimizer_v2.py:916(iterations)
     [java]         2    0.000    0.000    0.000    0.000 optimizer_v2.py:971(from_config)
     [java]         2    0.000    0.000    0.001    0.000 optimizers.py:49(deserialize)
     [java]         2    0.000    0.000    0.000    0.000 optimizers.py:90(get)
     [java]         4    0.000    0.000    0.000    0.000 origin_info.py:162(__init__)
     [java]         2    0.000    0.000    0.000    0.000 origin_info.py:169(__init__)
     [java]       230    0.000    0.000    0.000    0.000 origin_info.py:191(_absolute_lineno)
     [java]       230    0.000    0.000    0.000    0.000 origin_info.py:194(_absolute_col_offset)
     [java]       230    0.001    0.000    0.002    0.000 origin_info.py:197(_attach_origin_info)
     [java]     384/2    0.000    0.000    0.004    0.002 origin_info.py:212(visit)
     [java]         2    0.000    0.000    0.007    0.004 origin_info.py:226(resolve)
     [java]         1    0.000    0.000    0.003    0.003 origin_info.py:271(resolve_entity)
     [java]       122    0.000    0.000    0.000    0.000 origin_info.py:57(line_loc)
     [java]         1    0.001    0.001    0.014    0.014 origin_info.py:89(create_source_map)
     [java]        57    0.000    0.000    0.000    0.000 os.py:674(__getitem__)
     [java]        57    0.000    0.000    0.000    0.000 os.py:754(encode)
     [java]        56    0.000    0.000    0.000    0.000 os.py:771(getenv)
     [java]         4    0.000    0.000    0.000    0.000 os.py:804(fsencode)
     [java]         1    0.000    0.000    0.016    0.016 parser.py:133(parse_entity)
     [java]         1    0.000    0.000    0.000    0.000 parser.py:162(<genexpr>)
     [java]        36    0.000    0.000    0.010    0.000 parser.py:323(parse)
     [java]         6    0.000    0.000    0.000    0.000 parser.py:347(parse_expression)
     [java]         1    0.000    0.000    0.003    0.003 parser.py:366(unparse)
     [java]         1    0.000    0.000    0.000    0.000 parser.py:60(_unfold_continuations)
     [java]         1    0.000    0.000    0.001    0.001 parser.py:65(dedent_block)
     [java]       178    0.001    0.000    0.001    0.000 policy.py:194(__init__)
     [java]       178    0.000    0.000    0.001    0.000 policy.py:205(_parse_name)
     [java]      9212    0.003    0.000    0.003    0.000 policy.py:255(variable_dtype)
     [java]       802    0.000    0.000    0.000    0.000 policy.py:271(compute_dtype)
     [java]       180    0.000    0.000    0.000    0.000 policy.py:299(name)
     [java]         6    0.000    0.000    0.000    0.000 policy.py:420(global_policy)
     [java]         1    0.000    0.000    0.000    0.000 pool.py:157(__init__)
     [java]         1    0.000    0.000    0.012    0.012 pool.py:183(__init__)
     [java]         1    0.000    0.000    0.001    0.001 pool.py:302(_repopulate_pool)
     [java]         1    0.000    0.000    0.001    0.001 pool.py:311(_repopulate_pool_static)
     [java]         4    0.000    0.000    0.000    0.000 pool.py:921(Process)
     [java]         1    0.000    0.000    0.012    0.012 pool.py:926(__init__)
     [java]         1    0.000    0.000    0.000    0.000 pool.py:929(_setup_queues)
     [java]         1    0.000    0.000    0.000    0.000 pool.py:935(_get_sentinels)
     [java]         1    0.000    0.000    0.000    0.000 posixpath.py:140(basename)
     [java]         3    0.000    0.000    0.000    0.000 posixpath.py:334(normpath)
     [java]         3    0.000    0.000    0.000    0.000 posixpath.py:372(abspath)
     [java]         7    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
     [java]         3    0.000    0.000    0.000    0.000 posixpath.py:60(isabs)
     [java]         3    0.000    0.000    0.000    0.000 posixpath.py:71(join)
     [java]         1    0.002    0.002    0.009    0.009 precompute.py:11(precompute_action_index)
     [java]         1    0.004    0.004    0.006    0.006 precompute.py:18(precompute_reverse_action_index)
     [java]         1    0.010    0.010    0.014    0.014 precompute.py:28(precompute_get_coord)
     [java]         1    0.003    0.003    0.004    0.004 precompute.py:37(precompute_get_3D_coord)
     [java]         1    0.000    0.000    0.033    0.033 precompute.py:54(precompute_all)
     [java]         2    0.000    0.000    0.000    0.000 process.py:37(current_process)
     [java]         1    0.000    0.000    0.000    0.000 pywrap_tf_session.py:51(TF_NewSessionOptions)
     [java]       557    0.000    0.000    0.000    0.000 qual_names.py:104(has_subscript)
     [java]       557    0.000    0.000    0.000    0.000 qual_names.py:107(has_attr)
     [java] 1522/1430    0.001    0.000    0.001    0.000 qual_names.py:155(__hash__)
     [java]   269/251    0.000    0.000    0.001    0.000 qual_names.py:158(__eq__)
     [java]      19/9    0.000    0.000    0.000    0.000 qual_names.py:163(__str__)
     [java]       442    0.001    0.000    0.006    0.000 qual_names.py:216(visit_Name)
     [java]   193/172    0.001    0.000    0.005    0.000 qual_names.py:221(visit_Attribute)
     [java]        43    0.000    0.000    0.013    0.000 qual_names.py:251(resolve)
     [java]       633    0.001    0.000    0.001    0.000 qual_names.py:60(__init__)
     [java]         1    0.000    0.000    0.000    0.000 queues.py:10(<module>)
     [java]         1    0.000    0.000    0.000    0.000 queues.py:295(JoinableQueue)
     [java]         1    0.000    0.000    0.000    0.000 queues.py:338(SimpleQueue)
     [java]         1    0.000    0.000    0.005    0.005 queues.py:340(__init__)
     [java]         1    0.000    0.000    0.000    0.000 queues.py:35(Queue)
     [java]         2    0.000    0.000    0.000    0.000 random.py:117(__init__)
     [java]         2    0.000    0.000    0.000    0.000 random.py:126(seed)
     [java]      9688    0.011    0.000    0.015    0.000 random.py:238(_randbelow_with_getrandbits)
     [java]        24    0.000    0.000    0.000    0.000 random.py:344(choice)
     [java]      2852    0.016    0.000    0.032    0.000 random.py:349(shuffle)
     [java]        50    0.001    0.000    0.159    0.003 random_ops.py:159(truncated_normal)
     [java]         2    0.000    0.000    0.007    0.004 random_ops.py:208(random_uniform)
     [java]        52    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
     [java]        43    0.000    0.000    0.000    0.000 re.py:203(sub)
     [java]       679    0.000    0.000    0.008    0.000 re.py:250(compile)
     [java]       722    0.001    0.000    0.008    0.000 re.py:289(_compile)
     [java]        32    0.000    0.000    0.000    0.000 re.py:325(_subx)
     [java]        10    0.000    0.000    0.000    0.000 re.py:331(filter)
     [java]        38    0.000    0.000    0.000    0.000 reaching_definitions.py:101(__sub__)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:115(__init__)
     [java]        38    0.000    0.000    0.000    0.000 reaching_definitions.py:120(init_state)
     [java]        19    0.000    0.000    0.002    0.000 reaching_definitions.py:123(visit_node)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:181(__init__)
     [java]         2    0.000    0.000    0.005    0.002 reaching_definitions.py:189(visit_FunctionDef)
     [java]        74    0.000    0.000    0.001    0.000 reaching_definitions.py:204(visit_Name)
     [java]         2    0.000    0.000    0.000    0.000 reaching_definitions.py:226(_aggregate_predecessors_defined_in)
     [java]         1    0.000    0.000    0.000    0.000 reaching_definitions.py:257(visit_Try)
     [java]         1    0.000    0.000    0.000    0.000 reaching_definitions.py:261(visit_ExceptHandler)
     [java]     213/2    0.000    0.000    0.005    0.002 reaching_definitions.py:267(visit)
     [java]         2    0.000    0.000    0.005    0.002 reaching_definitions.py:279(resolve)
     [java]        22    0.000    0.000    0.000    0.000 reaching_definitions.py:51(__init__)
     [java]       169    0.000    0.000    0.000    0.000 reaching_definitions.py:69(__init__)
     [java]        93    0.000    0.000    0.000    0.000 reaching_definitions.py:72(<dictcomp>)
     [java]        16    0.000    0.000    0.000    0.000 reaching_definitions.py:76(<dictcomp>)
     [java]        19    0.000    0.000    0.000    0.000 reaching_definitions.py:82(__eq__)
     [java]        19    0.000    0.000    0.000    0.000 reaching_definitions.py:88(__ne__)
     [java]        55    0.000    0.000    0.001    0.000 reaching_definitions.py:91(__or__)
     [java]         1    0.000    0.000    0.000    0.000 reaching_fndefs.py:122(__init__)
     [java]         1    0.000    0.000    0.003    0.003 reaching_fndefs.py:128(_proces_function)
     [java]         1    0.000    0.000    0.003    0.003 reaching_fndefs.py:147(visit_FunctionDef)
     [java]     202/1    0.000    0.000    0.003    0.003 reaching_fndefs.py:153(visit)
     [java]         1    0.000    0.000    0.003    0.003 reaching_fndefs.py:170(resolve)
     [java]        39    0.000    0.000    0.000    0.000 reaching_fndefs.py:49(__init__)
     [java]        13    0.000    0.000    0.000    0.000 reaching_fndefs.py:58(__ne__)
     [java]        12    0.000    0.000    0.000    0.000 reaching_fndefs.py:61(__or__)
     [java]         1    0.000    0.000    0.000    0.000 reaching_fndefs.py:79(__init__)
     [java]        26    0.000    0.000    0.000    0.000 reaching_fndefs.py:85(init_state)
     [java]        13    0.000    0.000    0.000    0.000 reaching_fndefs.py:88(visit_node)
     [java]        52    0.000    0.000    0.001    0.000 regularizers.py:174(from_config)
     [java]        52    0.000    0.000    0.001    0.000 regularizers.py:311(__init__)
     [java]       104    0.001    0.000    0.345    0.003 regularizers.py:321(__call__)
     [java]        52    0.000    0.000    0.000    0.000 regularizers.py:33(_check_penalty_number)
     [java]        52    0.000    0.000    0.004    0.000 regularizers.py:358(deserialize)
     [java]       802    0.000    0.000    0.004    0.000 regularizers.py:371(get)
     [java]       542    0.002    0.000    0.017    0.000 resource_variable_ops.py:108(_combine_handle_data)
     [java]       532    0.001    0.000    0.495    0.001 resource_variable_ops.py:1384(_dense_var_to_tensor)
     [java]       542    0.003    0.000    0.372    0.001 resource_variable_ops.py:142(_variable_handle_from_shape_and_dtype)
     [java]       542    0.002    0.000    2.160    0.004 resource_variable_ops.py:1486(__init__)
     [java]       542    0.036    0.000    2.158    0.004 resource_variable_ops.py:1587(_init_from_args)
     [java]       542    0.001    0.000    0.374    0.001 resource_variable_ops.py:192(eager_safe_variable_handle)
     [java]       532    0.001    0.000    0.496    0.001 resource_variable_ops.py:1991(_dense_var_to_tensor)
     [java]       626    0.006    0.000    0.373    0.001 resource_variable_ops.py:2007(__init__)
     [java]       208    0.000    0.000    0.000    0.000 resource_variable_ops.py:2129(op)
     [java]      1252    0.001    0.000    0.004    0.000 resource_variable_ops.py:240(_handle_graph)
     [java]      1792    0.002    0.000    0.007    0.000 resource_variable_ops.py:312(_maybe_set_handle_data)
     [java]      1250    0.003    0.000    0.015    0.000 resource_variable_ops.py:323(variable_accessed)
     [java]      1168    0.011    0.000    0.142    0.000 resource_variable_ops.py:335(__init__)
     [java]       200    0.000    0.000    0.000    0.000 resource_variable_ops.py:453(_assign_dependencies)
     [java]      3938    0.001    0.000    0.001    0.000 resource_variable_ops.py:508(dtype)
     [java]       922    0.001    0.000    0.004    0.000 resource_variable_ops.py:513(device)
     [java]      1084    0.001    0.000    0.002    0.000 resource_variable_ops.py:518(graph)
     [java]      2212    0.000    0.000    0.000    0.000 resource_variable_ops.py:523(name)
     [java]       380    0.000    0.000    0.000    0.000 resource_variable_ops.py:528(shape)
     [java]      2934    0.001    0.000    0.001    0.000 resource_variable_ops.py:555(handle)
     [java]       624    0.002    0.000    0.535    0.001 resource_variable_ops.py:560(value)
     [java]      1316    0.000    0.000    0.000    0.000 resource_variable_ops.py:567(_as_graph_element)
     [java]      1084    0.000    0.000    0.000    0.000 resource_variable_ops.py:571(initializer)
     [java]      1494    0.000    0.000    0.000    0.000 resource_variable_ops.py:598(trainable)
     [java]       624    0.003    0.000    0.514    0.001 resource_variable_ops.py:658(_read_variable_op)
     [java]       624    0.001    0.000    0.499    0.001 resource_variable_ops.py:661(read_and_set_handle)
     [java]       542    0.001    0.000    0.012    0.000 resource_variable_ops.py:70(get_eager_safe_handle_data)
     [java]       542    0.002    0.000    0.236    0.000 resource_variable_ops.py:780(is_initialized)
     [java]        92    0.001    0.000    0.114    0.001 resource_variable_ops.py:799(assign_sub)
     [java]       542    0.004    0.000    0.013    0.000 resource_variable_ops.py:80(_set_handle_shapes_and_types)
     [java]         8    0.000    0.000    0.008    0.001 resource_variable_ops.py:827(assign_add)
     [java]       626    0.003    0.000    0.383    0.001 resource_variable_ops.py:852(_lazy_read)
     [java]       526    0.004    0.000    0.550    0.001 resource_variable_ops.py:863(assign)
     [java]       542    0.003    0.000    0.003    0.000 resource_variable_ops.py:93(<listcomp>)
     [java]       542    0.001    0.000    0.001    0.000 resource_variable_ops.py:95(<listcomp>)
     [java]       542    0.001    0.000    0.002    0.000 resource_variable_ops.py:96(<listcomp>)
     [java]       542    0.001    0.000    0.001    0.000 resource_variable_ops.py:97(<listcomp>)
     [java]         1    0.000    0.000    0.001    0.001 return_statements.py:113(visit_With)
     [java]         1    0.000    0.000    0.001    0.001 return_statements.py:153(visit_FunctionDef)
     [java]         4    0.000    0.000    0.000    0.000 return_statements.py:161(__init__)
     [java]         2    0.000    0.000    0.000    0.000 return_statements.py:174(__init__)
     [java]         1    0.000    0.000    0.000    0.000 return_statements.py:223(__init__)
     [java]         1    0.000    0.000    0.001    0.001 return_statements.py:227(visit_Return)
     [java]         6    0.000    0.000    0.000    0.000 return_statements.py:254(_postprocess_statement)
     [java]       2/1    0.000    0.000    0.002    0.002 return_statements.py:277(_visit_statement_block)
     [java]         1    0.000    0.000    0.002    0.002 return_statements.py:319(visit_With)
     [java]         1    0.000    0.000    0.006    0.006 return_statements.py:341(visit_FunctionDef)
     [java]         3    0.000    0.000    0.000    0.000 return_statements.py:39(__init__)
     [java]         1    0.000    0.000    0.012    0.012 return_statements.py:392(transform)
     [java]         1    0.000    0.000    0.000    0.000 return_statements.py:70(visit_Return)
     [java]         6    0.000    0.000    0.000    0.000 return_statements.py:74(_postprocess_statement)
     [java]       2/1    0.000    0.000    0.001    0.001 return_statements.py:93(_visit_statement_block)
     [java]         1    0.000    0.000    0.000    0.000 running_trials.py:25(check_if_first_step)
     [java]         2    0.003    0.001   11.810    5.905 save.py:160(load_model)
     [java]         2    0.000    0.000    0.001    0.001 saving_utils.py:205(compile_args_from_training_config)
     [java]       6/2    0.000    0.000    0.000    0.000 saving_utils.py:246(_deserialize_nested_config)
     [java]         6    0.000    0.000    0.000    0.000 saving_utils.py:249(_is_single_object)
     [java]         2    0.000    0.000    0.000    0.000 saving_utils.py:261(<dictcomp>)
     [java]         2    0.000    0.000    0.000    0.000 saving_utils.py:314(try_build_compiled_arguments)
     [java]      1052    0.006    0.000    0.006    0.000 selections.py:147(__init__)
     [java]       526    0.000    0.000    0.000    0.000 selections.py:158(id)
     [java]      3682    0.000    0.000    0.000    0.000 selections.py:163(shape)
     [java]       526    0.000    0.000    0.000    0.000 selections.py:239(mshape)
     [java]      1052    0.003    0.000    0.010    0.000 selections.py:244(__init__)
     [java]      1052    0.006    0.000    0.018    0.000 selections.py:272(broadcast)
     [java]       524    0.000    0.000    0.000    0.000 selections.py:301(<listcomp>)
     [java]      1480    0.000    0.000    0.000    0.000 selections.py:309(<genexpr>)
     [java]       938    0.001    0.000    0.006    0.000 serialization.py:105(<lambda>)
     [java]       255    0.000    0.000    0.001    0.000 serialization.py:112(<lambda>)
     [java]     174/2    0.000    0.000    3.841    1.920 serialization.py:160(deserialize)
     [java]       174    0.000    0.000    0.010    0.000 serialization.py:85(populate_deserializable_objects)
     [java]        14    0.005    0.000    3.926    0.280 session.py:1102(_run)
     [java]       526    0.001    0.000    0.002    0.000 session.py:1105(_feed_fn)
     [java]        14    0.000    0.000    3.793    0.271 session.py:1328(_do_run)
     [java]      1362    0.001    0.000    0.001    0.000 session.py:134(<lambda>)
     [java]       526    0.000    0.000    0.000    0.000 session.py:135(<lambda>)
     [java]       540    0.000    0.000    0.001    0.000 session.py:1350(<genexpr>)
     [java]        14    0.000    0.000    0.001    0.000 session.py:1351(<listcomp>)
     [java]        14    0.000    0.000    0.000    0.000 session.py:1352(<listcomp>)
     [java]        14    0.000    0.000    3.791    0.271 session.py:1356(_run_fn)
     [java]        14    0.000    0.000    3.791    0.271 session.py:1373(_do_call)
     [java]        16    0.000    0.000    2.345    0.147 session.py:1396(_extend_graph)
     [java]        14    0.000    0.000    0.002    0.000 session.py:1423(_update_with_movers)
     [java]        14    0.000    0.000    1.997    0.143 session.py:1449(_call_tf_sessionrun)
     [java]         2    0.000    0.000    0.809    0.405 session.py:1463(__init__)
     [java]      8280    0.031    0.000   28.451    0.003 session.py:1474(__call__)
     [java]         2    0.000    0.000    1.360    0.680 session.py:1504(_make_callable_from_options)
     [java]         1    0.000    0.000    0.760    0.760 session.py:1575(__init__)
     [java]      1362    0.001    0.000    0.002    0.000 session.py:201(_is_attrs_instance)
     [java]   1372/14    0.004    0.000    0.038    0.003 session.py:249(for_fetch)
     [java]      1362    0.002    0.000    0.014    0.000 session.py:287(__init__)
     [java]      1362    0.000    0.000    0.000    0.000 session.py:320(unique_fetches)
     [java]      1362    0.000    0.000    0.001    0.000 session.py:323(build_results)
     [java]        10    0.002    0.000    0.003    0.000 session.py:331(_uniquify_fetches)
     [java]        10    0.000    0.000    0.038    0.004 session.py:370(__init__)
     [java]        10    0.001    0.000    0.035    0.003 session.py:380(<listcomp>)
     [java]        10    0.000    0.000    0.000    0.000 session.py:383(unique_fetches)
     [java]        10    0.001    0.000    0.002    0.000 session.py:386(build_results)
     [java]      1358    0.000    0.000    0.000    0.000 session.py:390(<listcomp>)
     [java]        14    0.004    0.000    0.054    0.004 session.py:474(__init__)
     [java]        14    0.001    0.000    0.003    0.000 session.py:508(<listcomp>)
     [java]      1362    0.001    0.000    0.001    0.000 session.py:510(_assert_fetchable)
     [java]        14    0.000    0.000    0.000    0.000 session.py:519(fetches)
     [java]        14    0.000    0.000    0.000    0.000 session.py:527(targets)
     [java]        14    0.004    0.000    0.014    0.001 session.py:535(build_results)
     [java]         1    0.000    0.000    0.760    0.760 session.py:644(__init__)
     [java]     18163    0.005    0.000    0.005    0.000 session.py:784(graph)
     [java]        14    0.000    0.000    3.926    0.280 session.py:858(run)
     [java]       526    0.000    0.000    0.001    0.000 session_ops.py:250(_get_handle_feeder)
     [java]       526    0.000    0.000    0.001    0.000 session_ops.py:270(_get_handle_mover)
     [java]      5520    0.001    0.000    0.001    0.000 shape_base.py:508(_expand_dims_dispatcher)
     [java]      5520    0.032    0.000    0.084    0.000 shape_base.py:512(expand_dims)
     [java]      5520    0.008    0.000    0.010    0.000 shape_base.py:600(<listcomp>)
     [java]      9109    0.011    0.000    0.016    0.000 six.py:604(iteritems)
     [java]        92    0.000    0.000    1.729    0.019 smart_cond.py:27(smart_cond)
     [java]        92    0.000    0.000    0.005    0.000 smart_cond.py:62(smart_constant_value)
     [java]        59    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
     [java]        59    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
     [java]         6    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
     [java]         6    0.000    0.000    0.000    0.000 sre_compile.py:413(<listcomp>)
     [java]        62    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
     [java]         4    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
     [java]         2    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
     [java]         3    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
     [java]         6    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
     [java]         3    0.000    0.000    0.002    0.001 sre_compile.py:598(_code)
     [java]        26    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
     [java]     281/3    0.001    0.000    0.002    0.001 sre_compile.py:71(_compile)
     [java]         3    0.000    0.000    0.007    0.002 sre_compile.py:759(compile)
     [java]        10    0.000    0.000    0.000    0.000 sre_parse.py:1054(expand_template)
     [java]       306    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
     [java]       480    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
     [java]      1552    0.001    0.000    0.001    0.000 sre_parse.py:164(__getitem__)
     [java]        63    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
     [java]       458    0.000    0.000    0.001    0.000 sre_parse.py:172(append)
     [java]    307/30    0.000    0.000    0.001    0.000 sre_parse.py:174(getwidth)
     [java]         3    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
     [java]       969    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
     [java]       512    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
     [java]       685    0.000    0.000    0.001    0.000 sre_parse.py:254(get)
     [java]       216    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
     [java]        12    0.000    0.000    0.000    0.000 sre_parse.py:295(_class_escape)
     [java]        55    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
     [java]        51    0.000    0.000    0.000    0.000 sre_parse.py:432(_uniq)
     [java]      53/3    0.000    0.000    0.005    0.002 sre_parse.py:435(_parse_sub)
     [java]     222/6    0.002    0.000    0.005    0.001 sre_parse.py:493(_parse)
     [java]         3    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
     [java]        59    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
     [java]        26    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
     [java]         1    0.000    0.000    0.000    0.000 sre_parse.py:861(_parse_flags)
     [java]         3    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
     [java]         3    0.000    0.000    0.005    0.002 sre_parse.py:937(parse)
     [java]        26    0.000    0.000    0.001    0.000 sre_parse.py:96(closegroup)
     [java]       542    0.001    0.000    0.238    0.000 state_ops.py:117(is_variable_initialized)
     [java]        92    0.000    0.000    0.115    0.001 state_ops.py:136(assign_sub)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:10(<module>)
     [java]         2    0.000    0.000    0.000    0.000 synchronize.py:114(_make_name)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:123(Semaphore)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:142(BoundedSemaphore)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:159(Lock)
     [java]         2    0.000    0.000    0.000    0.000 synchronize.py:161(__init__)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:184(RLock)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:210(Condition)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:321(Event)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:360(Barrier)
     [java]         1    0.000    0.000    0.000    0.000 synchronize.py:46(SemLock)
     [java]         2    0.000    0.000    0.000    0.000 synchronize.py:50(__init__)
     [java]         2    0.000    0.000    0.000    0.000 synchronize.py:90(_make_methods)
     [java]       484    0.002    0.000    0.006    0.000 tape.py:108(variable_accessed)
     [java]      4404    0.003    0.000    0.006    0.000 tape.py:154(stop_recording)
     [java]      1084    0.001    0.000    0.002    0.000 tape.py:181(record_operation)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:106(_sanitize_params)
     [java]         3    0.000    0.000    0.000    0.000 tempfile.py:134(rng)
     [java]         3    0.000    0.000    0.000    0.000 tempfile.py:145(__next__)
     [java]         3    0.000    0.000    0.000    0.000 tempfile.py:148(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:225(_get_candidate_names)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:239(_mkstemp_inner)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:280(gettempdir)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:415(__init__)
     [java]         2    0.000    0.000    0.000    0.000 tempfile.py:430(close)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:440(__del__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:458(__init__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:464(__getattr__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:472(func_wrapper)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:485(__enter__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:491(__exit__)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:496(close)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:513(NamedTemporaryFile)
     [java]         1    0.000    0.000    0.000    0.000 tempfile.py:85(_infer_return_type)
     [java]        32    0.000    0.000    0.000    0.000 templates.py:111(__init__)
     [java]        66    0.000    0.000    0.014    0.000 templates.py:129(_prepare_replacement)
     [java]        29    0.000    0.000    0.015    0.001 templates.py:146(visit_Expr)
     [java]       2/1    0.000    0.000    0.006    0.006 templates.py:172(visit_FunctionDef)
     [java]        27    0.000    0.000    0.000    0.000 templates.py:185(visit_Attribute)
     [java]        92    0.000    0.000    0.015    0.000 templates.py:197(visit_Name)
     [java]     75/64    0.000    0.000    0.000    0.000 templates.py:218(_convert_to_ast)
     [java]         5    0.000    0.000    0.000    0.000 templates.py:228(<listcomp>)
     [java]        28    0.000    0.000    0.028    0.001 templates.py:234(replace)
     [java]        28    0.000    0.000    0.006    0.000 templates.py:275(<listcomp>)
     [java]        24    0.000    0.000    0.012    0.000 templates.py:279(replace_as_expression)
     [java]        64    0.000    0.000    0.000    0.000 templates.py:43(__init__)
     [java]    153/51    0.000    0.000    0.001    0.000 templates.py:46(visit)
     [java]        75    0.000    0.000    0.000    0.000 templates.py:54(_apply_override)
     [java]     11/10    0.000    0.000    0.000    0.000 templates.py:58(visit_Attribute)
     [java]       8/7    0.000    0.000    0.000    0.000 templates.py:64(visit_Tuple)
     [java]        55    0.000    0.000    0.001    0.000 templates.py:72(visit_Name)
     [java]         1    0.000    0.000    0.000    0.000 templates.py:76(visit_Call)
     [java]      1039    0.001    0.000    0.002    0.000 tensor_conversion_registry.py:114(get)
     [java]        17    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:135(<genexpr>)
     [java]       439    0.000    0.000    0.170    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
     [java]      1306    0.005    0.000    0.011    0.000 tensor_shape.py:1074(is_compatible_with)
     [java]       506    0.001    0.000    0.004    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
     [java]       506    0.000    0.000    0.001    0.000 tensor_shape.py:1160(<listcomp>)
     [java]       236    0.000    0.000    0.001    0.000 tensor_shape.py:1166(is_fully_defined)
     [java]       616    0.000    0.000    0.000    0.000 tensor_shape.py:1169(<genexpr>)
     [java]     10171    0.010    0.000    0.031    0.000 tensor_shape.py:1180(as_list)
     [java]     10171    0.015    0.000    0.021    0.000 tensor_shape.py:1191(<listcomp>)
     [java]      3248    0.017    0.000    0.025    0.000 tensor_shape.py:1193(as_proto)
     [java]      3248    0.008    0.000    0.008    0.000 tensor_shape.py:1198(<listcomp>)
     [java]      7891    0.005    0.000    0.016    0.000 tensor_shape.py:1230(as_shape)
     [java]     50516    0.029    0.000    0.035    0.000 tensor_shape.py:187(__init__)
     [java]       280    0.000    0.000    0.000    0.000 tensor_shape.py:217(__eq__)
     [java]     53986    0.010    0.000    0.010    0.000 tensor_shape.py:249(value)
     [java]      2292    0.002    0.000    0.003    0.000 tensor_shape.py:254(is_compatible_with)
     [java]     10854    0.012    0.000    0.024    0.000 tensor_shape.py:706(as_dimension)
     [java]     16706    0.021    0.000    0.081    0.000 tensor_shape.py:748(__init__)
     [java]     16208    0.029    0.000    0.055    0.000 tensor_shape.py:758(<listcomp>)
     [java]      1282    0.000    0.000    0.000    0.000 tensor_shape.py:792(_v2_behavior)
     [java]       542    0.002    0.000    0.003    0.000 tensor_shape.py:807(__str__)
     [java]       542    0.000    0.000    0.000    0.000 tensor_shape.py:817(<genexpr>)
     [java]      7127    0.003    0.000    0.004    0.000 tensor_shape.py:821(rank)
     [java]      4356    0.001    0.000    0.001    0.000 tensor_shape.py:828(dims)
     [java]      1773    0.001    0.000    0.002    0.000 tensor_shape.py:840(ndims)
     [java]       530    0.000    0.000    0.000    0.000 tensor_shape.py:845(__len__)
     [java]       254    0.000    0.000    0.000    0.000 tensor_shape.py:851(__bool__)
     [java]       684    0.001    0.000    0.001    0.000 tensor_shape.py:858(__iter__)
     [java]      1720    0.001    0.000    0.001    0.000 tensor_shape.py:864(<genexpr>)
     [java]        60    0.000    0.000    0.000    0.000 tensor_shape.py:868(__getitem__)
     [java]         4    0.000    0.000    0.000    0.000 tensor_shape.py:918(num_elements)
     [java]       206    0.000    0.000    0.000    0.000 tensor_shape.py:99(dimension_value)
     [java]      8282    0.039    0.000    0.146    0.000 tensor_spec.py:39(__init__)
     [java]      8282    0.003    0.000    0.003    0.000 tensor_spec.py:63(shape)
     [java]        52    0.000    0.000    0.027    0.001 tensor_util.py:1023(shape_tensor)
     [java]       158    0.000    0.000    0.001    0.000 tensor_util.py:1042(maybe_set_static_shape)
     [java]       955    0.003    0.000    0.004    0.000 tensor_util.py:187(GetFromNumpyDTypeDict)
     [java]       955    0.001    0.000    0.006    0.000 tensor_util.py:195(GetNumpyAppendFn)
     [java]  1153/995    0.001    0.000    0.001    0.000 tensor_util.py:220(_GetDenseDimensions)
     [java]       808    0.001    0.000    0.008    0.000 tensor_util.py:264(inner)
     [java]       187    0.000    0.000    0.001    0.000 tensor_util.py:281(_check_not_tensor)
     [java]       187    0.000    0.000    0.000    0.000 tensor_util.py:282(<listcomp>)
     [java]       995    0.002    0.000    0.011    0.000 tensor_util.py:310(_AssertCompatible)
     [java]      1207    0.005    0.000    0.006    0.000 tensor_util.py:340(_is_array_like)
     [java]      1207    0.031    0.000    0.111    0.000 tensor_util.py:361(make_tensor_proto)
     [java]       390    0.000    0.000    0.001    0.000 tensor_util.py:500(<listcomp>)
     [java]       138    0.001    0.000    0.004    0.000 tensor_util.py:675(_ConstantValue)
     [java]       138    0.000    0.000    0.004    0.000 tensor_util.py:805(constant_value)
     [java]     37287    0.044    0.000    0.065    0.000 tensor_util.py:992(is_tensor)
     [java]        28    0.000    0.000    0.000    0.000 textwrap.py:414(dedent)
     [java]      1130    0.000    0.000    0.000    0.000 tf2.py:42(enabled)
     [java]      1656    0.003    0.000    0.028    0.000 tf_contextlib.py:25(contextmanager)
     [java]     11942    0.006    0.000    0.012    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
     [java]         1    0.000    0.000    0.000    0.000 tf_decorator.py:128(rewrap)
     [java]     11881    0.014    0.000    0.029    0.000 tf_decorator.py:200(unwrap)
     [java]      1681    0.004    0.000    0.004    0.000 tf_decorator.py:236(__init__)
     [java]       121    0.000    0.000    0.000    0.000 tf_decorator.py:262(decorated_target)
     [java]         1    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
     [java]      1681    0.005    0.000    0.011    0.000 tf_decorator.py:67(make_decorator)
     [java]       968    0.002    0.000    0.047    0.000 tf_inspect.py:238(getfullargspec)
     [java]       102    0.001    0.000    0.010    0.000 tf_inspect.py:260(getcallargs)
     [java]       102    0.000    0.000    0.000    0.000 tf_inspect.py:283(<listcomp>)
     [java]        12    0.000    0.000    0.000    0.000 tf_inspect.py:335(getmodule)
     [java]         1    0.000    0.000    0.000    0.000 tf_inspect.py:350(getsourcefile)
     [java]         1    0.000    0.000    0.001    0.001 tf_inspect.py:355(getsourcelines)
     [java]      1830    0.003    0.000    0.010    0.000 tf_inspect.py:365(isclass)
     [java]       498    0.001    0.000    0.002    0.000 tf_inspect.py:370(isfunction)
     [java]      8280    0.019    0.000    0.047    0.000 tf_inspect.py:380(isgenerator)
     [java]         2    0.000    0.000    0.000    0.000 tf_inspect.py:385(isgeneratorfunction)
     [java]       106    0.000    0.000    0.000    0.000 tf_inspect.py:390(ismethod)
     [java]      1084    0.001    0.000    0.001    0.000 tf_should_use.py:102(_new__setattr__)
     [java]     12466    0.011    0.000    0.018    0.000 tf_should_use.py:110(_new__getattribute__)
     [java]       542    0.001    0.000    0.003    0.000 tf_should_use.py:133(_get_wrapper)
     [java]         1    0.000    0.000    0.000    0.000 tf_should_use.py:158(set_body)
     [java]       542    0.004    0.000    0.029    0.000 tf_should_use.py:175(_add_should_use_warning)
     [java]       542    0.001    0.000    0.269    0.000 tf_should_use.py:246(wrapped)
     [java]       542    0.001    0.000    0.003    0.000 tf_should_use.py:41(__init__)
     [java]     12466    0.005    0.000    0.005    0.000 tf_should_use.py:61(sate)
     [java]       542    0.000    0.000    0.000    0.000 tf_should_use.py:68(_check_sated)
     [java]       542    0.000    0.000    0.000    0.000 tf_should_use.py:92(__del__)
     [java]       542    0.000    0.000    0.002    0.000 tf_should_use.py:96(_new__init__)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:105(__init__)
     [java]        78    0.000    0.000    0.000    0.000 tf_stack.py:123(get_filtered_filenames)
     [java]     12197    0.018    0.000    0.114    0.000 tf_stack.py:131(extract_stack)
     [java]         4    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
     [java]         4    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
     [java]         2    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
     [java]   792/386    0.002    0.000    0.011    0.000 tf_utils.py:106(map_structure_with_atomic)
     [java]       190    0.000    0.000    0.000    0.000 tf_utils.py:130(<listcomp>)
     [java]   556/386    0.000    0.000    0.005    0.000 tf_utils.py:135(<listcomp>)
     [java]        20    0.000    0.000    0.001    0.000 tf_utils.py:149(convert_shapes)
     [java]        80    0.000    0.000    0.000    0.000 tf_utils.py:176(_is_shape_component)
     [java]        60    0.000    0.000    0.000    0.000 tf_utils.py:179(_is_atomic_shape)
     [java]        40    0.000    0.000    0.000    0.000 tf_utils.py:186(<genexpr>)
     [java]        40    0.000    0.000    0.000    0.000 tf_utils.py:190(_convert_shape)
     [java]       196    0.000    0.000    0.000    0.000 tf_utils.py:203(__init__)
     [java]       196    0.000    0.000    0.000    0.000 tf_utils.py:206(as_list)
     [java]       366    0.001    0.000    0.010    0.000 tf_utils.py:210(convert_inner_node_data)
     [java]       928    0.001    0.000    0.001    0.000 tf_utils.py:222(_is_serialized_node_data)
     [java]       732    0.001    0.000    0.002    0.000 tf_utils.py:230(_is_atomic_nested)
     [java]       196    0.000    0.000    0.001    0.000 tf_utils.py:238(_convert_object_or_list)
     [java]        20    0.000    0.000    0.002    0.000 tf_utils.py:267(wrapper)
     [java]       340    0.000    0.000    0.002    0.000 tf_utils.py:281(are_all_symbolic_tensors)
     [java]     24844    0.015    0.000    0.067    0.000 tf_utils.py:288(is_extension_type)
     [java]       364    0.000    0.000    0.001    0.000 tf_utils.py:305(is_symbolic_tensor)
     [java]         2    0.000    0.000    0.000    0.000 tf_utils.py:396(assert_no_legacy_layers)
     [java]         2    0.000    0.000    0.000    0.000 tf_utils.py:410(<listcomp>)
     [java]       236    0.000    0.000    0.005    0.000 tf_utils.py:421(maybe_init_scope)
     [java]         8    0.000    0.000    0.000    0.000 tf_utils.py:440(graph_context_for_symbolic_tensors)
     [java]         8    0.000    0.000    0.000    0.000 tf_utils.py:443(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 tf_utils.py:460(get_tensor_spec)
     [java]        98    0.021    0.000    0.080    0.001 tf_utils.py:51(get_reachable_from_inputs)
     [java]         4    0.000    0.000    0.000    0.000 threading.py:1053(name)
     [java]         4    0.000    0.000    0.000    0.000 threading.py:1064(name)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:1107(daemon)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:1122(daemon)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:1189(_make_invoke_excepthook)
     [java]        15    0.000    0.000    0.000    0.000 threading.py:1318(current_thread)
     [java]       192    0.001    0.000    0.001    0.000 threading.py:228(__init__)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:256(__enter__)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:259(__exit__)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:265(_release_save)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:268(_acquire_restore)
     [java]      9263    0.005    0.000    0.012    0.000 threading.py:271(_is_owned)
     [java]         7    0.000    0.000    0.001    0.000 threading.py:280(wait)
     [java]      9256    0.020    0.000    0.031    0.000 threading.py:351(notify)
     [java]      9256    0.009    0.000    0.043    0.000 threading.py:374(notify_all)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:521(__init__)
     [java]        14    0.000    0.000    0.000    0.000 threading.py:529(is_set)
     [java]         7    0.000    0.000    0.001    0.000 threading.py:556(wait)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:750(_newname)
     [java]         7    0.000    0.000    0.000    0.000 threading.py:777(__init__)
     [java]       185    0.000    0.000    0.000    0.000 threading.py:82(RLock)
     [java]         7    0.000    0.000    0.002    0.000 threading.py:855(start)
     [java]         1    0.000    0.000    0.000    0.000 tmpnmhva2on.py:2(<module>)
     [java]         1    0.000    0.000    0.000    0.000 tmpnmhva2on.py:2(outer_factory)
     [java]         2    0.000    0.000    0.000    0.000 tmpnmhva2on.py:4(inner_factory)
     [java]         2    0.000    0.000    0.042    0.021 tmpnmhva2on.py:6(tf__softmax_cross_entropy_with_logits)
     [java]         2    0.000    0.000    0.000    0.000 tokenize.py:295(detect_encoding)
     [java]         3    0.000    0.000    0.000    0.000 tokenize.py:319(read_or_stop)
     [java]         3    0.000    0.000    0.000    0.000 tokenize.py:325(find_cookie)
     [java]         2    0.000    0.000    0.001    0.001 tokenize.py:388(open)
     [java]       756    0.002    0.000    0.012    0.000 tokenize.py:429(_tokenize)
     [java]         5    0.000    0.000    0.000    0.000 tokenize.py:612(generate_tokens)
     [java]       677    0.000    0.000    0.008    0.000 tokenize.py:98(_compile)
     [java]         8    0.000    0.000    0.000    0.000 tpu.py:210(is_tpu_strategy)
     [java]        16    0.000    0.000    0.000    0.000 tpu.py:211(<lambda>)
     [java] 11657/11119    0.019    0.000    0.789    0.000 trace.py:158(wrapped)
     [java]      2932    0.002    0.000    0.003    0.000 traceable_stack.py:111(pop_obj)
     [java]      4344    0.002    0.000    0.002    0.000 traceable_stack.py:115(peek_top_obj)
     [java]     12784    0.018    0.000    0.018    0.000 traceable_stack.py:119(peek_objs)
     [java]     19178    0.005    0.000    0.005    0.000 traceable_stack.py:121(<genexpr>)
     [java]     18480    0.007    0.000    0.007    0.000 traceable_stack.py:123(peek_traceable_objs)
     [java]     23588    0.009    0.000    0.014    0.000 traceable_stack.py:127(__len__)
     [java]       370    0.000    0.000    0.000    0.000 traceable_stack.py:131(copy)
     [java]      9326    0.005    0.000    0.005    0.000 traceable_stack.py:30(__init__)
     [java]      2932    0.021    0.000    0.040    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
     [java]      6394    0.009    0.000    0.012    0.000 traceable_stack.py:75(copy_metadata)
     [java]      3452    0.001    0.000    0.001    0.000 traceable_stack.py:83(__init__)
     [java]      2932    0.008    0.000    0.050    0.000 traceable_stack.py:92(push_obj)
     [java]         4    0.000    0.000    0.000    0.000 training.py:131(is_functional_model_init_params)
     [java]         4    0.000    0.000    0.003    0.001 training.py:1922(trainable_weights)
     [java]         2    0.000    0.000    0.002    0.001 training.py:216(__new__)
     [java]         2    0.000    0.000    0.001    0.000 training.py:225(__init__)
     [java]         2    0.000    0.000    0.004    0.002 training.py:2311(state_updates)
     [java]       180    0.002    0.000    0.094    0.001 training.py:2386(layers)
     [java]         2    0.000    0.000    0.000    0.000 training.py:2426(_set_save_spec)
     [java] 124514/25144    0.364    0.000    2.695    0.000 training.py:306(__setattr__)
     [java]    149060    0.121    0.000    0.275    0.000 training.py:311(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 training.py:576(_reset_compile_cache)
     [java]      8280    0.006    0.000    0.006    0.000 training_arrays_v1.py:459(_get_model_feed)
     [java]      8280    0.365    0.000   60.905    0.007 training_arrays_v1.py:46(model_iteration)
     [java]      8280    0.009    0.000    0.181    0.000 training_arrays_v1.py:478(_get_num_samples_or_steps)
     [java]      8280    0.046    0.000    0.173    0.000 training_arrays_v1.py:486(_prepare_feed_values)
     [java]      8280    0.009    0.000    0.034    0.000 training_arrays_v1.py:551(_make_execution_function)
     [java]      8280    0.004    0.000    0.004    0.000 training_arrays_v1.py:558(_update_sample_weight_mode)
     [java]      8280    0.102    0.000   71.465    0.009 training_arrays_v1.py:695(predict)
     [java]      8282    0.018    0.000    0.043    0.000 training_utils.py:172(get_input_shape_and_dtype)
     [java]      8282    0.008    0.000    0.011    0.000 training_utils.py:186(_is_graph_model)
     [java]      8282    0.025    0.000    0.093    0.000 training_utils.py:206(get_static_batch_size)
     [java]         4    0.000    0.000    0.000    0.000 training_utils_v1.py:1069(get_loss_function)
     [java]     16560    0.040    0.000    0.267    0.000 training_utils_v1.py:1173(check_steps_argument)
     [java]         2    0.000    0.000    0.000    0.000 training_utils_v1.py:1287(prepare_sample_weight_modes)
     [java]         2    0.000    0.000    0.000    0.000 training_utils_v1.py:1327(prepare_loss_functions)
     [java]         2    0.000    0.000    0.000    0.000 training_utils_v1.py:1369(prepare_loss_weights)
     [java]         2    0.000    0.000    0.000    0.000 training_utils_v1.py:1394(<listcomp>)
     [java]      8280    0.009    0.000    0.041    0.000 training_utils_v1.py:1418(is_eager_dataset_or_iterator)
     [java]      8280    0.048    0.000    0.109    0.000 training_utils_v1.py:1590(__init__)
     [java]      8280    0.023    0.000    0.023    0.000 training_utils_v1.py:1604(<listcomp>)
     [java]      8280    0.003    0.000    0.003    0.000 training_utils_v1.py:1658(as_list)
     [java]     16560    0.005    0.000    0.016    0.000 training_utils_v1.py:194(get_copy_pool)
     [java]     16560    0.051    0.000    0.082    0.000 training_utils_v1.py:235(__init__)
     [java]     16560    0.036    0.000    0.081    0.000 training_utils_v1.py:245(create)
     [java]     16560    0.024    0.000    0.024    0.000 training_utils_v1.py:253(aggregate)
     [java]     16560    0.016    0.000    0.022    0.000 training_utils_v1.py:296(finalize)
     [java]      8280    0.098    0.000    0.911    0.000 training_utils_v1.py:312(create)
     [java]     24840    0.020    0.000    0.088    0.000 training_utils_v1.py:316(<lambda>)
     [java]      8280    0.028    0.000    0.346    0.000 training_utils_v1.py:338(aggregate)
     [java]      8280    0.042    0.000    0.279    0.000 training_utils_v1.py:343(finalize)
     [java]      8280    0.005    0.000    0.005    0.000 training_utils_v1.py:346(<listcomp>)
     [java]      8280    0.018    0.000    0.172    0.000 training_utils_v1.py:361(check_num_samples)
     [java]      8280    0.021    0.000    0.048    0.000 training_utils_v1.py:397(standardize_single_array)
     [java]      8280    0.091    0.000    0.192    0.000 training_utils_v1.py:418(standardize_input_data)
     [java]      8280    0.011    0.000    0.059    0.000 training_utils_v1.py:483(<listcomp>)
     [java]         4    0.000    0.000    0.000    0.000 training_utils_v1.py:714(collect_per_output_metric_info)
     [java]         4    0.000    0.000    0.000    0.000 training_utils_v1.py:744(<listcomp>)
     [java]     24840    0.025    0.000    0.025    0.000 training_utils_v1.py:76(__init__)
     [java]     16560    0.025    0.000    0.169    0.000 training_utils_v1.py:944(has_symbolic_tensors)
     [java]     16560    0.026    0.000    0.083    0.000 training_utils_v1.py:950(has_tensors)
     [java]     16560    0.012    0.000    0.027    0.000 training_utils_v1.py:956(<genexpr>)
     [java]      8280    0.034    0.000    0.066    0.000 training_v1.py:1313(_check_call_args)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1332(_set_optimizer)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1386(_validate_compile_param_for_distribution_strategy)
     [java]         2    0.000    0.000    0.001    0.000 training_v1.py:1413(_process_target_tensor_for_compile)
     [java]         2    0.000    0.000    0.001    0.001 training_v1.py:143(__init__)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1450(<listcomp>)
     [java]         2    0.000    0.000    0.608    0.304 training_v1.py:1508(_compile_weights_loss_and_weighted_metrics)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:1545(_prepare_skip_target_masks)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:1556(<listcomp>)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:1558(_prepare_output_masks)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:1560(<listcomp>)
     [java]         2    0.000    0.000    0.608    0.304 training_v1.py:1562(_prepare_total_loss)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:165(_init_batch_counters)
     [java]      8280    0.006    0.000    0.011    0.000 training_v1.py:1657(_get_callback_model)
     [java]      8280    0.039    0.000    0.258    0.000 training_v1.py:1680(_validate_or_infer_batch_size)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1772(_prepare_sample_weights)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1786(_cache_output_metric_attributes)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:1829(_init_metric_attributes)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:1835(_set_per_output_metric_attributes)
     [java]         2    0.000    0.000    0.047    0.023 training_v1.py:1857(_set_metric_attributes)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:1886(_handle_per_output_metrics)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:1912(_handle_metrics)
     [java]      8280    0.006    0.000    0.014    0.000 training_v1.py:2060(_make_predict_function)
     [java]      8280    0.010    0.000    0.025    0.000 training_v1.py:2076(_make_execution_function)
     [java]      8280    0.059    0.000   10.196    0.001 training_v1.py:2200(_standardize_user_data)
     [java]      8280    0.126    0.000    5.582    0.001 training_v1.py:2338(_standardize_tensors)
     [java]         2    0.000    0.000    0.673    0.336 training_v1.py:238(compile)
     [java]      8280    0.029    0.000    0.200    0.000 training_v1.py:2384(_type_spec_from_value)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2678(_targets)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2681(<listcomp>)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:2733(sample_weights)
     [java]         2    0.000    0.000    0.000    0.000 training_v1.py:2735(<listcomp>)
     [java]      8280    0.004    0.000    0.004    0.000 training_v1.py:2746(_maybe_load_initial_epoch_from_ckpt)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2889(__init__)
     [java]        16    0.000    0.000    0.000    0.000 training_v1.py:2925(output)
     [java]        12    0.000    0.000    0.000    0.000 training_v1.py:2929(output_name)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2933(shape)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:2937(loss_fn)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2941(loss_weight)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2945(loss_weight)
     [java]        40    0.000    0.000    0.000    0.000 training_v1.py:2949(training_target)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:2953(training_target)
     [java]         4    0.000    0.000    0.003    0.001 training_v1.py:2957(create_training_target)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3007(output_loss_metric)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3011(output_loss_metric)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:3015(sample_weight)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3023(sample_weight_mode)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3027(sample_weight_mode)
     [java]     49704    0.015    0.000    0.015    0.000 training_v1.py:3031(should_skip_target)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:3034(should_skip_target_weights)
     [java]        12    0.000    0.000    0.000    0.000 training_v1.py:3038(has_training_target)
     [java]     49688    0.029    0.000    0.029    0.000 training_v1.py:3045(loss_name)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3082(populate_sample_weight)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:3126(__init__)
     [java]        12    0.000    0.000    0.000    0.000 training_v1.py:3131(target)
     [java]         8    0.000    0.000    0.000    0.000 training_v1.py:3139(skip_target_weights)
     [java]      8280    0.008    0.000    0.015    0.000 training_v1.py:3148(_convert_scipy_sparse_tensor)
     [java]     24840    2.241    0.000   18.722    0.001 training_v1.py:3184(_get_metrics_from_layers)
     [java]         4    0.000    0.000    0.000    0.000 training_v1.py:327(<genexpr>)
     [java]     24840    0.064    0.000   18.797    0.001 training_v1.py:489(metrics)
     [java]     24840    0.119    0.000   19.044    0.001 training_v1.py:504(metrics_names)
     [java]     24840    0.057    0.000    0.100    0.000 training_v1.py:520(<listcomp>)
     [java]     24840    0.009    0.000    0.009    0.000 training_v1.py:527(<listcomp>)
     [java]     16574    0.038    0.000    9.024    0.001 training_v1.py:530(run_eagerly)
     [java]      8280    0.042    0.000    4.726    0.001 training_v1.py:573(_select_training_loop)
     [java]      8280    0.074    0.000   76.478    0.009 training_v1.py:916(predict)
     [java]        23    0.000    0.000    0.000    0.000 transformer.py:116(__init__)
     [java]        12    0.000    0.000    0.000    0.000 transformer.py:124(__enter__)
     [java]        12    0.000    0.000    0.000    0.000 transformer.py:128(__exit__)
     [java]        32    0.000    0.000    0.000    0.000 transformer.py:131(enter)
     [java]        17    0.000    0.000    0.000    0.000 transformer.py:134(exit)
     [java]         1    0.000    0.000    0.000    0.000 transformer.py:137(stack)
     [java]       122    0.000    0.000    0.000    0.000 transformer.py:141(level)
     [java]       283    0.000    0.000    0.000    0.000 transformer.py:149(__iter__)
     [java]        47    0.000    0.000    0.000    0.000 transformer.py:152(__getattr__)
     [java]        23    0.000    0.000    0.000    0.000 transformer.py:155(__setattr__)
     [java]        22    0.000    0.000    0.000    0.000 transformer.py:191(__init__)
     [java]       472    0.000    0.000    0.000    0.000 transformer.py:194(__getitem__)
     [java]        22    0.000    0.000    0.000    0.000 transformer.py:251(__init__)
     [java]    145/23    0.000    0.000    0.027    0.001 transformer.py:282(visit_block)
     [java]   2622/22    0.007    0.000    0.061    0.003 transformer.py:421(visit)
     [java]         1    0.000    0.000    0.000    0.000 transformer.py:55(__init__)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:122(<listcomp>)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:150(__init__)
     [java]         1    0.000    0.000    0.026    0.026 transpiler.py:167(create)
     [java]         2    0.000    0.000    0.000    0.000 transpiler.py:190(instantiate)
     [java]         2    0.000    0.000    0.000    0.000 transpiler.py:202(<genexpr>)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:251(get_transformed_name)
     [java]         2    0.000    0.000    0.115    0.058 transpiler.py:270(transform)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:290(_erase_arg_defaults)
     [java]         1    0.000    0.000    0.089    0.089 transpiler.py:328(transform_function)
     [java]         1    0.000    0.000    0.008    0.008 transpiler.py:38(_wrap_into_factory)
     [java]         1    0.000    0.000    0.000    0.000 transpiler.py:430(_cached_factory)
     [java]         2    0.000    0.000    0.115    0.057 transpiler.py:436(transform_function)
     [java]         1    0.000    0.000    0.000    0.000 types.py:100(prepare_class)
     [java]         1    0.000    0.000    0.000    0.000 types.py:132(_calculate_meta)
     [java]       677    0.000    0.000    0.000    0.000 types.py:171(__get__)
     [java]         1    0.000    0.000    0.000    0.000 types.py:69(new_class)
     [java]         1    0.000    0.000    0.000    0.000 types.py:79(resolve_bases)
     [java]         9    0.000    0.000    0.001    0.000 unparser.py:115(_Assign)
     [java]         6    0.000    0.000    0.000    0.000 unparser.py:14(interleave)
     [java]         3    0.000    0.000    0.000    0.000 unparser.py:141(_Return)
     [java]         1    0.000    0.000    0.000    0.000 unparser.py:223(_Raise)
     [java]         1    0.000    0.000    0.000    0.000 unparser.py:245(_Try)
     [java]         1    0.000    0.000    0.000    0.000 unparser.py:292(_ExceptHandler)
     [java]         1    0.000    0.000    0.001    0.001 unparser.py:32(__init__)
     [java]       3/1    0.000    0.000    0.001    0.001 unparser.py:346(_FunctionDef)
     [java]       3/1    0.000    0.000    0.001    0.001 unparser.py:352(__FunctionDef_helper)
     [java]        19    0.000    0.000    0.000    0.000 unparser.py:42(fill)
     [java]         1    0.000    0.000    0.001    0.001 unparser.py:422(_generic_With)
     [java]         1    0.000    0.000    0.001    0.001 unparser.py:435(_With)
     [java]       298    0.000    0.000    0.000    0.000 unparser.py:46(write)
     [java]         6    0.000    0.000    0.000    0.000 unparser.py:50(enter)
     [java]        68    0.000    0.000    0.000    0.000 unparser.py:520(_Name)
     [java]        11    0.000    0.000    0.000    0.000 unparser.py:531(_write_constant)
     [java]        11    0.000    0.000    0.000    0.000 unparser.py:538(_Constant)
     [java]         6    0.000    0.000    0.000    0.000 unparser.py:55(leave)
     [java]     189/1    0.000    0.000    0.001    0.001 unparser.py:59(dispatch)
     [java]       7/6    0.000    0.000    0.000    0.000 unparser.py:651(_Tuple)
     [java]         4    0.000    0.000    0.000    0.000 unparser.py:658(<lambda>)
     [java]         1    0.000    0.000    0.000    0.000 unparser.py:662(_UnaryOp)
     [java]     37/28    0.000    0.000    0.000    0.000 unparser.py:706(_Attribute)
     [java]      29/8    0.000    0.000    0.001    0.000 unparser.py:716(_Call)
     [java]         3    0.000    0.000    0.000    0.000 unparser.py:772(_arg)
     [java]         3    0.000    0.000    0.000    0.000 unparser.py:779(_arguments)
     [java]         4    0.000    0.000    0.000    0.000 unparser.py:837(_keyword)
     [java]         1    0.000    0.000    0.000    0.000 unparser.py:859(_withitem)
     [java]       9/8    0.000    0.000    0.000    0.000 unsupported_features_checker.py:32(visit_Attribute)
     [java]         1    0.000    0.000    0.000    0.000 unsupported_features_checker.py:60(verify)
     [java]         2    0.000    0.000    0.000    0.000 util.py:1095(__init__)
     [java]         2    0.000    0.000    0.000    0.000 util.py:1395(saver_with_op_caching)
     [java]         2    0.000    0.000    0.000    0.000 util.py:171(register_after_fork)
     [java]         1    0.000    0.000    0.000    0.000 util.py:186(__init__)
     [java]         6    0.000    0.000    0.000    0.000 util.py:48(debug)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:108(make_global_gradient_clipnorm_fn)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:129(make_gradient_clipvalue_fn)
     [java]      2944    0.103    0.000    0.205    0.000 utils.py:139(softmax)
     [java]      2760    0.095    0.000    0.844    0.000 utils.py:175(apply_dirichlet)
     [java]     20480    0.004    0.000    0.004    0.000 utils.py:180(get_coord)
     [java]      6144    0.001    0.000    0.001    0.000 utils.py:184(get_3D_coord)
     [java]      4096    0.006    0.000    0.007    0.000 utils.py:189(index_action)
     [java]      4096    0.002    0.000    0.002    0.000 utils.py:221(reverse_index_action)
     [java]      2760    0.109    0.000    0.342    0.000 utils.py:245(invert_state)
     [java]    790560   35.951    0.000   37.364    0.000 utils.py:253(format_positions)
     [java]      5612    3.546    0.001   41.309    0.007 utils.py:264(format_state)
     [java]         1    0.000    0.000    0.000    0.000 utils.py:72(get_random_hash)
     [java]         1    0.000    0.000    0.098    0.098 utils.py:75(add_to_dataset)
     [java]         2    0.000    0.000    0.000    0.000 utils.py:87(make_gradient_clipnorm_fn)
     [java]         2    0.000    0.000   11.810    5.905 utils.py:91(load_nn)
     [java]         1    0.000    0.000    0.000    0.000 variable_scope.py:1136(__init__)
     [java]       184    0.000    0.000    0.000    0.000 variable_scope.py:1187(use_resource)
     [java]       368    0.000    0.000    0.001    0.000 variable_scope.py:1223(set_use_resource)
     [java]         1    0.000    0.000    0.000    0.000 variable_scope.py:1421(__init__)
     [java]       184    0.000    0.000    0.001    0.000 variable_scope.py:1441(get_variable_scope_store)
     [java]       184    0.000    0.000    0.002    0.000 variable_scope.py:1454(get_variable_scope)
     [java]       254    0.002    0.000    0.995    0.004 variable_scope.py:2578(default_variable_creator)
     [java]       288    0.002    0.000    1.172    0.004 variable_scope.py:2637(default_variable_creator_v2)
     [java]         1    0.000    0.000    0.007    0.007 variables.py:100(transform)
     [java]        92    0.000    0.000    0.096    0.001 variables.py:1072(_run_op)
     [java]       864    0.001    0.000    0.002    0.000 variables.py:1132(_shared_name)
     [java]      1710    0.004    0.000    0.006    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
     [java]       254    0.001    0.000    0.997    0.004 variables.py:182(_variable_v1_call)
     [java]       254    0.001    0.000    0.996    0.004 variables.py:199(<lambda>)
     [java]        34    0.000    0.000    0.000    0.000 variables.py:22(ld)
     [java]       288    0.001    0.000    1.174    0.004 variables.py:223(_variable_v2_call)
     [java]       288    0.001    0.000    1.173    0.004 variables.py:237(<lambda>)
     [java] 1710/1168    0.006    0.000    2.548    0.002 variables.py:258(__call__)
     [java]       542    0.002    0.000    0.086    0.000 variables.py:2734(_try_guard_against_uninitialized_dependencies)
     [java]   990/542    0.006    0.000    0.019    0.000 variables.py:2773(_has_cycle)
     [java]      1436    0.000    0.000    0.001    0.000 variables.py:2782(<genexpr>)
     [java]   990/542    0.004    0.000    0.065    0.000 variables.py:2789(_safe_initial_value_from_tensor)
     [java]   988/542    0.007    0.000    0.061    0.000 variables.py:2812(_safe_initial_value_from_op)
     [java]         4    0.000    0.000    0.011    0.003 variables.py:3250(variables_initializer)
     [java]         4    0.000    0.000    0.000    0.000 variables.py:3272(<listcomp>)
     [java]       542    0.000    0.000    0.239    0.000 variables.py:3328(is_variable_initialized)
     [java]        51    0.000    0.000    0.005    0.000 variables.py:55(visit_Name)
     [java]   612/360    0.000    0.000    0.061    0.000 version_utils.py:109(<genexpr>)
     [java]         2    0.000    0.000    0.000    0.000 version_utils.py:125(is_v1_layer_or_model)
     [java]         2    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
     [java]       178    0.001    0.000    0.097    0.001 version_utils.py:63(__new__)
     [java]       180    0.000    0.000    0.012    0.000 version_utils.py:84(should_use_v2)
     [java]   487/180    0.081    0.000    0.081    0.000 version_utils.py:98(swap_class)
     [java]         1    0.000    0.000    0.002    0.002 warnings.py:117(_formatwarnmsg)
     [java]         1    0.000    0.000    0.002    0.002 warnings.py:20(_showwarnmsg_impl)
     [java]         1    0.000    0.000    0.002    0.002 warnings.py:35(_formatwarnmsg_impl)
     [java]         1    0.000    0.000    0.000    0.000 warnings.py:403(__init__)
     [java]         1    0.000    0.000    0.002    0.002 warnings.py:96(_showwarnmsg)
     [java]       145    0.000    0.000    0.001    0.000 weakref.py:105(__init__)
     [java]         2    0.000    0.000    0.000    0.000 weakref.py:106(remove)
     [java]        19    0.000    0.000    0.000    0.000 weakref.py:122(_commit_removals)
     [java]        16    0.000    0.000    0.000    0.000 weakref.py:162(__setitem__)
     [java]        23    0.000    0.000    0.000    0.000 weakref.py:207(items)
     [java]       145    0.000    0.000    0.000    0.000 weakref.py:287(update)
     [java]        16    0.000    0.000    0.000    0.000 weakref.py:345(__new__)
     [java]        16    0.000    0.000    0.000    0.000 weakref.py:350(__init__)
     [java]         9    0.000    0.000    0.000    0.000 weakref.py:365(__init__)
     [java]       718    0.001    0.000    0.001    0.000 weakref.py:417(__setitem__)
     [java]     26995    0.030    0.000    0.043    0.000 weakref.py:441(get)
     [java]       534    0.001    0.000    0.001    0.000 weakref.py:493(pop)
     [java]      1416    0.005    0.000    0.005    0.000 {built-in method FromString}
     [java]     35018    0.016    0.000    0.016    0.000 {built-in method __new__ of type object at 0x7faa785429c0}
     [java]   2458605    0.749    0.000    0.824    0.000 {built-in method _abc._abc_instancecheck}
     [java] 8781/5473    0.069    0.000    0.071    0.000 {built-in method _abc._abc_subclasscheck}
     [java]        19    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
     [java]         8    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
     [java]         4    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
     [java]        60    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method _imp.extension_suffixes}
     [java]         4    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
     [java]        60    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
     [java]     11224    0.003    0.000    0.003    0.000 {built-in method _operator.index}
     [java]         1    0.009    0.009    0.009    0.009 {built-in method _pickle.dump}
     [java]         3    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
     [java]       244    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
     [java]     12260    0.004    0.000    0.004    0.000 {built-in method _thread.get_ident}
     [java]         7    0.001    0.000    0.001    0.000 {built-in method _thread.start_new_thread}
     [java]         2    0.000    0.000    0.002    0.001 {built-in method _warnings.warn}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method atexit.register}
     [java]        19    0.001    0.000    0.002    0.000 {built-in method builtins.__build_class__}
     [java]         1    0.000    0.000    0.003    0.003 {built-in method builtins.__import__}
     [java]     84159    0.044    0.000    0.358    0.000 {built-in method builtins.all}
     [java] 78930/78880    0.380    0.000   13.490    0.000 {built-in method builtins.any}
     [java]     27851    0.007    0.000    0.007    0.000 {built-in method builtins.callable}
     [java]        37    0.002    0.000    0.002    0.000 {built-in method builtins.compile}
     [java]        36    0.000    0.000    0.000    0.000 {built-in method builtins.dir}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method builtins.eval}
     [java]         5    0.000    0.000    0.002    0.000 {built-in method builtins.exec}
     [java] 9387586/9386872    1.742    0.000    1.766    0.000 {built-in method builtins.getattr}
     [java]       108    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
     [java]   2760707    0.915    0.000    0.923    0.000 {built-in method builtins.hasattr}
     [java] 11574/11482    0.002    0.000    0.002    0.000 {built-in method builtins.hash}
     [java]   8898061    1.300    0.000    1.300    0.000 {built-in method builtins.id}
     [java]  13913947    3.113    0.000    4.608    0.000 {built-in method builtins.isinstance}
     [java]      1349    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
     [java]     23986    0.006    0.000    0.006    0.000 {built-in method builtins.iter}
     [java] 3839753/2696112    0.873    0.000    1.239    0.000 {built-in method builtins.len}
     [java]      9989    0.008    0.000    0.008    0.000 {built-in method builtins.max}
     [java]      9033    0.010    0.000    0.010    0.000 {built-in method builtins.min}
     [java] 291532/145124    0.129    0.000    1.604    0.000 {built-in method builtins.next}
     [java]       404    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
     [java]        27    0.000    0.000    0.000    0.000 {built-in method builtins.print}
     [java]       553    0.001    0.000    0.015    0.000 {built-in method builtins.repr}
     [java]     20134    0.004    0.000    0.004    0.000 {built-in method builtins.setattr}
     [java]     10778    0.015    0.000    0.015    0.000 {built-in method builtins.sorted}
     [java]        12    0.000    0.000    0.000    0.000 {built-in method from_bytes}
     [java]      1328    0.000    0.000    0.000    0.000 {built-in method from_iterable}
     [java]        51    0.000    0.000    0.000    0.000 {built-in method fromkeys}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method h5py.h5.get_config}
     [java]       282    0.002    0.000    0.002    0.000 {built-in method h5py.h5t.py_create}
     [java]         6    0.002    0.000    0.002    0.000 {built-in method io.open_code}
     [java]         4    0.002    0.000    0.002    0.000 {built-in method io.open}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method jpy_stdout.write}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method marshal.dumps}
     [java]         4    0.001    0.000    0.001    0.000 {built-in method marshal.loads}
     [java]        52    0.000    0.000    0.000    0.000 {built-in method math.isinf}
     [java]        52    0.000    0.000    0.000    0.000 {built-in method math.isnan}
     [java]        52    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
     [java]      8388    0.036    0.000    0.036    0.000 {built-in method numpy.arange}
     [java]      1088    0.003    0.000    0.003    0.000 {built-in method numpy.array}
     [java]     11133    0.003    0.000    0.003    0.000 {built-in method numpy.asanyarray}
     [java]     18492    0.131    0.000    0.244    0.000 {built-in method numpy.asarray}
     [java] 56438/49774    0.381    0.000    0.807    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     [java]     16745    0.008    0.000    0.008    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
     [java]     25458    0.062    0.000    0.062    0.000 {built-in method numpy.empty}
     [java]    807403    1.058    0.000    1.058    0.000 {built-in method numpy.zeros}
     [java]        38    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
     [java]         4    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method posix.open}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method posix.pipe}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method posix.replace}
     [java]        28    0.002    0.000    0.002    0.000 {built-in method posix.stat}
     [java]         3    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method sys.audit}
     [java]      2072    0.002    0.000    0.002    0.000 {built-in method sys.exc_info}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
     [java]         4    0.000    0.000    0.000    0.000 {built-in method sys.intern}
     [java]        43    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._op_def_registry.get}
     [java]        16    2.344    0.146    2.344    0.146 {built-in method tensorflow.python._pywrap_tf_session.ExtendSession}
     [java]      1416    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
     [java]      1448    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
     [java]      3602    0.031    0.000    0.031    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
     [java]       368    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
     [java]       185    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
     [java]      1190    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
     [java]       750    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
     [java]      8217    0.025    0.000    0.025    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
     [java]      8379    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteSessionOptions}
     [java]      9240    0.174    0.000    0.174    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
     [java]       184    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
     [java]      3245    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
     [java]       184    0.018    0.000    0.018    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
     [java]       185    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
     [java]      3315    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
     [java]       542    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
     [java]       184    0.012    0.000    0.012    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
     [java]      3604    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
     [java]      4775    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
     [java]       185    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
     [java]      9240    0.072    0.000    0.072    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
     [java]         1    0.759    0.759    0.759    0.759 {built-in method tensorflow.python._pywrap_tf_session.TF_NewSessionRef}
     [java]      4978    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
     [java]      3418    0.041    0.000    0.050    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
     [java]       988    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetControlInputs_wrapper}
     [java]      2416    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetControlOutputs_wrapper}
     [java]     14182    0.013    0.000    0.013    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
     [java]      9240    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
     [java]     33656    0.025    0.000    0.025    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
     [java]      4022    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
     [java]      8942    0.019    0.000    0.019    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
     [java]       988    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationToNodeDef}
     [java]         2    0.809    0.405    0.809    0.405 {built-in method tensorflow.python._pywrap_tf_session.TF_SessionMakeCallable}
     [java]      8280   28.418    0.003   28.418    0.003 {built-in method tensorflow.python._pywrap_tf_session.TF_SessionRunCallable}
     [java]        14    1.997    0.143    1.997    0.143 {built-in method tensorflow.python._pywrap_tf_session.TF_SessionRun_wrapper}
     [java]     14334    0.057    0.000    0.057    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
     [java]        92    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session._TF_NewSessionOptions}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session._TF_SetConfig}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session._TF_SetTarget}
     [java]      8648    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringCounterCellIncrementBy}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
     [java]      8646    0.058    0.000    0.058    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
     [java]         1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellCounter0}
     [java]      6399    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
     [java]      2202    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
     [java]        92    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
     [java]      1084    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
     [java]      1644    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
     [java]      1644    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
     [java]       484    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
     [java]      9311    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
     [java]       484    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
     [java]         2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_IsMlirBridgeEnabled}
     [java]         1    0.097    0.097    0.097    0.097 {built-in method tensorflow.python._pywrap_tfe.TF_ListPhysicalDevices}
     [java]      8832    0.018    0.000    0.018    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
     [java]    203685    0.332    0.000    0.338    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
     [java]     51530    0.021    0.000    0.021    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
     [java]     84284    0.036    0.000    0.036    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
     [java]     51164    0.020    0.000    0.020    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
     [java]     51720    0.022    0.000    0.022    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
     [java]     52268    0.027    0.000    0.027    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
     [java]     51164    0.031    0.000    0.031    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
     [java]     35742    0.054    0.000    0.054    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
     [java]    263066    0.190    0.000    0.190    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
     [java]     67724    0.027    0.000    0.027    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
     [java]     12197    0.092    0.000    0.093    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
     [java]     19418    0.007    0.000    0.007    0.000 {built-in method time.time}
     [java]         2    0.000    0.000    0.000    0.000 {function Random.seed at 0x7faa705b8790}
     [java]     18480    0.054    0.000    0.054    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     16800    0.037    0.000    0.037    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     46270    0.020    0.000    0.020    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]      3288    0.025    0.000    0.025    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]     18308    0.056    0.000    0.056    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]      1888    0.002    0.000    0.002    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
     [java]         4    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method '__enter__' of '_io._IOBase' objects}
     [java]         7    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
     [java]        10    0.090    0.009    0.090    0.009 {method '__exit__' of '_io._IOBase' objects}
     [java]     19470    0.004    0.000    0.004    0.000 {method '__exit__' of '_thread.RLock' objects}
     [java]       112    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
     [java]      1372    0.000    0.000    0.000    0.000 {method '__exit__' of 'h5py._objects.FastRLock' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method '__prepare__' of 'type' objects}
     [java]     27797    0.017    0.000    0.017    0.000 {method 'acquire' of '_thread.lock' objects}
     [java]   6053506    1.157    0.000    1.160    0.000 {method 'add' of 'set' objects}
     [java]        80    0.000    0.000    0.001    0.000 {method 'all' of 'numpy.ndarray' objects}
     [java]         7    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
     [java]         8    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
     [java]    277740    0.053    0.000    0.053    0.000 {method 'append' of 'list' objects}
     [java]        92    0.000    0.000    0.000    0.000 {method 'argmax' of 'numpy.ndarray' objects}
     [java]       290    0.001    0.000    0.001    0.000 {method 'astype' of 'numpy.ndarray' objects}
     [java]      9688    0.002    0.000    0.002    0.000 {method 'bit_length' of 'int' objects}
     [java]       516    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
     [java]       618    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
     [java]      2760    0.058    0.000    0.058    0.000 {method 'copy' of 'numpy.ndarray' objects}
     [java]       172    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
     [java]      2760    0.041    0.000    0.041    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
     [java]      1317    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
     [java]         4    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
     [java]      2760    0.636    0.000    0.699    0.000 {method 'dirichlet' of 'numpy.random.mtrand.RandomState' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
     [java]      3559    0.001    0.000    0.002    0.000 {method 'discard' of 'set' objects}
     [java]     24501    0.011    0.000    0.011    0.000 {method 'encode' of 'str' objects}
     [java]         8    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
     [java]       215    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
     [java]         4    0.000    0.000    0.000    0.000 {method 'extend' of 'bytearray' objects}
     [java]        85    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
     [java]        92    0.001    0.000    0.001    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
     [java]      1508    0.002    0.000    0.002    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
     [java]   4362768    0.515    0.000    0.517    0.000 {method 'extend' of 'list' objects}
     [java]   1714972    0.793    0.000    3.639    0.000 {method 'extendleft' of 'collections.deque' objects}
     [java]       201    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
     [java]       392    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
     [java]        28    0.000    0.000    0.000    0.000 {method 'findall' of 're.Pattern' objects}
     [java]      2760    0.012    0.000    0.012    0.000 {method 'flatten' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'flush' of '_io._IOBase' objects}
     [java]       386    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
     [java]     81055    0.028    0.000    0.029    0.000 {method 'get' of 'dict' objects}
     [java]     15913    0.003    0.000    0.003    0.000 {method 'getrandbits' of '_random.Random' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.StringIO' objects}
     [java]        20    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
     [java]       172    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
     [java]       864    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
     [java]     11731    0.004    0.000    0.004    0.000 {method 'insert' of 'list' objects}
     [java]        92    0.000    0.000    0.000    0.000 {method 'intersection' of 'set' objects}
     [java]         5    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
     [java]         6    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
     [java]      3142    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
     [java]       170    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
     [java]        48    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.ndarray' objects}
     [java]         8    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
     [java]     30804    0.008    0.000    0.008    0.000 {method 'items' of 'dict' objects}
     [java]   612/611    0.001    0.000    0.001    0.000 {method 'join' of 'str' objects}
     [java]      2629    0.001    0.000    0.001    0.000 {method 'keys' of 'dict' objects}
     [java]     11420    0.004    0.000    0.004    0.000 {method 'lower' of 'str' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
     [java]     22893    0.048    0.000    0.048    0.000 {method 'match' of 're.Pattern' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'mean' of 'numpy.ndarray' objects}
     [java]     62978    0.014    0.000    0.014    0.000 {method 'pop' of 'dict' objects}
     [java]   2222810    0.332    0.000    0.332    0.000 {method 'pop' of 'list' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
     [java]   4439909    0.475    0.000    0.475    0.000 {method 'popleft' of 'collections.deque' objects}
     [java]      2761    0.010    0.000    0.010    0.000 {method 'rand' of 'numpy.random.mtrand.RandomState' objects}
     [java]       955    0.001    0.000    0.001    0.000 {method 'ravel' of 'numpy.ndarray' objects}
     [java]         5    0.005    0.001    0.005    0.001 {method 'read' of '_io.BufferedReader' objects}
     [java]         3    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
     [java]        51    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
     [java]         2    0.001    0.000    0.001    0.000 {method 'readlines' of '_io._IOBase' objects}
     [java]      8100    0.068    0.000    0.070    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     [java]     18520    0.004    0.000    0.004    0.000 {method 'release' of '_thread.lock' objects}
     [java]       257    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
     [java]       192    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
     [java]    804452    0.485    0.000    0.485    0.000 {method 'reshape' of 'numpy.ndarray' objects}
     [java]       524    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
     [java]      2577    0.001    0.000    0.001    0.000 {method 'rpartition' of 'str' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
     [java]        79    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
     [java]         2    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
     [java]       460    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
     [java]         9    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
     [java]       456    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
     [java]       677    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
     [java]       539    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
     [java]      5520    0.003    0.000    0.003    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
     [java]      1890    0.002    0.000    0.002    0.000 {method 'startswith' of 'bytes' objects}
     [java]     24974    0.009    0.000    0.009    0.000 {method 'startswith' of 'str' objects}
     [java]        22    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
     [java]        71    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     [java]      1530    0.002    0.000    0.004    0.000 {method 'throw' of 'generator' objects}
     [java]         3    0.000    0.000    0.000    0.000 {method 'to_bytes' of 'int' objects}
     [java]       252    0.000    0.000    0.000    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
     [java]         6    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
     [java]      5612    0.007    0.000    0.007    0.000 {method 'transpose' of 'numpy.ndarray' objects}
     [java]      2990    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}
     [java]       861    0.000    0.000    0.001    0.000 {method 'update' of 'set' objects}
     [java]        46    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
     [java]       922    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
     [java]      8248    0.002    0.000    0.002    0.000 {method 'values' of 'dict' objects}
     [java]       968    0.000    0.000    0.000    0.000 {method 'values' of 'mappingproxy' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'write' of '_io.FileIO' objects}
     [java]       317    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
     [java]         1    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
     [java]         1    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendBoolArrayToTensorProto}
     [java]       892    0.003    0.000    0.003    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
     [java]        60    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
     [java]         2    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
     [java] 
     [java] 

BUILD SUCCESSFUL
Total time: 2 minutes 19 seconds
